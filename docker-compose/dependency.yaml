version: '3.8'

services:
  minio:
    image: minio/minio:latest
    container_name: minio-s3
    restart: unless-stopped
    ports:
      - "9300:9000"      # MinIO API端口
      - "9301:9001"      # MinIO控制台端口
    environment:
      # MinIO访问凭证
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
      # MinIO区域设置
      MINIO_REGION: us-east-1
      # 控制台地址
      MINIO_BROWSER_REDIRECT_URL: http://localhost:9001
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
      - minio_config:/root/.minio
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
      start_period: 20s
    networks:
      - app-network

  # 可选：创建默认存储桶的初始化容器
  minio-init:
    image: minio/mc:latest
    container_name: minio-init
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 10;
      /usr/bin/mc alias set myminio http://minio:9000 minioadmin minioadmin123;
      /usr/bin/mc mb myminio/default-bucket --ignore-existing;
      /usr/bin/mc anonymous set download myminio/default-bucket;
      echo 'MinIO初始化完成';
      "
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    container_name: redis-cache
    restart: unless-stopped
    ports:
      - "6979:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app-network

volumes:
  minio_data:
    driver: local
  minio_config:
    driver: local
  redis_data:
    driver: local

networks:
  app-network:
    driver: bridge
