server:
  port: "localhost:8080"
  mode: "release"  # gin模式: debug, release, test
  debug: true
  static: 
    enabled: true
    root: "../app/dist/build/h5"
    path: "/static"
  cors:
    enabled: true
    allow_all_origins: false
    allow_origins:
      - "http://localhost:3000"
      - "http://localhost:8080"
      - "http://127.0.0.1:3000"
      - "http://127.0.0.1:8080"
    allow_methods:
      - "GET"
      - "POST"
      - "PUT"
      - "DELETE"
      - "OPTIONS"
      - "HEAD"
      - "PATCH"
    allow_headers:
      - "Origin"
      - "Content-Type"
      - "Accept"
      - "Authorization"
      - "X-Requested-With"
      - "Cache-Control"
    expose_headers: []
    allow_credentials: true
    max_age: 86400  # 24小时

database:
  driver: "mysql"
  dsn: "qcqcqc:qcqcqc@tcp(localhost:33060)/go-backend-app-pure?charset=utf8mb4&parseTime=True&loc=Local"
  max_idle_conns: 10
  max_open_conns: 100
  conn_max_lifetime: "1h"  # 连接最大生命周期

logging:
  level: "debug"    # 日志级别: debug, info, warn, error, fatal
  prefix: "GO-BACKEND"    # 日志前缀

redis:
  addr: "localhost:6979"        # Redis服务器地址
  password: ""                  # Redis密码（如果有的话）
  db: 0                        # Redis数据库索引
  pool_size: 10                # 连接池大小
  min_idle_conns: 5            # 最小空闲连接数
  read_timeout: 3              # 读超时（秒）
  write_timeout: 3             # 写超时（秒）
  idle_timeout: 300            # 空闲超时（秒）

s3:
  endpoint: "http://localhost:9300"  # MinIO S3端点URL
  region: "us-east-1"          # AWS区域
  access_key_id: "minioadmin"  # MinIO访问密钥ID
  secret_access_key: "minioadmin123"  # MinIO访问密钥
  session_token: ""            # AWS会话令牌（可选）
  bucket: "default-bucket"     # 默认存储桶
  use_ssl: false              # MinIO本地开发不使用HTTPS
  force_path_style: true      # MinIO需要强制使用路径样式URL
  disable_ssl: true           # 本地开发禁用SSL
  timeout: 30                 # 超时时间（秒）
  max_retries: 3              # 最大重试次数
