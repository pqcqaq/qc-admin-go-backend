// Code generated by ent, DO NOT EDIT.

package runtime

import (
	"go-backend/database/ent/address"
	"go-backend/database/ent/apiauth"
	"go-backend/database/ent/area"
	"go-backend/database/ent/attachment"
	"go-backend/database/ent/clientdevice"
	"go-backend/database/ent/credential"
	"go-backend/database/ent/logging"
	"go-backend/database/ent/loginrecord"
	"go-backend/database/ent/oauthapplication"
	"go-backend/database/ent/oauthauthorizationcode"
	"go-backend/database/ent/oauthprovider"
	"go-backend/database/ent/oauthstate"
	"go-backend/database/ent/oauthtoken"
	"go-backend/database/ent/oauthuser"
	"go-backend/database/ent/oauthuserauthorization"
	"go-backend/database/ent/permission"
	"go-backend/database/ent/role"
	"go-backend/database/ent/rolepermission"
	"go-backend/database/ent/scan"
	"go-backend/database/ent/scope"
	"go-backend/database/ent/station"
	"go-backend/database/ent/subway"
	"go-backend/database/ent/subwaystation"
	"go-backend/database/ent/systemmonitor"
	"go-backend/database/ent/user"
	"go-backend/database/ent/userrole"
	"go-backend/database/ent/verifycode"
	"go-backend/database/ent/workflowapplication"
	"go-backend/database/ent/workflowedge"
	"go-backend/database/ent/workflowexecution"
	"go-backend/database/ent/workflowexecutionlog"
	"go-backend/database/ent/workflownode"
	"go-backend/database/ent/workflownodeexecution"
	"go-backend/database/ent/workflowversion"
	"go-backend/database/schema"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	apiauthMixin := schema.APIAuth{}.Mixin()
	apiauthMixinHooks0 := apiauthMixin[0].Hooks()
	apiauthMixinHooks1 := apiauthMixin[1].Hooks()
	apiauthMixinHooks2 := apiauthMixin[2].Hooks()
	apiauth.Hooks[0] = apiauthMixinHooks0[0]
	apiauth.Hooks[1] = apiauthMixinHooks0[1]
	apiauth.Hooks[2] = apiauthMixinHooks1[0]
	apiauth.Hooks[3] = apiauthMixinHooks2[0]
	apiauthMixinInters1 := apiauthMixin[1].Interceptors()
	apiauth.Interceptors[0] = apiauthMixinInters1[0]
	apiauthMixinFields0 := apiauthMixin[0].Fields()
	_ = apiauthMixinFields0
	apiauthFields := schema.APIAuth{}.Fields()
	_ = apiauthFields
	// apiauthDescCreateTime is the schema descriptor for create_time field.
	apiauthDescCreateTime := apiauthMixinFields0[1].Descriptor()
	// apiauth.DefaultCreateTime holds the default value on creation for the create_time field.
	apiauth.DefaultCreateTime = apiauthDescCreateTime.Default.(func() time.Time)
	// apiauthDescUpdateTime is the schema descriptor for update_time field.
	apiauthDescUpdateTime := apiauthMixinFields0[3].Descriptor()
	// apiauth.DefaultUpdateTime holds the default value on creation for the update_time field.
	apiauth.DefaultUpdateTime = apiauthDescUpdateTime.Default.(func() time.Time)
	// apiauth.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	apiauth.UpdateDefaultUpdateTime = apiauthDescUpdateTime.UpdateDefault.(func() time.Time)
	// apiauthDescName is the schema descriptor for name field.
	apiauthDescName := apiauthFields[0].Descriptor()
	// apiauth.NameValidator is a validator for the "name" field. It is called by the builders before save.
	apiauth.NameValidator = apiauthDescName.Validators[0].(func(string) error)
	// apiauthDescMethod is the schema descriptor for method field.
	apiauthDescMethod := apiauthFields[2].Descriptor()
	// apiauth.MethodValidator is a validator for the "method" field. It is called by the builders before save.
	apiauth.MethodValidator = apiauthDescMethod.Validators[0].(func(string) error)
	// apiauthDescPath is the schema descriptor for path field.
	apiauthDescPath := apiauthFields[3].Descriptor()
	// apiauth.PathValidator is a validator for the "path" field. It is called by the builders before save.
	apiauth.PathValidator = apiauthDescPath.Validators[0].(func(string) error)
	// apiauthDescIsPublic is the schema descriptor for is_public field.
	apiauthDescIsPublic := apiauthFields[4].Descriptor()
	// apiauth.DefaultIsPublic holds the default value on creation for the is_public field.
	apiauth.DefaultIsPublic = apiauthDescIsPublic.Default.(bool)
	// apiauthDescIsActive is the schema descriptor for is_active field.
	apiauthDescIsActive := apiauthFields[5].Descriptor()
	// apiauth.DefaultIsActive holds the default value on creation for the is_active field.
	apiauth.DefaultIsActive = apiauthDescIsActive.Default.(bool)
	addressMixin := schema.Address{}.Mixin()
	addressMixinHooks0 := addressMixin[0].Hooks()
	addressMixinHooks1 := addressMixin[1].Hooks()
	address.Hooks[0] = addressMixinHooks0[0]
	address.Hooks[1] = addressMixinHooks0[1]
	address.Hooks[2] = addressMixinHooks1[0]
	addressMixinInters1 := addressMixin[1].Interceptors()
	address.Interceptors[0] = addressMixinInters1[0]
	addressMixinFields0 := addressMixin[0].Fields()
	_ = addressMixinFields0
	addressFields := schema.Address{}.Fields()
	_ = addressFields
	// addressDescCreateTime is the schema descriptor for create_time field.
	addressDescCreateTime := addressMixinFields0[1].Descriptor()
	// address.DefaultCreateTime holds the default value on creation for the create_time field.
	address.DefaultCreateTime = addressDescCreateTime.Default.(func() time.Time)
	// addressDescUpdateTime is the schema descriptor for update_time field.
	addressDescUpdateTime := addressMixinFields0[3].Descriptor()
	// address.DefaultUpdateTime holds the default value on creation for the update_time field.
	address.DefaultUpdateTime = addressDescUpdateTime.Default.(func() time.Time)
	// address.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	address.UpdateDefaultUpdateTime = addressDescUpdateTime.UpdateDefault.(func() time.Time)
	// addressDescDetail is the schema descriptor for detail field.
	addressDescDetail := addressFields[0].Descriptor()
	// address.DetailValidator is a validator for the "detail" field. It is called by the builders before save.
	address.DetailValidator = func() func(string) error {
		validators := addressDescDetail.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(detail string) error {
			for _, fn := range fns {
				if err := fn(detail); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// addressDescPhone is the schema descriptor for phone field.
	addressDescPhone := addressFields[2].Descriptor()
	// address.PhoneValidator is a validator for the "phone" field. It is called by the builders before save.
	address.PhoneValidator = func() func(string) error {
		validators := addressDescPhone.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(phone string) error {
			for _, fn := range fns {
				if err := fn(phone); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// addressDescName is the schema descriptor for name field.
	addressDescName := addressFields[3].Descriptor()
	// address.NameValidator is a validator for the "name" field. It is called by the builders before save.
	address.NameValidator = func() func(string) error {
		validators := addressDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// addressDescIsDefault is the schema descriptor for is_default field.
	addressDescIsDefault := addressFields[4].Descriptor()
	// address.DefaultIsDefault holds the default value on creation for the is_default field.
	address.DefaultIsDefault = addressDescIsDefault.Default.(bool)
	// addressDescEntity is the schema descriptor for entity field.
	addressDescEntity := addressFields[6].Descriptor()
	// address.EntityValidator is a validator for the "entity" field. It is called by the builders before save.
	address.EntityValidator = addressDescEntity.Validators[0].(func(string) error)
	// addressDescEntityID is the schema descriptor for entity_id field.
	addressDescEntityID := addressFields[7].Descriptor()
	// address.EntityIDValidator is a validator for the "entity_id" field. It is called by the builders before save.
	address.EntityIDValidator = addressDescEntityID.Validators[0].(func(string) error)
	areaMixin := schema.Area{}.Mixin()
	areaMixinHooks0 := areaMixin[0].Hooks()
	areaMixinHooks1 := areaMixin[1].Hooks()
	area.Hooks[0] = areaMixinHooks0[0]
	area.Hooks[1] = areaMixinHooks0[1]
	area.Hooks[2] = areaMixinHooks1[0]
	areaMixinInters1 := areaMixin[1].Interceptors()
	area.Interceptors[0] = areaMixinInters1[0]
	areaMixinFields0 := areaMixin[0].Fields()
	_ = areaMixinFields0
	areaFields := schema.Area{}.Fields()
	_ = areaFields
	// areaDescCreateTime is the schema descriptor for create_time field.
	areaDescCreateTime := areaMixinFields0[1].Descriptor()
	// area.DefaultCreateTime holds the default value on creation for the create_time field.
	area.DefaultCreateTime = areaDescCreateTime.Default.(func() time.Time)
	// areaDescUpdateTime is the schema descriptor for update_time field.
	areaDescUpdateTime := areaMixinFields0[3].Descriptor()
	// area.DefaultUpdateTime holds the default value on creation for the update_time field.
	area.DefaultUpdateTime = areaDescUpdateTime.Default.(func() time.Time)
	// area.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	area.UpdateDefaultUpdateTime = areaDescUpdateTime.UpdateDefault.(func() time.Time)
	// areaDescName is the schema descriptor for name field.
	areaDescName := areaFields[0].Descriptor()
	// area.NameValidator is a validator for the "name" field. It is called by the builders before save.
	area.NameValidator = func() func(string) error {
		validators := areaDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// areaDescSpell is the schema descriptor for spell field.
	areaDescSpell := areaFields[1].Descriptor()
	// area.SpellValidator is a validator for the "spell" field. It is called by the builders before save.
	area.SpellValidator = func() func(string) error {
		validators := areaDescSpell.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(spell string) error {
			for _, fn := range fns {
				if err := fn(spell); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// areaDescDepth is the schema descriptor for depth field.
	areaDescDepth := areaFields[3].Descriptor()
	// area.DepthValidator is a validator for the "depth" field. It is called by the builders before save.
	area.DepthValidator = func() func(int) error {
		validators := areaDescDepth.Validators
		fns := [...]func(int) error{
			validators[0].(func(int) error),
			validators[1].(func(int) error),
		}
		return func(depth int) error {
			for _, fn := range fns {
				if err := fn(depth); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// areaDescCode is the schema descriptor for code field.
	areaDescCode := areaFields[4].Descriptor()
	// area.CodeValidator is a validator for the "code" field. It is called by the builders before save.
	area.CodeValidator = func() func(string) error {
		validators := areaDescCode.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(code string) error {
			for _, fn := range fns {
				if err := fn(code); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// areaDescColor is the schema descriptor for color field.
	areaDescColor := areaFields[8].Descriptor()
	// area.ColorValidator is a validator for the "color" field. It is called by the builders before save.
	area.ColorValidator = areaDescColor.Validators[0].(func(string) error)
	attachmentMixin := schema.Attachment{}.Mixin()
	attachmentMixinHooks0 := attachmentMixin[0].Hooks()
	attachmentMixinHooks1 := attachmentMixin[1].Hooks()
	attachment.Hooks[0] = attachmentMixinHooks0[0]
	attachment.Hooks[1] = attachmentMixinHooks0[1]
	attachment.Hooks[2] = attachmentMixinHooks1[0]
	attachmentMixinInters1 := attachmentMixin[1].Interceptors()
	attachment.Interceptors[0] = attachmentMixinInters1[0]
	attachmentMixinFields0 := attachmentMixin[0].Fields()
	_ = attachmentMixinFields0
	attachmentFields := schema.Attachment{}.Fields()
	_ = attachmentFields
	// attachmentDescCreateTime is the schema descriptor for create_time field.
	attachmentDescCreateTime := attachmentMixinFields0[1].Descriptor()
	// attachment.DefaultCreateTime holds the default value on creation for the create_time field.
	attachment.DefaultCreateTime = attachmentDescCreateTime.Default.(func() time.Time)
	// attachmentDescUpdateTime is the schema descriptor for update_time field.
	attachmentDescUpdateTime := attachmentMixinFields0[3].Descriptor()
	// attachment.DefaultUpdateTime holds the default value on creation for the update_time field.
	attachment.DefaultUpdateTime = attachmentDescUpdateTime.Default.(func() time.Time)
	// attachment.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	attachment.UpdateDefaultUpdateTime = attachmentDescUpdateTime.UpdateDefault.(func() time.Time)
	// attachmentDescFilename is the schema descriptor for filename field.
	attachmentDescFilename := attachmentFields[0].Descriptor()
	// attachment.FilenameValidator is a validator for the "filename" field. It is called by the builders before save.
	attachment.FilenameValidator = attachmentDescFilename.Validators[0].(func(string) error)
	// attachmentDescPath is the schema descriptor for path field.
	attachmentDescPath := attachmentFields[1].Descriptor()
	// attachment.PathValidator is a validator for the "path" field. It is called by the builders before save.
	attachment.PathValidator = attachmentDescPath.Validators[0].(func(string) error)
	// attachmentDescURL is the schema descriptor for url field.
	attachmentDescURL := attachmentFields[2].Descriptor()
	// attachment.URLValidator is a validator for the "url" field. It is called by the builders before save.
	attachment.URLValidator = attachmentDescURL.Validators[0].(func(string) error)
	// attachmentDescContentType is the schema descriptor for content_type field.
	attachmentDescContentType := attachmentFields[3].Descriptor()
	// attachment.ContentTypeValidator is a validator for the "content_type" field. It is called by the builders before save.
	attachment.ContentTypeValidator = attachmentDescContentType.Validators[0].(func(string) error)
	// attachmentDescEtag is the schema descriptor for etag field.
	attachmentDescEtag := attachmentFields[5].Descriptor()
	// attachment.EtagValidator is a validator for the "etag" field. It is called by the builders before save.
	attachment.EtagValidator = attachmentDescEtag.Validators[0].(func(string) error)
	// attachmentDescBucket is the schema descriptor for bucket field.
	attachmentDescBucket := attachmentFields[6].Descriptor()
	// attachment.BucketValidator is a validator for the "bucket" field. It is called by the builders before save.
	attachment.BucketValidator = attachmentDescBucket.Validators[0].(func(string) error)
	// attachmentDescStorageProvider is the schema descriptor for storage_provider field.
	attachmentDescStorageProvider := attachmentFields[7].Descriptor()
	// attachment.DefaultStorageProvider holds the default value on creation for the storage_provider field.
	attachment.DefaultStorageProvider = attachmentDescStorageProvider.Default.(string)
	// attachment.StorageProviderValidator is a validator for the "storage_provider" field. It is called by the builders before save.
	attachment.StorageProviderValidator = attachmentDescStorageProvider.Validators[0].(func(string) error)
	// attachmentDescUploadSessionID is the schema descriptor for upload_session_id field.
	attachmentDescUploadSessionID := attachmentFields[10].Descriptor()
	// attachment.UploadSessionIDValidator is a validator for the "upload_session_id" field. It is called by the builders before save.
	attachment.UploadSessionIDValidator = attachmentDescUploadSessionID.Validators[0].(func(string) error)
	// attachmentDescTag1 is the schema descriptor for tag1 field.
	attachmentDescTag1 := attachmentFields[11].Descriptor()
	// attachment.Tag1Validator is a validator for the "tag1" field. It is called by the builders before save.
	attachment.Tag1Validator = attachmentDescTag1.Validators[0].(func(string) error)
	// attachmentDescTag2 is the schema descriptor for tag2 field.
	attachmentDescTag2 := attachmentFields[12].Descriptor()
	// attachment.Tag2Validator is a validator for the "tag2" field. It is called by the builders before save.
	attachment.Tag2Validator = attachmentDescTag2.Validators[0].(func(string) error)
	// attachmentDescTag3 is the schema descriptor for tag3 field.
	attachmentDescTag3 := attachmentFields[13].Descriptor()
	// attachment.Tag3Validator is a validator for the "tag3" field. It is called by the builders before save.
	attachment.Tag3Validator = attachmentDescTag3.Validators[0].(func(string) error)
	clientdeviceMixin := schema.ClientDevice{}.Mixin()
	clientdeviceMixinHooks0 := clientdeviceMixin[0].Hooks()
	clientdeviceMixinHooks1 := clientdeviceMixin[1].Hooks()
	clientdevice.Hooks[0] = clientdeviceMixinHooks0[0]
	clientdevice.Hooks[1] = clientdeviceMixinHooks0[1]
	clientdevice.Hooks[2] = clientdeviceMixinHooks1[0]
	clientdeviceMixinInters1 := clientdeviceMixin[1].Interceptors()
	clientdevice.Interceptors[0] = clientdeviceMixinInters1[0]
	clientdeviceMixinFields0 := clientdeviceMixin[0].Fields()
	_ = clientdeviceMixinFields0
	clientdeviceFields := schema.ClientDevice{}.Fields()
	_ = clientdeviceFields
	// clientdeviceDescCreateTime is the schema descriptor for create_time field.
	clientdeviceDescCreateTime := clientdeviceMixinFields0[1].Descriptor()
	// clientdevice.DefaultCreateTime holds the default value on creation for the create_time field.
	clientdevice.DefaultCreateTime = clientdeviceDescCreateTime.Default.(func() time.Time)
	// clientdeviceDescUpdateTime is the schema descriptor for update_time field.
	clientdeviceDescUpdateTime := clientdeviceMixinFields0[3].Descriptor()
	// clientdevice.DefaultUpdateTime holds the default value on creation for the update_time field.
	clientdevice.DefaultUpdateTime = clientdeviceDescUpdateTime.Default.(func() time.Time)
	// clientdevice.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	clientdevice.UpdateDefaultUpdateTime = clientdeviceDescUpdateTime.UpdateDefault.(func() time.Time)
	// clientdeviceDescName is the schema descriptor for name field.
	clientdeviceDescName := clientdeviceFields[0].Descriptor()
	// clientdevice.NameValidator is a validator for the "name" field. It is called by the builders before save.
	clientdevice.NameValidator = func() func(string) error {
		validators := clientdeviceDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// clientdeviceDescCode is the schema descriptor for code field.
	clientdeviceDescCode := clientdeviceFields[1].Descriptor()
	// clientdevice.CodeValidator is a validator for the "code" field. It is called by the builders before save.
	clientdevice.CodeValidator = func() func(string) error {
		validators := clientdeviceDescCode.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
			validators[2].(func(string) error),
		}
		return func(code string) error {
			for _, fn := range fns {
				if err := fn(code); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// clientdeviceDescDescription is the schema descriptor for description field.
	clientdeviceDescDescription := clientdeviceFields[2].Descriptor()
	// clientdevice.DescriptionValidator is a validator for the "description" field. It is called by the builders before save.
	clientdevice.DescriptionValidator = clientdeviceDescDescription.Validators[0].(func(string) error)
	// clientdeviceDescEnabled is the schema descriptor for enabled field.
	clientdeviceDescEnabled := clientdeviceFields[3].Descriptor()
	// clientdevice.DefaultEnabled holds the default value on creation for the enabled field.
	clientdevice.DefaultEnabled = clientdeviceDescEnabled.Default.(bool)
	// clientdeviceDescAccessTokenExpiry is the schema descriptor for access_token_expiry field.
	clientdeviceDescAccessTokenExpiry := clientdeviceFields[4].Descriptor()
	// clientdevice.AccessTokenExpiryValidator is a validator for the "access_token_expiry" field. It is called by the builders before save.
	clientdevice.AccessTokenExpiryValidator = func() func(uint64) error {
		validators := clientdeviceDescAccessTokenExpiry.Validators
		fns := [...]func(uint64) error{
			validators[0].(func(uint64) error),
			validators[1].(func(uint64) error),
		}
		return func(access_token_expiry uint64) error {
			for _, fn := range fns {
				if err := fn(access_token_expiry); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// clientdeviceDescRefreshTokenExpiry is the schema descriptor for refresh_token_expiry field.
	clientdeviceDescRefreshTokenExpiry := clientdeviceFields[5].Descriptor()
	// clientdevice.RefreshTokenExpiryValidator is a validator for the "refresh_token_expiry" field. It is called by the builders before save.
	clientdevice.RefreshTokenExpiryValidator = func() func(uint64) error {
		validators := clientdeviceDescRefreshTokenExpiry.Validators
		fns := [...]func(uint64) error{
			validators[0].(func(uint64) error),
			validators[1].(func(uint64) error),
		}
		return func(refresh_token_expiry uint64) error {
			for _, fn := range fns {
				if err := fn(refresh_token_expiry); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// clientdeviceDescAnonymous is the schema descriptor for anonymous field.
	clientdeviceDescAnonymous := clientdeviceFields[6].Descriptor()
	// clientdevice.DefaultAnonymous holds the default value on creation for the anonymous field.
	clientdevice.DefaultAnonymous = clientdeviceDescAnonymous.Default.(bool)
	credentialMixin := schema.Credential{}.Mixin()
	credentialMixinHooks0 := credentialMixin[0].Hooks()
	credentialMixinHooks1 := credentialMixin[1].Hooks()
	credential.Hooks[0] = credentialMixinHooks0[0]
	credential.Hooks[1] = credentialMixinHooks0[1]
	credential.Hooks[2] = credentialMixinHooks1[0]
	credentialMixinInters1 := credentialMixin[1].Interceptors()
	credential.Interceptors[0] = credentialMixinInters1[0]
	credentialMixinFields0 := credentialMixin[0].Fields()
	_ = credentialMixinFields0
	credentialFields := schema.Credential{}.Fields()
	_ = credentialFields
	// credentialDescCreateTime is the schema descriptor for create_time field.
	credentialDescCreateTime := credentialMixinFields0[1].Descriptor()
	// credential.DefaultCreateTime holds the default value on creation for the create_time field.
	credential.DefaultCreateTime = credentialDescCreateTime.Default.(func() time.Time)
	// credentialDescUpdateTime is the schema descriptor for update_time field.
	credentialDescUpdateTime := credentialMixinFields0[3].Descriptor()
	// credential.DefaultUpdateTime holds the default value on creation for the update_time field.
	credential.DefaultUpdateTime = credentialDescUpdateTime.Default.(func() time.Time)
	// credential.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	credential.UpdateDefaultUpdateTime = credentialDescUpdateTime.UpdateDefault.(func() time.Time)
	// credentialDescIdentifier is the schema descriptor for identifier field.
	credentialDescIdentifier := credentialFields[2].Descriptor()
	// credential.IdentifierValidator is a validator for the "identifier" field. It is called by the builders before save.
	credential.IdentifierValidator = credentialDescIdentifier.Validators[0].(func(string) error)
	// credentialDescSecret is the schema descriptor for secret field.
	credentialDescSecret := credentialFields[3].Descriptor()
	// credential.SecretValidator is a validator for the "secret" field. It is called by the builders before save.
	credential.SecretValidator = credentialDescSecret.Validators[0].(func(string) error)
	// credentialDescSalt is the schema descriptor for salt field.
	credentialDescSalt := credentialFields[4].Descriptor()
	// credential.SaltValidator is a validator for the "salt" field. It is called by the builders before save.
	credential.SaltValidator = credentialDescSalt.Validators[0].(func(string) error)
	// credentialDescProvider is the schema descriptor for provider field.
	credentialDescProvider := credentialFields[5].Descriptor()
	// credential.ProviderValidator is a validator for the "provider" field. It is called by the builders before save.
	credential.ProviderValidator = credentialDescProvider.Validators[0].(func(string) error)
	// credentialDescIsVerified is the schema descriptor for is_verified field.
	credentialDescIsVerified := credentialFields[6].Descriptor()
	// credential.DefaultIsVerified holds the default value on creation for the is_verified field.
	credential.DefaultIsVerified = credentialDescIsVerified.Default.(bool)
	// credentialDescFailedAttempts is the schema descriptor for failed_attempts field.
	credentialDescFailedAttempts := credentialFields[10].Descriptor()
	// credential.DefaultFailedAttempts holds the default value on creation for the failed_attempts field.
	credential.DefaultFailedAttempts = credentialDescFailedAttempts.Default.(int)
	loggingMixin := schema.Logging{}.Mixin()
	loggingMixinHooks0 := loggingMixin[0].Hooks()
	loggingMixinHooks1 := loggingMixin[1].Hooks()
	logging.Hooks[0] = loggingMixinHooks0[0]
	logging.Hooks[1] = loggingMixinHooks0[1]
	logging.Hooks[2] = loggingMixinHooks1[0]
	loggingMixinInters1 := loggingMixin[1].Interceptors()
	logging.Interceptors[0] = loggingMixinInters1[0]
	loggingMixinFields0 := loggingMixin[0].Fields()
	_ = loggingMixinFields0
	loggingFields := schema.Logging{}.Fields()
	_ = loggingFields
	// loggingDescCreateTime is the schema descriptor for create_time field.
	loggingDescCreateTime := loggingMixinFields0[1].Descriptor()
	// logging.DefaultCreateTime holds the default value on creation for the create_time field.
	logging.DefaultCreateTime = loggingDescCreateTime.Default.(func() time.Time)
	// loggingDescUpdateTime is the schema descriptor for update_time field.
	loggingDescUpdateTime := loggingMixinFields0[3].Descriptor()
	// logging.DefaultUpdateTime holds the default value on creation for the update_time field.
	logging.DefaultUpdateTime = loggingDescUpdateTime.Default.(func() time.Time)
	// logging.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	logging.UpdateDefaultUpdateTime = loggingDescUpdateTime.UpdateDefault.(func() time.Time)
	// loggingDescMessage is the schema descriptor for message field.
	loggingDescMessage := loggingFields[2].Descriptor()
	// logging.MessageValidator is a validator for the "message" field. It is called by the builders before save.
	logging.MessageValidator = func() func(string) error {
		validators := loggingDescMessage.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(message string) error {
			for _, fn := range fns {
				if err := fn(message); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// loggingDescMethod is the schema descriptor for method field.
	loggingDescMethod := loggingFields[3].Descriptor()
	// logging.MethodValidator is a validator for the "method" field. It is called by the builders before save.
	logging.MethodValidator = loggingDescMethod.Validators[0].(func(string) error)
	// loggingDescPath is the schema descriptor for path field.
	loggingDescPath := loggingFields[4].Descriptor()
	// logging.PathValidator is a validator for the "path" field. It is called by the builders before save.
	logging.PathValidator = loggingDescPath.Validators[0].(func(string) error)
	// loggingDescIP is the schema descriptor for ip field.
	loggingDescIP := loggingFields[5].Descriptor()
	// logging.IPValidator is a validator for the "ip" field. It is called by the builders before save.
	logging.IPValidator = loggingDescIP.Validators[0].(func(string) error)
	// loggingDescQuery is the schema descriptor for query field.
	loggingDescQuery := loggingFields[6].Descriptor()
	// logging.QueryValidator is a validator for the "query" field. It is called by the builders before save.
	logging.QueryValidator = loggingDescQuery.Validators[0].(func(string) error)
	// loggingDescCode is the schema descriptor for code field.
	loggingDescCode := loggingFields[7].Descriptor()
	// logging.CodeValidator is a validator for the "code" field. It is called by the builders before save.
	logging.CodeValidator = loggingDescCode.Validators[0].(func(int) error)
	// loggingDescUserAgent is the schema descriptor for user_agent field.
	loggingDescUserAgent := loggingFields[8].Descriptor()
	// logging.UserAgentValidator is a validator for the "user_agent" field. It is called by the builders before save.
	logging.UserAgentValidator = loggingDescUserAgent.Validators[0].(func(string) error)
	// loggingDescStack is the schema descriptor for stack field.
	loggingDescStack := loggingFields[10].Descriptor()
	// logging.StackValidator is a validator for the "stack" field. It is called by the builders before save.
	logging.StackValidator = loggingDescStack.Validators[0].(func(string) error)
	loginrecordMixin := schema.LoginRecord{}.Mixin()
	loginrecordMixinHooks0 := loginrecordMixin[0].Hooks()
	loginrecord.Hooks[0] = loginrecordMixinHooks0[0]
	loginrecord.Hooks[1] = loginrecordMixinHooks0[1]
	loginrecordMixinFields0 := loginrecordMixin[0].Fields()
	_ = loginrecordMixinFields0
	loginrecordFields := schema.LoginRecord{}.Fields()
	_ = loginrecordFields
	// loginrecordDescCreateTime is the schema descriptor for create_time field.
	loginrecordDescCreateTime := loginrecordMixinFields0[1].Descriptor()
	// loginrecord.DefaultCreateTime holds the default value on creation for the create_time field.
	loginrecord.DefaultCreateTime = loginrecordDescCreateTime.Default.(func() time.Time)
	// loginrecordDescUpdateTime is the schema descriptor for update_time field.
	loginrecordDescUpdateTime := loginrecordMixinFields0[3].Descriptor()
	// loginrecord.DefaultUpdateTime holds the default value on creation for the update_time field.
	loginrecord.DefaultUpdateTime = loginrecordDescUpdateTime.Default.(func() time.Time)
	// loginrecord.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	loginrecord.UpdateDefaultUpdateTime = loginrecordDescUpdateTime.UpdateDefault.(func() time.Time)
	// loginrecordDescIdentifier is the schema descriptor for identifier field.
	loginrecordDescIdentifier := loginrecordFields[1].Descriptor()
	// loginrecord.IdentifierValidator is a validator for the "identifier" field. It is called by the builders before save.
	loginrecord.IdentifierValidator = loginrecordDescIdentifier.Validators[0].(func(string) error)
	// loginrecordDescIPAddress is the schema descriptor for ip_address field.
	loginrecordDescIPAddress := loginrecordFields[3].Descriptor()
	// loginrecord.IPAddressValidator is a validator for the "ip_address" field. It is called by the builders before save.
	loginrecord.IPAddressValidator = loginrecordDescIPAddress.Validators[0].(func(string) error)
	// loginrecordDescUserAgent is the schema descriptor for user_agent field.
	loginrecordDescUserAgent := loginrecordFields[4].Descriptor()
	// loginrecord.UserAgentValidator is a validator for the "user_agent" field. It is called by the builders before save.
	loginrecord.UserAgentValidator = loginrecordDescUserAgent.Validators[0].(func(string) error)
	// loginrecordDescDeviceInfo is the schema descriptor for device_info field.
	loginrecordDescDeviceInfo := loginrecordFields[5].Descriptor()
	// loginrecord.DeviceInfoValidator is a validator for the "device_info" field. It is called by the builders before save.
	loginrecord.DeviceInfoValidator = loginrecordDescDeviceInfo.Validators[0].(func(string) error)
	// loginrecordDescLocation is the schema descriptor for location field.
	loginrecordDescLocation := loginrecordFields[6].Descriptor()
	// loginrecord.LocationValidator is a validator for the "location" field. It is called by the builders before save.
	loginrecord.LocationValidator = loginrecordDescLocation.Validators[0].(func(string) error)
	// loginrecordDescFailureReason is the schema descriptor for failure_reason field.
	loginrecordDescFailureReason := loginrecordFields[8].Descriptor()
	// loginrecord.FailureReasonValidator is a validator for the "failure_reason" field. It is called by the builders before save.
	loginrecord.FailureReasonValidator = loginrecordDescFailureReason.Validators[0].(func(string) error)
	// loginrecordDescSessionID is the schema descriptor for session_id field.
	loginrecordDescSessionID := loginrecordFields[9].Descriptor()
	// loginrecord.SessionIDValidator is a validator for the "session_id" field. It is called by the builders before save.
	loginrecord.SessionIDValidator = loginrecordDescSessionID.Validators[0].(func(string) error)
	oauthapplicationMixin := schema.OauthApplication{}.Mixin()
	oauthapplicationMixinHooks0 := oauthapplicationMixin[0].Hooks()
	oauthapplicationMixinHooks1 := oauthapplicationMixin[1].Hooks()
	oauthapplicationMixinHooks2 := oauthapplicationMixin[2].Hooks()
	oauthapplication.Hooks[0] = oauthapplicationMixinHooks0[0]
	oauthapplication.Hooks[1] = oauthapplicationMixinHooks0[1]
	oauthapplication.Hooks[2] = oauthapplicationMixinHooks1[0]
	oauthapplication.Hooks[3] = oauthapplicationMixinHooks2[0]
	oauthapplicationMixinInters1 := oauthapplicationMixin[1].Interceptors()
	oauthapplication.Interceptors[0] = oauthapplicationMixinInters1[0]
	oauthapplicationMixinFields0 := oauthapplicationMixin[0].Fields()
	_ = oauthapplicationMixinFields0
	oauthapplicationFields := schema.OauthApplication{}.Fields()
	_ = oauthapplicationFields
	// oauthapplicationDescCreateTime is the schema descriptor for create_time field.
	oauthapplicationDescCreateTime := oauthapplicationMixinFields0[1].Descriptor()
	// oauthapplication.DefaultCreateTime holds the default value on creation for the create_time field.
	oauthapplication.DefaultCreateTime = oauthapplicationDescCreateTime.Default.(func() time.Time)
	// oauthapplicationDescUpdateTime is the schema descriptor for update_time field.
	oauthapplicationDescUpdateTime := oauthapplicationMixinFields0[3].Descriptor()
	// oauthapplication.DefaultUpdateTime holds the default value on creation for the update_time field.
	oauthapplication.DefaultUpdateTime = oauthapplicationDescUpdateTime.Default.(func() time.Time)
	// oauthapplication.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	oauthapplication.UpdateDefaultUpdateTime = oauthapplicationDescUpdateTime.UpdateDefault.(func() time.Time)
	// oauthapplicationDescClientID is the schema descriptor for client_id field.
	oauthapplicationDescClientID := oauthapplicationFields[0].Descriptor()
	// oauthapplication.ClientIDValidator is a validator for the "client_id" field. It is called by the builders before save.
	oauthapplication.ClientIDValidator = oauthapplicationDescClientID.Validators[0].(func(string) error)
	// oauthapplicationDescClientSecret is the schema descriptor for client_secret field.
	oauthapplicationDescClientSecret := oauthapplicationFields[1].Descriptor()
	// oauthapplication.ClientSecretValidator is a validator for the "client_secret" field. It is called by the builders before save.
	oauthapplication.ClientSecretValidator = oauthapplicationDescClientSecret.Validators[0].(func(string) error)
	// oauthapplicationDescName is the schema descriptor for name field.
	oauthapplicationDescName := oauthapplicationFields[2].Descriptor()
	// oauthapplication.NameValidator is a validator for the "name" field. It is called by the builders before save.
	oauthapplication.NameValidator = func() func(string) error {
		validators := oauthapplicationDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// oauthapplicationDescIsConfidential is the schema descriptor for is_confidential field.
	oauthapplicationDescIsConfidential := oauthapplicationFields[4].Descriptor()
	// oauthapplication.DefaultIsConfidential holds the default value on creation for the is_confidential field.
	oauthapplication.DefaultIsConfidential = oauthapplicationDescIsConfidential.Default.(bool)
	oauthauthorizationcodeMixin := schema.OauthAuthorizationCode{}.Mixin()
	oauthauthorizationcodeMixinHooks0 := oauthauthorizationcodeMixin[0].Hooks()
	oauthauthorizationcodeMixinHooks1 := oauthauthorizationcodeMixin[1].Hooks()
	oauthauthorizationcode.Hooks[0] = oauthauthorizationcodeMixinHooks0[0]
	oauthauthorizationcode.Hooks[1] = oauthauthorizationcodeMixinHooks0[1]
	oauthauthorizationcode.Hooks[2] = oauthauthorizationcodeMixinHooks1[0]
	oauthauthorizationcodeMixinInters1 := oauthauthorizationcodeMixin[1].Interceptors()
	oauthauthorizationcode.Interceptors[0] = oauthauthorizationcodeMixinInters1[0]
	oauthauthorizationcodeMixinFields0 := oauthauthorizationcodeMixin[0].Fields()
	_ = oauthauthorizationcodeMixinFields0
	oauthauthorizationcodeFields := schema.OauthAuthorizationCode{}.Fields()
	_ = oauthauthorizationcodeFields
	// oauthauthorizationcodeDescCreateTime is the schema descriptor for create_time field.
	oauthauthorizationcodeDescCreateTime := oauthauthorizationcodeMixinFields0[1].Descriptor()
	// oauthauthorizationcode.DefaultCreateTime holds the default value on creation for the create_time field.
	oauthauthorizationcode.DefaultCreateTime = oauthauthorizationcodeDescCreateTime.Default.(func() time.Time)
	// oauthauthorizationcodeDescUpdateTime is the schema descriptor for update_time field.
	oauthauthorizationcodeDescUpdateTime := oauthauthorizationcodeMixinFields0[3].Descriptor()
	// oauthauthorizationcode.DefaultUpdateTime holds the default value on creation for the update_time field.
	oauthauthorizationcode.DefaultUpdateTime = oauthauthorizationcodeDescUpdateTime.Default.(func() time.Time)
	// oauthauthorizationcode.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	oauthauthorizationcode.UpdateDefaultUpdateTime = oauthauthorizationcodeDescUpdateTime.UpdateDefault.(func() time.Time)
	// oauthauthorizationcodeDescCode is the schema descriptor for code field.
	oauthauthorizationcodeDescCode := oauthauthorizationcodeFields[0].Descriptor()
	// oauthauthorizationcode.CodeValidator is a validator for the "code" field. It is called by the builders before save.
	oauthauthorizationcode.CodeValidator = oauthauthorizationcodeDescCode.Validators[0].(func(string) error)
	// oauthauthorizationcodeDescRedirectURI is the schema descriptor for redirect_uri field.
	oauthauthorizationcodeDescRedirectURI := oauthauthorizationcodeFields[3].Descriptor()
	// oauthauthorizationcode.RedirectURIValidator is a validator for the "redirect_uri" field. It is called by the builders before save.
	oauthauthorizationcode.RedirectURIValidator = oauthauthorizationcodeDescRedirectURI.Validators[0].(func(string) error)
	// oauthauthorizationcodeDescCodeChallenge is the schema descriptor for code_challenge field.
	oauthauthorizationcodeDescCodeChallenge := oauthauthorizationcodeFields[7].Descriptor()
	// oauthauthorizationcode.CodeChallengeValidator is a validator for the "code_challenge" field. It is called by the builders before save.
	oauthauthorizationcode.CodeChallengeValidator = oauthauthorizationcodeDescCodeChallenge.Validators[0].(func(string) error)
	// oauthauthorizationcodeDescCodeChallengeMethod is the schema descriptor for code_challenge_method field.
	oauthauthorizationcodeDescCodeChallengeMethod := oauthauthorizationcodeFields[8].Descriptor()
	// oauthauthorizationcode.CodeChallengeMethodValidator is a validator for the "code_challenge_method" field. It is called by the builders before save.
	oauthauthorizationcode.CodeChallengeMethodValidator = oauthauthorizationcodeDescCodeChallengeMethod.Validators[0].(func(string) error)
	oauthproviderMixin := schema.OauthProvider{}.Mixin()
	oauthproviderMixinHooks0 := oauthproviderMixin[0].Hooks()
	oauthproviderMixinHooks1 := oauthproviderMixin[1].Hooks()
	oauthproviderMixinHooks2 := oauthproviderMixin[2].Hooks()
	oauthprovider.Hooks[0] = oauthproviderMixinHooks0[0]
	oauthprovider.Hooks[1] = oauthproviderMixinHooks0[1]
	oauthprovider.Hooks[2] = oauthproviderMixinHooks1[0]
	oauthprovider.Hooks[3] = oauthproviderMixinHooks2[0]
	oauthproviderMixinInters1 := oauthproviderMixin[1].Interceptors()
	oauthprovider.Interceptors[0] = oauthproviderMixinInters1[0]
	oauthproviderMixinFields0 := oauthproviderMixin[0].Fields()
	_ = oauthproviderMixinFields0
	oauthproviderFields := schema.OauthProvider{}.Fields()
	_ = oauthproviderFields
	// oauthproviderDescCreateTime is the schema descriptor for create_time field.
	oauthproviderDescCreateTime := oauthproviderMixinFields0[1].Descriptor()
	// oauthprovider.DefaultCreateTime holds the default value on creation for the create_time field.
	oauthprovider.DefaultCreateTime = oauthproviderDescCreateTime.Default.(func() time.Time)
	// oauthproviderDescUpdateTime is the schema descriptor for update_time field.
	oauthproviderDescUpdateTime := oauthproviderMixinFields0[3].Descriptor()
	// oauthprovider.DefaultUpdateTime holds the default value on creation for the update_time field.
	oauthprovider.DefaultUpdateTime = oauthproviderDescUpdateTime.Default.(func() time.Time)
	// oauthprovider.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	oauthprovider.UpdateDefaultUpdateTime = oauthproviderDescUpdateTime.UpdateDefault.(func() time.Time)
	// oauthproviderDescName is the schema descriptor for name field.
	oauthproviderDescName := oauthproviderFields[1].Descriptor()
	// oauthprovider.NameValidator is a validator for the "name" field. It is called by the builders before save.
	oauthprovider.NameValidator = func() func(string) error {
		validators := oauthproviderDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// oauthproviderDescAuthorizationEndpoint is the schema descriptor for authorization_endpoint field.
	oauthproviderDescAuthorizationEndpoint := oauthproviderFields[2].Descriptor()
	// oauthprovider.AuthorizationEndpointValidator is a validator for the "authorization_endpoint" field. It is called by the builders before save.
	oauthprovider.AuthorizationEndpointValidator = oauthproviderDescAuthorizationEndpoint.Validators[0].(func(string) error)
	// oauthproviderDescTokenEndpoint is the schema descriptor for token_endpoint field.
	oauthproviderDescTokenEndpoint := oauthproviderFields[3].Descriptor()
	// oauthprovider.TokenEndpointValidator is a validator for the "token_endpoint" field. It is called by the builders before save.
	oauthprovider.TokenEndpointValidator = oauthproviderDescTokenEndpoint.Validators[0].(func(string) error)
	// oauthproviderDescUserInfoEndpoint is the schema descriptor for user_info_endpoint field.
	oauthproviderDescUserInfoEndpoint := oauthproviderFields[4].Descriptor()
	// oauthprovider.UserInfoEndpointValidator is a validator for the "user_info_endpoint" field. It is called by the builders before save.
	oauthprovider.UserInfoEndpointValidator = oauthproviderDescUserInfoEndpoint.Validators[0].(func(string) error)
	// oauthproviderDescRevokeEndpoint is the schema descriptor for revoke_endpoint field.
	oauthproviderDescRevokeEndpoint := oauthproviderFields[5].Descriptor()
	// oauthprovider.RevokeEndpointValidator is a validator for the "revoke_endpoint" field. It is called by the builders before save.
	oauthprovider.RevokeEndpointValidator = oauthproviderDescRevokeEndpoint.Validators[0].(func(string) error)
	// oauthproviderDescRefreshEndpoint is the schema descriptor for refresh_endpoint field.
	oauthproviderDescRefreshEndpoint := oauthproviderFields[6].Descriptor()
	// oauthprovider.RefreshEndpointValidator is a validator for the "refresh_endpoint" field. It is called by the builders before save.
	oauthprovider.RefreshEndpointValidator = oauthproviderDescRefreshEndpoint.Validators[0].(func(string) error)
	// oauthproviderDescClientID is the schema descriptor for client_id field.
	oauthproviderDescClientID := oauthproviderFields[7].Descriptor()
	// oauthprovider.ClientIDValidator is a validator for the "client_id" field. It is called by the builders before save.
	oauthprovider.ClientIDValidator = oauthproviderDescClientID.Validators[0].(func(string) error)
	// oauthproviderDescClientSecret is the schema descriptor for client_secret field.
	oauthproviderDescClientSecret := oauthproviderFields[8].Descriptor()
	// oauthprovider.ClientSecretValidator is a validator for the "client_secret" field. It is called by the builders before save.
	oauthprovider.ClientSecretValidator = oauthproviderDescClientSecret.Validators[0].(func(string) error)
	// oauthproviderDescRedirectURI is the schema descriptor for redirect_uri field.
	oauthproviderDescRedirectURI := oauthproviderFields[9].Descriptor()
	// oauthprovider.RedirectURIValidator is a validator for the "redirect_uri" field. It is called by the builders before save.
	oauthprovider.RedirectURIValidator = oauthproviderDescRedirectURI.Validators[0].(func(string) error)
	// oauthproviderDescAutoRegister is the schema descriptor for auto_register field.
	oauthproviderDescAutoRegister := oauthproviderFields[11].Descriptor()
	// oauthprovider.DefaultAutoRegister holds the default value on creation for the auto_register field.
	oauthprovider.DefaultAutoRegister = oauthproviderDescAutoRegister.Default.(bool)
	oauthstateMixin := schema.OauthState{}.Mixin()
	oauthstateMixinHooks0 := oauthstateMixin[0].Hooks()
	oauthstateMixinHooks1 := oauthstateMixin[1].Hooks()
	oauthstate.Hooks[0] = oauthstateMixinHooks0[0]
	oauthstate.Hooks[1] = oauthstateMixinHooks0[1]
	oauthstate.Hooks[2] = oauthstateMixinHooks1[0]
	oauthstateMixinInters1 := oauthstateMixin[1].Interceptors()
	oauthstate.Interceptors[0] = oauthstateMixinInters1[0]
	oauthstateMixinFields0 := oauthstateMixin[0].Fields()
	_ = oauthstateMixinFields0
	oauthstateFields := schema.OauthState{}.Fields()
	_ = oauthstateFields
	// oauthstateDescCreateTime is the schema descriptor for create_time field.
	oauthstateDescCreateTime := oauthstateMixinFields0[1].Descriptor()
	// oauthstate.DefaultCreateTime holds the default value on creation for the create_time field.
	oauthstate.DefaultCreateTime = oauthstateDescCreateTime.Default.(func() time.Time)
	// oauthstateDescUpdateTime is the schema descriptor for update_time field.
	oauthstateDescUpdateTime := oauthstateMixinFields0[3].Descriptor()
	// oauthstate.DefaultUpdateTime holds the default value on creation for the update_time field.
	oauthstate.DefaultUpdateTime = oauthstateDescUpdateTime.Default.(func() time.Time)
	// oauthstate.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	oauthstate.UpdateDefaultUpdateTime = oauthstateDescUpdateTime.UpdateDefault.(func() time.Time)
	// oauthstateDescState is the schema descriptor for state field.
	oauthstateDescState := oauthstateFields[0].Descriptor()
	// oauthstate.StateValidator is a validator for the "state" field. It is called by the builders before save.
	oauthstate.StateValidator = oauthstateDescState.Validators[0].(func(string) error)
	oauthtokenMixin := schema.OauthToken{}.Mixin()
	oauthtokenMixinHooks0 := oauthtokenMixin[0].Hooks()
	oauthtokenMixinHooks1 := oauthtokenMixin[1].Hooks()
	oauthtoken.Hooks[0] = oauthtokenMixinHooks0[0]
	oauthtoken.Hooks[1] = oauthtokenMixinHooks0[1]
	oauthtoken.Hooks[2] = oauthtokenMixinHooks1[0]
	oauthtokenMixinInters1 := oauthtokenMixin[1].Interceptors()
	oauthtoken.Interceptors[0] = oauthtokenMixinInters1[0]
	oauthtokenMixinFields0 := oauthtokenMixin[0].Fields()
	_ = oauthtokenMixinFields0
	oauthtokenFields := schema.OauthToken{}.Fields()
	_ = oauthtokenFields
	// oauthtokenDescCreateTime is the schema descriptor for create_time field.
	oauthtokenDescCreateTime := oauthtokenMixinFields0[1].Descriptor()
	// oauthtoken.DefaultCreateTime holds the default value on creation for the create_time field.
	oauthtoken.DefaultCreateTime = oauthtokenDescCreateTime.Default.(func() time.Time)
	// oauthtokenDescUpdateTime is the schema descriptor for update_time field.
	oauthtokenDescUpdateTime := oauthtokenMixinFields0[3].Descriptor()
	// oauthtoken.DefaultUpdateTime holds the default value on creation for the update_time field.
	oauthtoken.DefaultUpdateTime = oauthtokenDescUpdateTime.Default.(func() time.Time)
	// oauthtoken.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	oauthtoken.UpdateDefaultUpdateTime = oauthtokenDescUpdateTime.UpdateDefault.(func() time.Time)
	// oauthtokenDescAccessToken is the schema descriptor for access_token field.
	oauthtokenDescAccessToken := oauthtokenFields[0].Descriptor()
	// oauthtoken.AccessTokenValidator is a validator for the "access_token" field. It is called by the builders before save.
	oauthtoken.AccessTokenValidator = oauthtokenDescAccessToken.Validators[0].(func(string) error)
	// oauthtokenDescRefreshToken is the schema descriptor for refresh_token field.
	oauthtokenDescRefreshToken := oauthtokenFields[1].Descriptor()
	// oauthtoken.RefreshTokenValidator is a validator for the "refresh_token" field. It is called by the builders before save.
	oauthtoken.RefreshTokenValidator = oauthtokenDescRefreshToken.Validators[0].(func(string) error)
	oauthuserMixin := schema.OauthUser{}.Mixin()
	oauthuserMixinHooks0 := oauthuserMixin[0].Hooks()
	oauthuserMixinHooks1 := oauthuserMixin[1].Hooks()
	oauthuserMixinHooks2 := oauthuserMixin[2].Hooks()
	oauthuser.Hooks[0] = oauthuserMixinHooks0[0]
	oauthuser.Hooks[1] = oauthuserMixinHooks0[1]
	oauthuser.Hooks[2] = oauthuserMixinHooks1[0]
	oauthuser.Hooks[3] = oauthuserMixinHooks2[0]
	oauthuserMixinInters1 := oauthuserMixin[1].Interceptors()
	oauthuser.Interceptors[0] = oauthuserMixinInters1[0]
	oauthuserMixinFields0 := oauthuserMixin[0].Fields()
	_ = oauthuserMixinFields0
	oauthuserFields := schema.OauthUser{}.Fields()
	_ = oauthuserFields
	// oauthuserDescCreateTime is the schema descriptor for create_time field.
	oauthuserDescCreateTime := oauthuserMixinFields0[1].Descriptor()
	// oauthuser.DefaultCreateTime holds the default value on creation for the create_time field.
	oauthuser.DefaultCreateTime = oauthuserDescCreateTime.Default.(func() time.Time)
	// oauthuserDescUpdateTime is the schema descriptor for update_time field.
	oauthuserDescUpdateTime := oauthuserMixinFields0[3].Descriptor()
	// oauthuser.DefaultUpdateTime holds the default value on creation for the update_time field.
	oauthuser.DefaultUpdateTime = oauthuserDescUpdateTime.Default.(func() time.Time)
	// oauthuser.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	oauthuser.UpdateDefaultUpdateTime = oauthuserDescUpdateTime.UpdateDefault.(func() time.Time)
	// oauthuserDescProviderUserID is the schema descriptor for provider_user_id field.
	oauthuserDescProviderUserID := oauthuserFields[3].Descriptor()
	// oauthuser.ProviderUserIDValidator is a validator for the "provider_user_id" field. It is called by the builders before save.
	oauthuser.ProviderUserIDValidator = oauthuserDescProviderUserID.Validators[0].(func(string) error)
	// oauthuserDescAccessToken is the schema descriptor for access_token field.
	oauthuserDescAccessToken := oauthuserFields[5].Descriptor()
	// oauthuser.AccessTokenValidator is a validator for the "access_token" field. It is called by the builders before save.
	oauthuser.AccessTokenValidator = oauthuserDescAccessToken.Validators[0].(func(string) error)
	// oauthuserDescRefreshToken is the schema descriptor for refresh_token field.
	oauthuserDescRefreshToken := oauthuserFields[6].Descriptor()
	// oauthuser.RefreshTokenValidator is a validator for the "refresh_token" field. It is called by the builders before save.
	oauthuser.RefreshTokenValidator = oauthuserDescRefreshToken.Validators[0].(func(string) error)
	oauthuserauthorizationMixin := schema.OauthUserAuthorization{}.Mixin()
	oauthuserauthorizationMixinHooks0 := oauthuserauthorizationMixin[0].Hooks()
	oauthuserauthorizationMixinHooks1 := oauthuserauthorizationMixin[1].Hooks()
	oauthuserauthorizationMixinHooks2 := oauthuserauthorizationMixin[2].Hooks()
	oauthuserauthorization.Hooks[0] = oauthuserauthorizationMixinHooks0[0]
	oauthuserauthorization.Hooks[1] = oauthuserauthorizationMixinHooks0[1]
	oauthuserauthorization.Hooks[2] = oauthuserauthorizationMixinHooks1[0]
	oauthuserauthorization.Hooks[3] = oauthuserauthorizationMixinHooks2[0]
	oauthuserauthorizationMixinInters1 := oauthuserauthorizationMixin[1].Interceptors()
	oauthuserauthorization.Interceptors[0] = oauthuserauthorizationMixinInters1[0]
	oauthuserauthorizationMixinFields0 := oauthuserauthorizationMixin[0].Fields()
	_ = oauthuserauthorizationMixinFields0
	oauthuserauthorizationFields := schema.OauthUserAuthorization{}.Fields()
	_ = oauthuserauthorizationFields
	// oauthuserauthorizationDescCreateTime is the schema descriptor for create_time field.
	oauthuserauthorizationDescCreateTime := oauthuserauthorizationMixinFields0[1].Descriptor()
	// oauthuserauthorization.DefaultCreateTime holds the default value on creation for the create_time field.
	oauthuserauthorization.DefaultCreateTime = oauthuserauthorizationDescCreateTime.Default.(func() time.Time)
	// oauthuserauthorizationDescUpdateTime is the schema descriptor for update_time field.
	oauthuserauthorizationDescUpdateTime := oauthuserauthorizationMixinFields0[3].Descriptor()
	// oauthuserauthorization.DefaultUpdateTime holds the default value on creation for the update_time field.
	oauthuserauthorization.DefaultUpdateTime = oauthuserauthorizationDescUpdateTime.Default.(func() time.Time)
	// oauthuserauthorization.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	oauthuserauthorization.UpdateDefaultUpdateTime = oauthuserauthorizationDescUpdateTime.UpdateDefault.(func() time.Time)
	permissionMixin := schema.Permission{}.Mixin()
	permissionMixinHooks0 := permissionMixin[0].Hooks()
	permissionMixinHooks1 := permissionMixin[1].Hooks()
	permission.Hooks[0] = permissionMixinHooks0[0]
	permission.Hooks[1] = permissionMixinHooks0[1]
	permission.Hooks[2] = permissionMixinHooks1[0]
	permissionMixinInters1 := permissionMixin[1].Interceptors()
	permission.Interceptors[0] = permissionMixinInters1[0]
	permissionMixinFields0 := permissionMixin[0].Fields()
	_ = permissionMixinFields0
	permissionFields := schema.Permission{}.Fields()
	_ = permissionFields
	// permissionDescCreateTime is the schema descriptor for create_time field.
	permissionDescCreateTime := permissionMixinFields0[1].Descriptor()
	// permission.DefaultCreateTime holds the default value on creation for the create_time field.
	permission.DefaultCreateTime = permissionDescCreateTime.Default.(func() time.Time)
	// permissionDescUpdateTime is the schema descriptor for update_time field.
	permissionDescUpdateTime := permissionMixinFields0[3].Descriptor()
	// permission.DefaultUpdateTime holds the default value on creation for the update_time field.
	permission.DefaultUpdateTime = permissionDescUpdateTime.Default.(func() time.Time)
	// permission.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	permission.UpdateDefaultUpdateTime = permissionDescUpdateTime.UpdateDefault.(func() time.Time)
	// permissionDescName is the schema descriptor for name field.
	permissionDescName := permissionFields[0].Descriptor()
	// permission.NameValidator is a validator for the "name" field. It is called by the builders before save.
	permission.NameValidator = permissionDescName.Validators[0].(func(string) error)
	// permissionDescAction is the schema descriptor for action field.
	permissionDescAction := permissionFields[1].Descriptor()
	// permission.ActionValidator is a validator for the "action" field. It is called by the builders before save.
	permission.ActionValidator = permissionDescAction.Validators[0].(func(string) error)
	// permissionDescIsPublic is the schema descriptor for is_public field.
	permissionDescIsPublic := permissionFields[3].Descriptor()
	// permission.DefaultIsPublic holds the default value on creation for the is_public field.
	permission.DefaultIsPublic = permissionDescIsPublic.Default.(bool)
	roleMixin := schema.Role{}.Mixin()
	roleMixinHooks0 := roleMixin[0].Hooks()
	roleMixinHooks1 := roleMixin[1].Hooks()
	roleMixinHooks2 := roleMixin[2].Hooks()
	role.Hooks[0] = roleMixinHooks0[0]
	role.Hooks[1] = roleMixinHooks0[1]
	role.Hooks[2] = roleMixinHooks1[0]
	role.Hooks[3] = roleMixinHooks2[0]
	roleMixinInters1 := roleMixin[1].Interceptors()
	role.Interceptors[0] = roleMixinInters1[0]
	roleMixinFields0 := roleMixin[0].Fields()
	_ = roleMixinFields0
	roleFields := schema.Role{}.Fields()
	_ = roleFields
	// roleDescCreateTime is the schema descriptor for create_time field.
	roleDescCreateTime := roleMixinFields0[1].Descriptor()
	// role.DefaultCreateTime holds the default value on creation for the create_time field.
	role.DefaultCreateTime = roleDescCreateTime.Default.(func() time.Time)
	// roleDescUpdateTime is the schema descriptor for update_time field.
	roleDescUpdateTime := roleMixinFields0[3].Descriptor()
	// role.DefaultUpdateTime holds the default value on creation for the update_time field.
	role.DefaultUpdateTime = roleDescUpdateTime.Default.(func() time.Time)
	// role.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	role.UpdateDefaultUpdateTime = roleDescUpdateTime.UpdateDefault.(func() time.Time)
	// roleDescName is the schema descriptor for name field.
	roleDescName := roleFields[0].Descriptor()
	// role.NameValidator is a validator for the "name" field. It is called by the builders before save.
	role.NameValidator = roleDescName.Validators[0].(func(string) error)
	rolepermissionMixin := schema.RolePermission{}.Mixin()
	rolepermissionMixinHooks0 := rolepermissionMixin[0].Hooks()
	rolepermissionMixinHooks1 := rolepermissionMixin[1].Hooks()
	rolepermission.Hooks[0] = rolepermissionMixinHooks0[0]
	rolepermission.Hooks[1] = rolepermissionMixinHooks0[1]
	rolepermission.Hooks[2] = rolepermissionMixinHooks1[0]
	rolepermissionMixinInters1 := rolepermissionMixin[1].Interceptors()
	rolepermission.Interceptors[0] = rolepermissionMixinInters1[0]
	rolepermissionMixinFields0 := rolepermissionMixin[0].Fields()
	_ = rolepermissionMixinFields0
	rolepermissionFields := schema.RolePermission{}.Fields()
	_ = rolepermissionFields
	// rolepermissionDescCreateTime is the schema descriptor for create_time field.
	rolepermissionDescCreateTime := rolepermissionMixinFields0[1].Descriptor()
	// rolepermission.DefaultCreateTime holds the default value on creation for the create_time field.
	rolepermission.DefaultCreateTime = rolepermissionDescCreateTime.Default.(func() time.Time)
	// rolepermissionDescUpdateTime is the schema descriptor for update_time field.
	rolepermissionDescUpdateTime := rolepermissionMixinFields0[3].Descriptor()
	// rolepermission.DefaultUpdateTime holds the default value on creation for the update_time field.
	rolepermission.DefaultUpdateTime = rolepermissionDescUpdateTime.Default.(func() time.Time)
	// rolepermission.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	rolepermission.UpdateDefaultUpdateTime = rolepermissionDescUpdateTime.UpdateDefault.(func() time.Time)
	scanMixin := schema.Scan{}.Mixin()
	scanMixinHooks0 := scanMixin[0].Hooks()
	scanMixinHooks1 := scanMixin[1].Hooks()
	scan.Hooks[0] = scanMixinHooks0[0]
	scan.Hooks[1] = scanMixinHooks0[1]
	scan.Hooks[2] = scanMixinHooks1[0]
	scanMixinInters1 := scanMixin[1].Interceptors()
	scan.Interceptors[0] = scanMixinInters1[0]
	scanMixinFields0 := scanMixin[0].Fields()
	_ = scanMixinFields0
	scanFields := schema.Scan{}.Fields()
	_ = scanFields
	// scanDescCreateTime is the schema descriptor for create_time field.
	scanDescCreateTime := scanMixinFields0[1].Descriptor()
	// scan.DefaultCreateTime holds the default value on creation for the create_time field.
	scan.DefaultCreateTime = scanDescCreateTime.Default.(func() time.Time)
	// scanDescUpdateTime is the schema descriptor for update_time field.
	scanDescUpdateTime := scanMixinFields0[3].Descriptor()
	// scan.DefaultUpdateTime holds the default value on creation for the update_time field.
	scan.DefaultUpdateTime = scanDescUpdateTime.Default.(func() time.Time)
	// scan.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	scan.UpdateDefaultUpdateTime = scanDescUpdateTime.UpdateDefault.(func() time.Time)
	// scanDescContent is the schema descriptor for content field.
	scanDescContent := scanFields[0].Descriptor()
	// scan.ContentValidator is a validator for the "content" field. It is called by the builders before save.
	scan.ContentValidator = func() func(string) error {
		validators := scanDescContent.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(content string) error {
			for _, fn := range fns {
				if err := fn(content); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// scanDescLength is the schema descriptor for length field.
	scanDescLength := scanFields[1].Descriptor()
	// scan.LengthValidator is a validator for the "length" field. It is called by the builders before save.
	scan.LengthValidator = scanDescLength.Validators[0].(func(int) error)
	scopeMixin := schema.Scope{}.Mixin()
	scopeMixinHooks0 := scopeMixin[0].Hooks()
	scopeMixinHooks1 := scopeMixin[1].Hooks()
	scope.Hooks[0] = scopeMixinHooks0[0]
	scope.Hooks[1] = scopeMixinHooks0[1]
	scope.Hooks[2] = scopeMixinHooks1[0]
	scopeMixinInters1 := scopeMixin[1].Interceptors()
	scope.Interceptors[0] = scopeMixinInters1[0]
	scopeMixinFields0 := scopeMixin[0].Fields()
	_ = scopeMixinFields0
	scopeFields := schema.Scope{}.Fields()
	_ = scopeFields
	// scopeDescCreateTime is the schema descriptor for create_time field.
	scopeDescCreateTime := scopeMixinFields0[1].Descriptor()
	// scope.DefaultCreateTime holds the default value on creation for the create_time field.
	scope.DefaultCreateTime = scopeDescCreateTime.Default.(func() time.Time)
	// scopeDescUpdateTime is the schema descriptor for update_time field.
	scopeDescUpdateTime := scopeMixinFields0[3].Descriptor()
	// scope.DefaultUpdateTime holds the default value on creation for the update_time field.
	scope.DefaultUpdateTime = scopeDescUpdateTime.Default.(func() time.Time)
	// scope.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	scope.UpdateDefaultUpdateTime = scopeDescUpdateTime.UpdateDefault.(func() time.Time)
	// scopeDescName is the schema descriptor for name field.
	scopeDescName := scopeFields[0].Descriptor()
	// scope.NameValidator is a validator for the "name" field. It is called by the builders before save.
	scope.NameValidator = scopeDescName.Validators[0].(func(string) error)
	// scopeDescOrder is the schema descriptor for order field.
	scopeDescOrder := scopeFields[8].Descriptor()
	// scope.DefaultOrder holds the default value on creation for the order field.
	scope.DefaultOrder = scopeDescOrder.Default.(int)
	// scopeDescHidden is the schema descriptor for hidden field.
	scopeDescHidden := scopeFields[9].Descriptor()
	// scope.DefaultHidden holds the default value on creation for the hidden field.
	scope.DefaultHidden = scopeDescHidden.Default.(bool)
	// scopeDescDisabled is the schema descriptor for disabled field.
	scopeDescDisabled := scopeFields[10].Descriptor()
	// scope.DefaultDisabled holds the default value on creation for the disabled field.
	scope.DefaultDisabled = scopeDescDisabled.Default.(bool)
	stationMixin := schema.Station{}.Mixin()
	stationMixinHooks0 := stationMixin[0].Hooks()
	stationMixinHooks1 := stationMixin[1].Hooks()
	station.Hooks[0] = stationMixinHooks0[0]
	station.Hooks[1] = stationMixinHooks0[1]
	station.Hooks[2] = stationMixinHooks1[0]
	stationMixinInters1 := stationMixin[1].Interceptors()
	station.Interceptors[0] = stationMixinInters1[0]
	stationMixinFields0 := stationMixin[0].Fields()
	_ = stationMixinFields0
	stationFields := schema.Station{}.Fields()
	_ = stationFields
	// stationDescCreateTime is the schema descriptor for create_time field.
	stationDescCreateTime := stationMixinFields0[1].Descriptor()
	// station.DefaultCreateTime holds the default value on creation for the create_time field.
	station.DefaultCreateTime = stationDescCreateTime.Default.(func() time.Time)
	// stationDescUpdateTime is the schema descriptor for update_time field.
	stationDescUpdateTime := stationMixinFields0[3].Descriptor()
	// station.DefaultUpdateTime holds the default value on creation for the update_time field.
	station.DefaultUpdateTime = stationDescUpdateTime.Default.(func() time.Time)
	// station.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	station.UpdateDefaultUpdateTime = stationDescUpdateTime.UpdateDefault.(func() time.Time)
	// stationDescName is the schema descriptor for name field.
	stationDescName := stationFields[0].Descriptor()
	// station.NameValidator is a validator for the "name" field. It is called by the builders before save.
	station.NameValidator = func() func(string) error {
		validators := stationDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	subwayMixin := schema.Subway{}.Mixin()
	subwayMixinHooks0 := subwayMixin[0].Hooks()
	subwayMixinHooks1 := subwayMixin[1].Hooks()
	subway.Hooks[0] = subwayMixinHooks0[0]
	subway.Hooks[1] = subwayMixinHooks0[1]
	subway.Hooks[2] = subwayMixinHooks1[0]
	subwayMixinInters1 := subwayMixin[1].Interceptors()
	subway.Interceptors[0] = subwayMixinInters1[0]
	subwayMixinFields0 := subwayMixin[0].Fields()
	_ = subwayMixinFields0
	subwayFields := schema.Subway{}.Fields()
	_ = subwayFields
	// subwayDescCreateTime is the schema descriptor for create_time field.
	subwayDescCreateTime := subwayMixinFields0[1].Descriptor()
	// subway.DefaultCreateTime holds the default value on creation for the create_time field.
	subway.DefaultCreateTime = subwayDescCreateTime.Default.(func() time.Time)
	// subwayDescUpdateTime is the schema descriptor for update_time field.
	subwayDescUpdateTime := subwayMixinFields0[3].Descriptor()
	// subway.DefaultUpdateTime holds the default value on creation for the update_time field.
	subway.DefaultUpdateTime = subwayDescUpdateTime.Default.(func() time.Time)
	// subway.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	subway.UpdateDefaultUpdateTime = subwayDescUpdateTime.UpdateDefault.(func() time.Time)
	// subwayDescName is the schema descriptor for name field.
	subwayDescName := subwayFields[0].Descriptor()
	// subway.NameValidator is a validator for the "name" field. It is called by the builders before save.
	subway.NameValidator = func() func(string) error {
		validators := subwayDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// subwayDescColor is the schema descriptor for color field.
	subwayDescColor := subwayFields[2].Descriptor()
	// subway.ColorValidator is a validator for the "color" field. It is called by the builders before save.
	subway.ColorValidator = subwayDescColor.Validators[0].(func(string) error)
	subwaystationMixin := schema.SubwayStation{}.Mixin()
	subwaystationMixinHooks0 := subwaystationMixin[0].Hooks()
	subwaystationMixinHooks1 := subwaystationMixin[1].Hooks()
	subwaystation.Hooks[0] = subwaystationMixinHooks0[0]
	subwaystation.Hooks[1] = subwaystationMixinHooks0[1]
	subwaystation.Hooks[2] = subwaystationMixinHooks1[0]
	subwaystationMixinInters1 := subwaystationMixin[1].Interceptors()
	subwaystation.Interceptors[0] = subwaystationMixinInters1[0]
	subwaystationMixinFields0 := subwaystationMixin[0].Fields()
	_ = subwaystationMixinFields0
	subwaystationFields := schema.SubwayStation{}.Fields()
	_ = subwaystationFields
	// subwaystationDescCreateTime is the schema descriptor for create_time field.
	subwaystationDescCreateTime := subwaystationMixinFields0[1].Descriptor()
	// subwaystation.DefaultCreateTime holds the default value on creation for the create_time field.
	subwaystation.DefaultCreateTime = subwaystationDescCreateTime.Default.(func() time.Time)
	// subwaystationDescUpdateTime is the schema descriptor for update_time field.
	subwaystationDescUpdateTime := subwaystationMixinFields0[3].Descriptor()
	// subwaystation.DefaultUpdateTime holds the default value on creation for the update_time field.
	subwaystation.DefaultUpdateTime = subwaystationDescUpdateTime.Default.(func() time.Time)
	// subwaystation.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	subwaystation.UpdateDefaultUpdateTime = subwaystationDescUpdateTime.UpdateDefault.(func() time.Time)
	systemmonitorMixin := schema.SystemMonitor{}.Mixin()
	systemmonitorMixinHooks0 := systemmonitorMixin[0].Hooks()
	systemmonitor.Hooks[0] = systemmonitorMixinHooks0[0]
	systemmonitor.Hooks[1] = systemmonitorMixinHooks0[1]
	systemmonitorMixinFields0 := systemmonitorMixin[0].Fields()
	_ = systemmonitorMixinFields0
	systemmonitorFields := schema.SystemMonitor{}.Fields()
	_ = systemmonitorFields
	// systemmonitorDescCreateTime is the schema descriptor for create_time field.
	systemmonitorDescCreateTime := systemmonitorMixinFields0[1].Descriptor()
	// systemmonitor.DefaultCreateTime holds the default value on creation for the create_time field.
	systemmonitor.DefaultCreateTime = systemmonitorDescCreateTime.Default.(func() time.Time)
	// systemmonitorDescUpdateTime is the schema descriptor for update_time field.
	systemmonitorDescUpdateTime := systemmonitorMixinFields0[3].Descriptor()
	// systemmonitor.DefaultUpdateTime holds the default value on creation for the update_time field.
	systemmonitor.DefaultUpdateTime = systemmonitorDescUpdateTime.Default.(func() time.Time)
	// systemmonitor.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	systemmonitor.UpdateDefaultUpdateTime = systemmonitorDescUpdateTime.UpdateDefault.(func() time.Time)
	// systemmonitorDescCPUUsagePercent is the schema descriptor for cpu_usage_percent field.
	systemmonitorDescCPUUsagePercent := systemmonitorFields[0].Descriptor()
	// systemmonitor.CPUUsagePercentValidator is a validator for the "cpu_usage_percent" field. It is called by the builders before save.
	systemmonitor.CPUUsagePercentValidator = func() func(float64) error {
		validators := systemmonitorDescCPUUsagePercent.Validators
		fns := [...]func(float64) error{
			validators[0].(func(float64) error),
			validators[1].(func(float64) error),
		}
		return func(cpu_usage_percent float64) error {
			for _, fn := range fns {
				if err := fn(cpu_usage_percent); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// systemmonitorDescCPUCores is the schema descriptor for cpu_cores field.
	systemmonitorDescCPUCores := systemmonitorFields[1].Descriptor()
	// systemmonitor.CPUCoresValidator is a validator for the "cpu_cores" field. It is called by the builders before save.
	systemmonitor.CPUCoresValidator = systemmonitorDescCPUCores.Validators[0].(func(int) error)
	// systemmonitorDescMemoryUsagePercent is the schema descriptor for memory_usage_percent field.
	systemmonitorDescMemoryUsagePercent := systemmonitorFields[5].Descriptor()
	// systemmonitor.MemoryUsagePercentValidator is a validator for the "memory_usage_percent" field. It is called by the builders before save.
	systemmonitor.MemoryUsagePercentValidator = func() func(float64) error {
		validators := systemmonitorDescMemoryUsagePercent.Validators
		fns := [...]func(float64) error{
			validators[0].(func(float64) error),
			validators[1].(func(float64) error),
		}
		return func(memory_usage_percent float64) error {
			for _, fn := range fns {
				if err := fn(memory_usage_percent); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// systemmonitorDescDiskUsagePercent is the schema descriptor for disk_usage_percent field.
	systemmonitorDescDiskUsagePercent := systemmonitorFields[9].Descriptor()
	// systemmonitor.DiskUsagePercentValidator is a validator for the "disk_usage_percent" field. It is called by the builders before save.
	systemmonitor.DiskUsagePercentValidator = func() func(float64) error {
		validators := systemmonitorDescDiskUsagePercent.Validators
		fns := [...]func(float64) error{
			validators[0].(func(float64) error),
			validators[1].(func(float64) error),
		}
		return func(disk_usage_percent float64) error {
			for _, fn := range fns {
				if err := fn(disk_usage_percent); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// systemmonitorDescNetworkBytesSent is the schema descriptor for network_bytes_sent field.
	systemmonitorDescNetworkBytesSent := systemmonitorFields[10].Descriptor()
	// systemmonitor.DefaultNetworkBytesSent holds the default value on creation for the network_bytes_sent field.
	systemmonitor.DefaultNetworkBytesSent = systemmonitorDescNetworkBytesSent.Default.(uint64)
	// systemmonitorDescNetworkBytesRecv is the schema descriptor for network_bytes_recv field.
	systemmonitorDescNetworkBytesRecv := systemmonitorFields[11].Descriptor()
	// systemmonitor.DefaultNetworkBytesRecv holds the default value on creation for the network_bytes_recv field.
	systemmonitor.DefaultNetworkBytesRecv = systemmonitorDescNetworkBytesRecv.Default.(uint64)
	// systemmonitorDescOs is the schema descriptor for os field.
	systemmonitorDescOs := systemmonitorFields[12].Descriptor()
	// systemmonitor.OsValidator is a validator for the "os" field. It is called by the builders before save.
	systemmonitor.OsValidator = systemmonitorDescOs.Validators[0].(func(string) error)
	// systemmonitorDescPlatform is the schema descriptor for platform field.
	systemmonitorDescPlatform := systemmonitorFields[13].Descriptor()
	// systemmonitor.PlatformValidator is a validator for the "platform" field. It is called by the builders before save.
	systemmonitor.PlatformValidator = systemmonitorDescPlatform.Validators[0].(func(string) error)
	// systemmonitorDescPlatformVersion is the schema descriptor for platform_version field.
	systemmonitorDescPlatformVersion := systemmonitorFields[14].Descriptor()
	// systemmonitor.PlatformVersionValidator is a validator for the "platform_version" field. It is called by the builders before save.
	systemmonitor.PlatformVersionValidator = systemmonitorDescPlatformVersion.Validators[0].(func(string) error)
	// systemmonitorDescHostname is the schema descriptor for hostname field.
	systemmonitorDescHostname := systemmonitorFields[15].Descriptor()
	// systemmonitor.HostnameValidator is a validator for the "hostname" field. It is called by the builders before save.
	systemmonitor.HostnameValidator = systemmonitorDescHostname.Validators[0].(func(string) error)
	// systemmonitorDescGoroutinesCount is the schema descriptor for goroutines_count field.
	systemmonitorDescGoroutinesCount := systemmonitorFields[16].Descriptor()
	// systemmonitor.GoroutinesCountValidator is a validator for the "goroutines_count" field. It is called by the builders before save.
	systemmonitor.GoroutinesCountValidator = systemmonitorDescGoroutinesCount.Validators[0].(func(int) error)
	userMixin := schema.User{}.Mixin()
	userMixinHooks0 := userMixin[0].Hooks()
	userMixinHooks1 := userMixin[1].Hooks()
	user.Hooks[0] = userMixinHooks0[0]
	user.Hooks[1] = userMixinHooks0[1]
	user.Hooks[2] = userMixinHooks1[0]
	userMixinInters1 := userMixin[1].Interceptors()
	user.Interceptors[0] = userMixinInters1[0]
	userMixinFields0 := userMixin[0].Fields()
	_ = userMixinFields0
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreateTime is the schema descriptor for create_time field.
	userDescCreateTime := userMixinFields0[1].Descriptor()
	// user.DefaultCreateTime holds the default value on creation for the create_time field.
	user.DefaultCreateTime = userDescCreateTime.Default.(func() time.Time)
	// userDescUpdateTime is the schema descriptor for update_time field.
	userDescUpdateTime := userMixinFields0[3].Descriptor()
	// user.DefaultUpdateTime holds the default value on creation for the update_time field.
	user.DefaultUpdateTime = userDescUpdateTime.Default.(func() time.Time)
	// user.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	user.UpdateDefaultUpdateTime = userDescUpdateTime.UpdateDefault.(func() time.Time)
	// userDescName is the schema descriptor for name field.
	userDescName := userFields[0].Descriptor()
	// user.NameValidator is a validator for the "name" field. It is called by the builders before save.
	user.NameValidator = func() func(string) error {
		validators := userDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// userDescAge is the schema descriptor for age field.
	userDescAge := userFields[1].Descriptor()
	// user.AgeValidator is a validator for the "age" field. It is called by the builders before save.
	user.AgeValidator = userDescAge.Validators[0].(func(int) error)
	userroleMixin := schema.UserRole{}.Mixin()
	userroleMixinHooks0 := userroleMixin[0].Hooks()
	userroleMixinHooks1 := userroleMixin[1].Hooks()
	userrole.Hooks[0] = userroleMixinHooks0[0]
	userrole.Hooks[1] = userroleMixinHooks0[1]
	userrole.Hooks[2] = userroleMixinHooks1[0]
	userroleMixinInters1 := userroleMixin[1].Interceptors()
	userrole.Interceptors[0] = userroleMixinInters1[0]
	userroleMixinFields0 := userroleMixin[0].Fields()
	_ = userroleMixinFields0
	userroleFields := schema.UserRole{}.Fields()
	_ = userroleFields
	// userroleDescCreateTime is the schema descriptor for create_time field.
	userroleDescCreateTime := userroleMixinFields0[1].Descriptor()
	// userrole.DefaultCreateTime holds the default value on creation for the create_time field.
	userrole.DefaultCreateTime = userroleDescCreateTime.Default.(func() time.Time)
	// userroleDescUpdateTime is the schema descriptor for update_time field.
	userroleDescUpdateTime := userroleMixinFields0[3].Descriptor()
	// userrole.DefaultUpdateTime holds the default value on creation for the update_time field.
	userrole.DefaultUpdateTime = userroleDescUpdateTime.Default.(func() time.Time)
	// userrole.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	userrole.UpdateDefaultUpdateTime = userroleDescUpdateTime.UpdateDefault.(func() time.Time)
	verifycodeMixin := schema.VerifyCode{}.Mixin()
	verifycodeMixinHooks0 := verifycodeMixin[0].Hooks()
	verifycodeMixinHooks1 := verifycodeMixin[1].Hooks()
	verifycode.Hooks[0] = verifycodeMixinHooks0[0]
	verifycode.Hooks[1] = verifycodeMixinHooks0[1]
	verifycode.Hooks[2] = verifycodeMixinHooks1[0]
	verifycodeMixinInters1 := verifycodeMixin[1].Interceptors()
	verifycode.Interceptors[0] = verifycodeMixinInters1[0]
	verifycodeMixinFields0 := verifycodeMixin[0].Fields()
	_ = verifycodeMixinFields0
	verifycodeFields := schema.VerifyCode{}.Fields()
	_ = verifycodeFields
	// verifycodeDescCreateTime is the schema descriptor for create_time field.
	verifycodeDescCreateTime := verifycodeMixinFields0[1].Descriptor()
	// verifycode.DefaultCreateTime holds the default value on creation for the create_time field.
	verifycode.DefaultCreateTime = verifycodeDescCreateTime.Default.(func() time.Time)
	// verifycodeDescUpdateTime is the schema descriptor for update_time field.
	verifycodeDescUpdateTime := verifycodeMixinFields0[3].Descriptor()
	// verifycode.DefaultUpdateTime holds the default value on creation for the update_time field.
	verifycode.DefaultUpdateTime = verifycodeDescUpdateTime.Default.(func() time.Time)
	// verifycode.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	verifycode.UpdateDefaultUpdateTime = verifycodeDescUpdateTime.UpdateDefault.(func() time.Time)
	// verifycodeDescCode is the schema descriptor for code field.
	verifycodeDescCode := verifycodeFields[0].Descriptor()
	// verifycode.CodeValidator is a validator for the "code" field. It is called by the builders before save.
	verifycode.CodeValidator = verifycodeDescCode.Validators[0].(func(string) error)
	// verifycodeDescIdentifier is the schema descriptor for identifier field.
	verifycodeDescIdentifier := verifycodeFields[1].Descriptor()
	// verifycode.IdentifierValidator is a validator for the "identifier" field. It is called by the builders before save.
	verifycode.IdentifierValidator = verifycodeDescIdentifier.Validators[0].(func(string) error)
	// verifycodeDescSendFor is the schema descriptor for send_for field.
	verifycodeDescSendFor := verifycodeFields[3].Descriptor()
	// verifycode.SendForValidator is a validator for the "send_for" field. It is called by the builders before save.
	verifycode.SendForValidator = verifycodeDescSendFor.Validators[0].(func(string) error)
	// verifycodeDescSendSuccess is the schema descriptor for send_success field.
	verifycodeDescSendSuccess := verifycodeFields[6].Descriptor()
	// verifycode.DefaultSendSuccess holds the default value on creation for the send_success field.
	verifycode.DefaultSendSuccess = verifycodeDescSendSuccess.Default.(bool)
	workflowapplicationMixin := schema.WorkflowApplication{}.Mixin()
	workflowapplicationMixinHooks0 := workflowapplicationMixin[0].Hooks()
	workflowapplicationMixinHooks1 := workflowapplicationMixin[1].Hooks()
	workflowapplication.Hooks[0] = workflowapplicationMixinHooks0[0]
	workflowapplication.Hooks[1] = workflowapplicationMixinHooks0[1]
	workflowapplication.Hooks[2] = workflowapplicationMixinHooks1[0]
	workflowapplicationMixinInters1 := workflowapplicationMixin[1].Interceptors()
	workflowapplication.Interceptors[0] = workflowapplicationMixinInters1[0]
	workflowapplicationMixinFields0 := workflowapplicationMixin[0].Fields()
	_ = workflowapplicationMixinFields0
	workflowapplicationFields := schema.WorkflowApplication{}.Fields()
	_ = workflowapplicationFields
	// workflowapplicationDescCreateTime is the schema descriptor for create_time field.
	workflowapplicationDescCreateTime := workflowapplicationMixinFields0[1].Descriptor()
	// workflowapplication.DefaultCreateTime holds the default value on creation for the create_time field.
	workflowapplication.DefaultCreateTime = workflowapplicationDescCreateTime.Default.(func() time.Time)
	// workflowapplicationDescUpdateTime is the schema descriptor for update_time field.
	workflowapplicationDescUpdateTime := workflowapplicationMixinFields0[3].Descriptor()
	// workflowapplication.DefaultUpdateTime holds the default value on creation for the update_time field.
	workflowapplication.DefaultUpdateTime = workflowapplicationDescUpdateTime.Default.(func() time.Time)
	// workflowapplication.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	workflowapplication.UpdateDefaultUpdateTime = workflowapplicationDescUpdateTime.UpdateDefault.(func() time.Time)
	// workflowapplicationDescName is the schema descriptor for name field.
	workflowapplicationDescName := workflowapplicationFields[0].Descriptor()
	// workflowapplication.NameValidator is a validator for the "name" field. It is called by the builders before save.
	workflowapplication.NameValidator = workflowapplicationDescName.Validators[0].(func(string) error)
	// workflowapplicationDescVersion is the schema descriptor for version field.
	workflowapplicationDescVersion := workflowapplicationFields[5].Descriptor()
	// workflowapplication.DefaultVersion holds the default value on creation for the version field.
	workflowapplication.DefaultVersion = workflowapplicationDescVersion.Default.(uint)
	workflowedgeMixin := schema.WorkflowEdge{}.Mixin()
	workflowedgeMixinHooks0 := workflowedgeMixin[0].Hooks()
	workflowedgeMixinHooks1 := workflowedgeMixin[1].Hooks()
	workflowedge.Hooks[0] = workflowedgeMixinHooks0[0]
	workflowedge.Hooks[1] = workflowedgeMixinHooks0[1]
	workflowedge.Hooks[2] = workflowedgeMixinHooks1[0]
	workflowedgeMixinInters1 := workflowedgeMixin[1].Interceptors()
	workflowedge.Interceptors[0] = workflowedgeMixinInters1[0]
	workflowedgeMixinFields0 := workflowedgeMixin[0].Fields()
	_ = workflowedgeMixinFields0
	workflowedgeFields := schema.WorkflowEdge{}.Fields()
	_ = workflowedgeFields
	// workflowedgeDescCreateTime is the schema descriptor for create_time field.
	workflowedgeDescCreateTime := workflowedgeMixinFields0[1].Descriptor()
	// workflowedge.DefaultCreateTime holds the default value on creation for the create_time field.
	workflowedge.DefaultCreateTime = workflowedgeDescCreateTime.Default.(func() time.Time)
	// workflowedgeDescUpdateTime is the schema descriptor for update_time field.
	workflowedgeDescUpdateTime := workflowedgeMixinFields0[3].Descriptor()
	// workflowedge.DefaultUpdateTime holds the default value on creation for the update_time field.
	workflowedge.DefaultUpdateTime = workflowedgeDescUpdateTime.Default.(func() time.Time)
	// workflowedge.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	workflowedge.UpdateDefaultUpdateTime = workflowedgeDescUpdateTime.UpdateDefault.(func() time.Time)
	// workflowedgeDescEdgeKey is the schema descriptor for edge_key field.
	workflowedgeDescEdgeKey := workflowedgeFields[0].Descriptor()
	// workflowedge.EdgeKeyValidator is a validator for the "edge_key" field. It is called by the builders before save.
	workflowedge.EdgeKeyValidator = workflowedgeDescEdgeKey.Validators[0].(func(string) error)
	// workflowedgeDescAnimated is the schema descriptor for animated field.
	workflowedgeDescAnimated := workflowedgeFields[9].Descriptor()
	// workflowedge.DefaultAnimated holds the default value on creation for the animated field.
	workflowedge.DefaultAnimated = workflowedgeDescAnimated.Default.(bool)
	workflowexecutionMixin := schema.WorkflowExecution{}.Mixin()
	workflowexecutionMixinHooks0 := workflowexecutionMixin[0].Hooks()
	workflowexecution.Hooks[0] = workflowexecutionMixinHooks0[0]
	workflowexecution.Hooks[1] = workflowexecutionMixinHooks0[1]
	workflowexecutionMixinFields0 := workflowexecutionMixin[0].Fields()
	_ = workflowexecutionMixinFields0
	workflowexecutionFields := schema.WorkflowExecution{}.Fields()
	_ = workflowexecutionFields
	// workflowexecutionDescCreateTime is the schema descriptor for create_time field.
	workflowexecutionDescCreateTime := workflowexecutionMixinFields0[1].Descriptor()
	// workflowexecution.DefaultCreateTime holds the default value on creation for the create_time field.
	workflowexecution.DefaultCreateTime = workflowexecutionDescCreateTime.Default.(func() time.Time)
	// workflowexecutionDescUpdateTime is the schema descriptor for update_time field.
	workflowexecutionDescUpdateTime := workflowexecutionMixinFields0[3].Descriptor()
	// workflowexecution.DefaultUpdateTime holds the default value on creation for the update_time field.
	workflowexecution.DefaultUpdateTime = workflowexecutionDescUpdateTime.Default.(func() time.Time)
	// workflowexecution.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	workflowexecution.UpdateDefaultUpdateTime = workflowexecutionDescUpdateTime.UpdateDefault.(func() time.Time)
	// workflowexecutionDescExecutionID is the schema descriptor for execution_id field.
	workflowexecutionDescExecutionID := workflowexecutionFields[0].Descriptor()
	// workflowexecution.ExecutionIDValidator is a validator for the "execution_id" field. It is called by the builders before save.
	workflowexecution.ExecutionIDValidator = workflowexecutionDescExecutionID.Validators[0].(func(string) error)
	// workflowexecutionDescDurationMs is the schema descriptor for duration_ms field.
	workflowexecutionDescDurationMs := workflowexecutionFields[8].Descriptor()
	// workflowexecution.DefaultDurationMs holds the default value on creation for the duration_ms field.
	workflowexecution.DefaultDurationMs = workflowexecutionDescDurationMs.Default.(int)
	// workflowexecutionDescTotalTokens is the schema descriptor for total_tokens field.
	workflowexecutionDescTotalTokens := workflowexecutionFields[9].Descriptor()
	// workflowexecution.DefaultTotalTokens holds the default value on creation for the total_tokens field.
	workflowexecution.DefaultTotalTokens = workflowexecutionDescTotalTokens.Default.(int)
	// workflowexecutionDescTotalCost is the schema descriptor for total_cost field.
	workflowexecutionDescTotalCost := workflowexecutionFields[10].Descriptor()
	// workflowexecution.DefaultTotalCost holds the default value on creation for the total_cost field.
	workflowexecution.DefaultTotalCost = workflowexecutionDescTotalCost.Default.(float64)
	workflowexecutionlogMixin := schema.WorkflowExecutionLog{}.Mixin()
	workflowexecutionlogMixinHooks0 := workflowexecutionlogMixin[0].Hooks()
	workflowexecutionlog.Hooks[0] = workflowexecutionlogMixinHooks0[0]
	workflowexecutionlog.Hooks[1] = workflowexecutionlogMixinHooks0[1]
	workflowexecutionlogMixinFields0 := workflowexecutionlogMixin[0].Fields()
	_ = workflowexecutionlogMixinFields0
	workflowexecutionlogFields := schema.WorkflowExecutionLog{}.Fields()
	_ = workflowexecutionlogFields
	// workflowexecutionlogDescCreateTime is the schema descriptor for create_time field.
	workflowexecutionlogDescCreateTime := workflowexecutionlogMixinFields0[1].Descriptor()
	// workflowexecutionlog.DefaultCreateTime holds the default value on creation for the create_time field.
	workflowexecutionlog.DefaultCreateTime = workflowexecutionlogDescCreateTime.Default.(func() time.Time)
	// workflowexecutionlogDescUpdateTime is the schema descriptor for update_time field.
	workflowexecutionlogDescUpdateTime := workflowexecutionlogMixinFields0[3].Descriptor()
	// workflowexecutionlog.DefaultUpdateTime holds the default value on creation for the update_time field.
	workflowexecutionlog.DefaultUpdateTime = workflowexecutionlogDescUpdateTime.Default.(func() time.Time)
	// workflowexecutionlog.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	workflowexecutionlog.UpdateDefaultUpdateTime = workflowexecutionlogDescUpdateTime.UpdateDefault.(func() time.Time)
	// workflowexecutionlogDescLoggedAt is the schema descriptor for logged_at field.
	workflowexecutionlogDescLoggedAt := workflowexecutionlogFields[5].Descriptor()
	// workflowexecutionlog.DefaultLoggedAt holds the default value on creation for the logged_at field.
	workflowexecutionlog.DefaultLoggedAt = workflowexecutionlogDescLoggedAt.Default.(func() time.Time)
	workflownodeMixin := schema.WorkflowNode{}.Mixin()
	workflownodeMixinHooks0 := workflownodeMixin[0].Hooks()
	workflownodeMixinHooks1 := workflownodeMixin[1].Hooks()
	workflownode.Hooks[0] = workflownodeMixinHooks0[0]
	workflownode.Hooks[1] = workflownodeMixinHooks0[1]
	workflownode.Hooks[2] = workflownodeMixinHooks1[0]
	workflownodeMixinInters1 := workflownodeMixin[1].Interceptors()
	workflownode.Interceptors[0] = workflownodeMixinInters1[0]
	workflownodeMixinFields0 := workflownodeMixin[0].Fields()
	_ = workflownodeMixinFields0
	workflownodeFields := schema.WorkflowNode{}.Fields()
	_ = workflownodeFields
	// workflownodeDescCreateTime is the schema descriptor for create_time field.
	workflownodeDescCreateTime := workflownodeMixinFields0[1].Descriptor()
	// workflownode.DefaultCreateTime holds the default value on creation for the create_time field.
	workflownode.DefaultCreateTime = workflownodeDescCreateTime.Default.(func() time.Time)
	// workflownodeDescUpdateTime is the schema descriptor for update_time field.
	workflownodeDescUpdateTime := workflownodeMixinFields0[3].Descriptor()
	// workflownode.DefaultUpdateTime holds the default value on creation for the update_time field.
	workflownode.DefaultUpdateTime = workflownodeDescUpdateTime.Default.(func() time.Time)
	// workflownode.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	workflownode.UpdateDefaultUpdateTime = workflownodeDescUpdateTime.UpdateDefault.(func() time.Time)
	// workflownodeDescName is the schema descriptor for name field.
	workflownodeDescName := workflownodeFields[0].Descriptor()
	// workflownode.NameValidator is a validator for the "name" field. It is called by the builders before save.
	workflownode.NameValidator = workflownodeDescName.Validators[0].(func(string) error)
	// workflownodeDescNodeKey is the schema descriptor for node_key field.
	workflownodeDescNodeKey := workflownodeFields[1].Descriptor()
	// workflownode.NodeKeyValidator is a validator for the "node_key" field. It is called by the builders before save.
	workflownode.NodeKeyValidator = workflownodeDescNodeKey.Validators[0].(func(string) error)
	// workflownodeDescAsync is the schema descriptor for async field.
	workflownodeDescAsync := workflownodeFields[14].Descriptor()
	// workflownode.DefaultAsync holds the default value on creation for the async field.
	workflownode.DefaultAsync = workflownodeDescAsync.Default.(bool)
	// workflownodeDescTimeout is the schema descriptor for timeout field.
	workflownodeDescTimeout := workflownodeFields[15].Descriptor()
	// workflownode.DefaultTimeout holds the default value on creation for the timeout field.
	workflownode.DefaultTimeout = workflownodeDescTimeout.Default.(int)
	// workflownodeDescRetryCount is the schema descriptor for retry_count field.
	workflownodeDescRetryCount := workflownodeFields[16].Descriptor()
	// workflownode.DefaultRetryCount holds the default value on creation for the retry_count field.
	workflownode.DefaultRetryCount = workflownodeDescRetryCount.Default.(int)
	// workflownodeDescPositionX is the schema descriptor for position_x field.
	workflownodeDescPositionX := workflownodeFields[17].Descriptor()
	// workflownode.DefaultPositionX holds the default value on creation for the position_x field.
	workflownode.DefaultPositionX = workflownodeDescPositionX.Default.(float64)
	// workflownodeDescPositionY is the schema descriptor for position_y field.
	workflownodeDescPositionY := workflownodeFields[18].Descriptor()
	// workflownode.DefaultPositionY holds the default value on creation for the position_y field.
	workflownode.DefaultPositionY = workflownodeDescPositionY.Default.(float64)
	workflownodeexecutionMixin := schema.WorkflowNodeExecution{}.Mixin()
	workflownodeexecutionMixinHooks0 := workflownodeexecutionMixin[0].Hooks()
	workflownodeexecution.Hooks[0] = workflownodeexecutionMixinHooks0[0]
	workflownodeexecution.Hooks[1] = workflownodeexecutionMixinHooks0[1]
	workflownodeexecutionMixinFields0 := workflownodeexecutionMixin[0].Fields()
	_ = workflownodeexecutionMixinFields0
	workflownodeexecutionFields := schema.WorkflowNodeExecution{}.Fields()
	_ = workflownodeexecutionFields
	// workflownodeexecutionDescCreateTime is the schema descriptor for create_time field.
	workflownodeexecutionDescCreateTime := workflownodeexecutionMixinFields0[1].Descriptor()
	// workflownodeexecution.DefaultCreateTime holds the default value on creation for the create_time field.
	workflownodeexecution.DefaultCreateTime = workflownodeexecutionDescCreateTime.Default.(func() time.Time)
	// workflownodeexecutionDescUpdateTime is the schema descriptor for update_time field.
	workflownodeexecutionDescUpdateTime := workflownodeexecutionMixinFields0[3].Descriptor()
	// workflownodeexecution.DefaultUpdateTime holds the default value on creation for the update_time field.
	workflownodeexecution.DefaultUpdateTime = workflownodeexecutionDescUpdateTime.Default.(func() time.Time)
	// workflownodeexecution.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	workflownodeexecution.UpdateDefaultUpdateTime = workflownodeexecutionDescUpdateTime.UpdateDefault.(func() time.Time)
	// workflownodeexecutionDescDurationMs is the schema descriptor for duration_ms field.
	workflownodeexecutionDescDurationMs := workflownodeexecutionFields[10].Descriptor()
	// workflownodeexecution.DefaultDurationMs holds the default value on creation for the duration_ms field.
	workflownodeexecution.DefaultDurationMs = workflownodeexecutionDescDurationMs.Default.(int)
	// workflownodeexecutionDescPromptTokens is the schema descriptor for prompt_tokens field.
	workflownodeexecutionDescPromptTokens := workflownodeexecutionFields[11].Descriptor()
	// workflownodeexecution.DefaultPromptTokens holds the default value on creation for the prompt_tokens field.
	workflownodeexecution.DefaultPromptTokens = workflownodeexecutionDescPromptTokens.Default.(int)
	// workflownodeexecutionDescCompletionTokens is the schema descriptor for completion_tokens field.
	workflownodeexecutionDescCompletionTokens := workflownodeexecutionFields[12].Descriptor()
	// workflownodeexecution.DefaultCompletionTokens holds the default value on creation for the completion_tokens field.
	workflownodeexecution.DefaultCompletionTokens = workflownodeexecutionDescCompletionTokens.Default.(int)
	// workflownodeexecutionDescTotalTokens is the schema descriptor for total_tokens field.
	workflownodeexecutionDescTotalTokens := workflownodeexecutionFields[13].Descriptor()
	// workflownodeexecution.DefaultTotalTokens holds the default value on creation for the total_tokens field.
	workflownodeexecution.DefaultTotalTokens = workflownodeexecutionDescTotalTokens.Default.(int)
	// workflownodeexecutionDescCost is the schema descriptor for cost field.
	workflownodeexecutionDescCost := workflownodeexecutionFields[14].Descriptor()
	// workflownodeexecution.DefaultCost holds the default value on creation for the cost field.
	workflownodeexecution.DefaultCost = workflownodeexecutionDescCost.Default.(float64)
	// workflownodeexecutionDescRetryCount is the schema descriptor for retry_count field.
	workflownodeexecutionDescRetryCount := workflownodeexecutionFields[18].Descriptor()
	// workflownodeexecution.DefaultRetryCount holds the default value on creation for the retry_count field.
	workflownodeexecution.DefaultRetryCount = workflownodeexecutionDescRetryCount.Default.(int)
	// workflownodeexecutionDescIsAsync is the schema descriptor for is_async field.
	workflownodeexecutionDescIsAsync := workflownodeexecutionFields[19].Descriptor()
	// workflownodeexecution.DefaultIsAsync holds the default value on creation for the is_async field.
	workflownodeexecution.DefaultIsAsync = workflownodeexecutionDescIsAsync.Default.(bool)
	workflowversionMixin := schema.WorkflowVersion{}.Mixin()
	workflowversionMixinHooks0 := workflowversionMixin[0].Hooks()
	workflowversion.Hooks[0] = workflowversionMixinHooks0[0]
	workflowversion.Hooks[1] = workflowversionMixinHooks0[1]
	workflowversionMixinFields0 := workflowversionMixin[0].Fields()
	_ = workflowversionMixinFields0
	workflowversionFields := schema.WorkflowVersion{}.Fields()
	_ = workflowversionFields
	// workflowversionDescCreateTime is the schema descriptor for create_time field.
	workflowversionDescCreateTime := workflowversionMixinFields0[1].Descriptor()
	// workflowversion.DefaultCreateTime holds the default value on creation for the create_time field.
	workflowversion.DefaultCreateTime = workflowversionDescCreateTime.Default.(func() time.Time)
	// workflowversionDescUpdateTime is the schema descriptor for update_time field.
	workflowversionDescUpdateTime := workflowversionMixinFields0[3].Descriptor()
	// workflowversion.DefaultUpdateTime holds the default value on creation for the update_time field.
	workflowversion.DefaultUpdateTime = workflowversionDescUpdateTime.Default.(func() time.Time)
	// workflowversion.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	workflowversion.UpdateDefaultUpdateTime = workflowversionDescUpdateTime.UpdateDefault.(func() time.Time)
}

const (
	Version = "v0.14.5"                                         // Version of ent codegen.
	Sum     = "h1:Rj2WOYJtCkWyFo6a+5wB3EfBRP0rnx1fMk6gGA0UUe4=" // Sum of ent codegen.
)
