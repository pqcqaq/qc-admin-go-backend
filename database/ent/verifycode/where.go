// Code generated by ent, DO NOT EDIT.

package verifycode

import (
	"go-backend/database/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id uint64) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uint64) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uint64) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uint64) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uint64) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uint64) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uint64) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uint64) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uint64) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldLTE(FieldID, id))
}

// CreateTime applies equality check predicate on the "create_time" field. It's identical to CreateTimeEQ.
func CreateTime(v time.Time) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldEQ(FieldCreateTime, v))
}

// CreateBy applies equality check predicate on the "create_by" field. It's identical to CreateByEQ.
func CreateBy(v uint64) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldEQ(FieldCreateBy, v))
}

// UpdateTime applies equality check predicate on the "update_time" field. It's identical to UpdateTimeEQ.
func UpdateTime(v time.Time) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldEQ(FieldUpdateTime, v))
}

// UpdateBy applies equality check predicate on the "update_by" field. It's identical to UpdateByEQ.
func UpdateBy(v uint64) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldEQ(FieldUpdateBy, v))
}

// DeleteTime applies equality check predicate on the "delete_time" field. It's identical to DeleteTimeEQ.
func DeleteTime(v time.Time) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldEQ(FieldDeleteTime, v))
}

// DeleteBy applies equality check predicate on the "delete_by" field. It's identical to DeleteByEQ.
func DeleteBy(v uint64) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldEQ(FieldDeleteBy, v))
}

// Code applies equality check predicate on the "code" field. It's identical to CodeEQ.
func Code(v string) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldEQ(FieldCode, v))
}

// Identifier applies equality check predicate on the "identifier" field. It's identical to IdentifierEQ.
func Identifier(v string) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldEQ(FieldIdentifier, v))
}

// SendFor applies equality check predicate on the "send_for" field. It's identical to SendForEQ.
func SendFor(v string) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldEQ(FieldSendFor, v))
}

// ExpiresAt applies equality check predicate on the "expires_at" field. It's identical to ExpiresAtEQ.
func ExpiresAt(v time.Time) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldEQ(FieldExpiresAt, v))
}

// UsedAt applies equality check predicate on the "used_at" field. It's identical to UsedAtEQ.
func UsedAt(v time.Time) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldEQ(FieldUsedAt, v))
}

// SendSuccess applies equality check predicate on the "send_success" field. It's identical to SendSuccessEQ.
func SendSuccess(v bool) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldEQ(FieldSendSuccess, v))
}

// SendAt applies equality check predicate on the "send_at" field. It's identical to SendAtEQ.
func SendAt(v time.Time) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldEQ(FieldSendAt, v))
}

// ClientID applies equality check predicate on the "client_id" field. It's identical to ClientIDEQ.
func ClientID(v uint64) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldEQ(FieldClientID, v))
}

// CreateTimeEQ applies the EQ predicate on the "create_time" field.
func CreateTimeEQ(v time.Time) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldEQ(FieldCreateTime, v))
}

// CreateTimeNEQ applies the NEQ predicate on the "create_time" field.
func CreateTimeNEQ(v time.Time) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldNEQ(FieldCreateTime, v))
}

// CreateTimeIn applies the In predicate on the "create_time" field.
func CreateTimeIn(vs ...time.Time) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldIn(FieldCreateTime, vs...))
}

// CreateTimeNotIn applies the NotIn predicate on the "create_time" field.
func CreateTimeNotIn(vs ...time.Time) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldNotIn(FieldCreateTime, vs...))
}

// CreateTimeGT applies the GT predicate on the "create_time" field.
func CreateTimeGT(v time.Time) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldGT(FieldCreateTime, v))
}

// CreateTimeGTE applies the GTE predicate on the "create_time" field.
func CreateTimeGTE(v time.Time) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldGTE(FieldCreateTime, v))
}

// CreateTimeLT applies the LT predicate on the "create_time" field.
func CreateTimeLT(v time.Time) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldLT(FieldCreateTime, v))
}

// CreateTimeLTE applies the LTE predicate on the "create_time" field.
func CreateTimeLTE(v time.Time) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldLTE(FieldCreateTime, v))
}

// CreateByEQ applies the EQ predicate on the "create_by" field.
func CreateByEQ(v uint64) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldEQ(FieldCreateBy, v))
}

// CreateByNEQ applies the NEQ predicate on the "create_by" field.
func CreateByNEQ(v uint64) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldNEQ(FieldCreateBy, v))
}

// CreateByIn applies the In predicate on the "create_by" field.
func CreateByIn(vs ...uint64) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldIn(FieldCreateBy, vs...))
}

// CreateByNotIn applies the NotIn predicate on the "create_by" field.
func CreateByNotIn(vs ...uint64) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldNotIn(FieldCreateBy, vs...))
}

// CreateByGT applies the GT predicate on the "create_by" field.
func CreateByGT(v uint64) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldGT(FieldCreateBy, v))
}

// CreateByGTE applies the GTE predicate on the "create_by" field.
func CreateByGTE(v uint64) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldGTE(FieldCreateBy, v))
}

// CreateByLT applies the LT predicate on the "create_by" field.
func CreateByLT(v uint64) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldLT(FieldCreateBy, v))
}

// CreateByLTE applies the LTE predicate on the "create_by" field.
func CreateByLTE(v uint64) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldLTE(FieldCreateBy, v))
}

// CreateByIsNil applies the IsNil predicate on the "create_by" field.
func CreateByIsNil() predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldIsNull(FieldCreateBy))
}

// CreateByNotNil applies the NotNil predicate on the "create_by" field.
func CreateByNotNil() predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldNotNull(FieldCreateBy))
}

// UpdateTimeEQ applies the EQ predicate on the "update_time" field.
func UpdateTimeEQ(v time.Time) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldEQ(FieldUpdateTime, v))
}

// UpdateTimeNEQ applies the NEQ predicate on the "update_time" field.
func UpdateTimeNEQ(v time.Time) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldNEQ(FieldUpdateTime, v))
}

// UpdateTimeIn applies the In predicate on the "update_time" field.
func UpdateTimeIn(vs ...time.Time) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldIn(FieldUpdateTime, vs...))
}

// UpdateTimeNotIn applies the NotIn predicate on the "update_time" field.
func UpdateTimeNotIn(vs ...time.Time) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldNotIn(FieldUpdateTime, vs...))
}

// UpdateTimeGT applies the GT predicate on the "update_time" field.
func UpdateTimeGT(v time.Time) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldGT(FieldUpdateTime, v))
}

// UpdateTimeGTE applies the GTE predicate on the "update_time" field.
func UpdateTimeGTE(v time.Time) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldGTE(FieldUpdateTime, v))
}

// UpdateTimeLT applies the LT predicate on the "update_time" field.
func UpdateTimeLT(v time.Time) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldLT(FieldUpdateTime, v))
}

// UpdateTimeLTE applies the LTE predicate on the "update_time" field.
func UpdateTimeLTE(v time.Time) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldLTE(FieldUpdateTime, v))
}

// UpdateByEQ applies the EQ predicate on the "update_by" field.
func UpdateByEQ(v uint64) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldEQ(FieldUpdateBy, v))
}

// UpdateByNEQ applies the NEQ predicate on the "update_by" field.
func UpdateByNEQ(v uint64) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldNEQ(FieldUpdateBy, v))
}

// UpdateByIn applies the In predicate on the "update_by" field.
func UpdateByIn(vs ...uint64) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldIn(FieldUpdateBy, vs...))
}

// UpdateByNotIn applies the NotIn predicate on the "update_by" field.
func UpdateByNotIn(vs ...uint64) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldNotIn(FieldUpdateBy, vs...))
}

// UpdateByGT applies the GT predicate on the "update_by" field.
func UpdateByGT(v uint64) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldGT(FieldUpdateBy, v))
}

// UpdateByGTE applies the GTE predicate on the "update_by" field.
func UpdateByGTE(v uint64) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldGTE(FieldUpdateBy, v))
}

// UpdateByLT applies the LT predicate on the "update_by" field.
func UpdateByLT(v uint64) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldLT(FieldUpdateBy, v))
}

// UpdateByLTE applies the LTE predicate on the "update_by" field.
func UpdateByLTE(v uint64) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldLTE(FieldUpdateBy, v))
}

// UpdateByIsNil applies the IsNil predicate on the "update_by" field.
func UpdateByIsNil() predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldIsNull(FieldUpdateBy))
}

// UpdateByNotNil applies the NotNil predicate on the "update_by" field.
func UpdateByNotNil() predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldNotNull(FieldUpdateBy))
}

// DeleteTimeEQ applies the EQ predicate on the "delete_time" field.
func DeleteTimeEQ(v time.Time) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldEQ(FieldDeleteTime, v))
}

// DeleteTimeNEQ applies the NEQ predicate on the "delete_time" field.
func DeleteTimeNEQ(v time.Time) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldNEQ(FieldDeleteTime, v))
}

// DeleteTimeIn applies the In predicate on the "delete_time" field.
func DeleteTimeIn(vs ...time.Time) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldIn(FieldDeleteTime, vs...))
}

// DeleteTimeNotIn applies the NotIn predicate on the "delete_time" field.
func DeleteTimeNotIn(vs ...time.Time) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldNotIn(FieldDeleteTime, vs...))
}

// DeleteTimeGT applies the GT predicate on the "delete_time" field.
func DeleteTimeGT(v time.Time) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldGT(FieldDeleteTime, v))
}

// DeleteTimeGTE applies the GTE predicate on the "delete_time" field.
func DeleteTimeGTE(v time.Time) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldGTE(FieldDeleteTime, v))
}

// DeleteTimeLT applies the LT predicate on the "delete_time" field.
func DeleteTimeLT(v time.Time) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldLT(FieldDeleteTime, v))
}

// DeleteTimeLTE applies the LTE predicate on the "delete_time" field.
func DeleteTimeLTE(v time.Time) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldLTE(FieldDeleteTime, v))
}

// DeleteTimeIsNil applies the IsNil predicate on the "delete_time" field.
func DeleteTimeIsNil() predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldIsNull(FieldDeleteTime))
}

// DeleteTimeNotNil applies the NotNil predicate on the "delete_time" field.
func DeleteTimeNotNil() predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldNotNull(FieldDeleteTime))
}

// DeleteByEQ applies the EQ predicate on the "delete_by" field.
func DeleteByEQ(v uint64) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldEQ(FieldDeleteBy, v))
}

// DeleteByNEQ applies the NEQ predicate on the "delete_by" field.
func DeleteByNEQ(v uint64) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldNEQ(FieldDeleteBy, v))
}

// DeleteByIn applies the In predicate on the "delete_by" field.
func DeleteByIn(vs ...uint64) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldIn(FieldDeleteBy, vs...))
}

// DeleteByNotIn applies the NotIn predicate on the "delete_by" field.
func DeleteByNotIn(vs ...uint64) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldNotIn(FieldDeleteBy, vs...))
}

// DeleteByGT applies the GT predicate on the "delete_by" field.
func DeleteByGT(v uint64) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldGT(FieldDeleteBy, v))
}

// DeleteByGTE applies the GTE predicate on the "delete_by" field.
func DeleteByGTE(v uint64) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldGTE(FieldDeleteBy, v))
}

// DeleteByLT applies the LT predicate on the "delete_by" field.
func DeleteByLT(v uint64) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldLT(FieldDeleteBy, v))
}

// DeleteByLTE applies the LTE predicate on the "delete_by" field.
func DeleteByLTE(v uint64) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldLTE(FieldDeleteBy, v))
}

// DeleteByIsNil applies the IsNil predicate on the "delete_by" field.
func DeleteByIsNil() predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldIsNull(FieldDeleteBy))
}

// DeleteByNotNil applies the NotNil predicate on the "delete_by" field.
func DeleteByNotNil() predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldNotNull(FieldDeleteBy))
}

// CodeEQ applies the EQ predicate on the "code" field.
func CodeEQ(v string) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldEQ(FieldCode, v))
}

// CodeNEQ applies the NEQ predicate on the "code" field.
func CodeNEQ(v string) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldNEQ(FieldCode, v))
}

// CodeIn applies the In predicate on the "code" field.
func CodeIn(vs ...string) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldIn(FieldCode, vs...))
}

// CodeNotIn applies the NotIn predicate on the "code" field.
func CodeNotIn(vs ...string) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldNotIn(FieldCode, vs...))
}

// CodeGT applies the GT predicate on the "code" field.
func CodeGT(v string) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldGT(FieldCode, v))
}

// CodeGTE applies the GTE predicate on the "code" field.
func CodeGTE(v string) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldGTE(FieldCode, v))
}

// CodeLT applies the LT predicate on the "code" field.
func CodeLT(v string) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldLT(FieldCode, v))
}

// CodeLTE applies the LTE predicate on the "code" field.
func CodeLTE(v string) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldLTE(FieldCode, v))
}

// CodeContains applies the Contains predicate on the "code" field.
func CodeContains(v string) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldContains(FieldCode, v))
}

// CodeHasPrefix applies the HasPrefix predicate on the "code" field.
func CodeHasPrefix(v string) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldHasPrefix(FieldCode, v))
}

// CodeHasSuffix applies the HasSuffix predicate on the "code" field.
func CodeHasSuffix(v string) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldHasSuffix(FieldCode, v))
}

// CodeEqualFold applies the EqualFold predicate on the "code" field.
func CodeEqualFold(v string) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldEqualFold(FieldCode, v))
}

// CodeContainsFold applies the ContainsFold predicate on the "code" field.
func CodeContainsFold(v string) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldContainsFold(FieldCode, v))
}

// IdentifierEQ applies the EQ predicate on the "identifier" field.
func IdentifierEQ(v string) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldEQ(FieldIdentifier, v))
}

// IdentifierNEQ applies the NEQ predicate on the "identifier" field.
func IdentifierNEQ(v string) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldNEQ(FieldIdentifier, v))
}

// IdentifierIn applies the In predicate on the "identifier" field.
func IdentifierIn(vs ...string) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldIn(FieldIdentifier, vs...))
}

// IdentifierNotIn applies the NotIn predicate on the "identifier" field.
func IdentifierNotIn(vs ...string) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldNotIn(FieldIdentifier, vs...))
}

// IdentifierGT applies the GT predicate on the "identifier" field.
func IdentifierGT(v string) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldGT(FieldIdentifier, v))
}

// IdentifierGTE applies the GTE predicate on the "identifier" field.
func IdentifierGTE(v string) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldGTE(FieldIdentifier, v))
}

// IdentifierLT applies the LT predicate on the "identifier" field.
func IdentifierLT(v string) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldLT(FieldIdentifier, v))
}

// IdentifierLTE applies the LTE predicate on the "identifier" field.
func IdentifierLTE(v string) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldLTE(FieldIdentifier, v))
}

// IdentifierContains applies the Contains predicate on the "identifier" field.
func IdentifierContains(v string) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldContains(FieldIdentifier, v))
}

// IdentifierHasPrefix applies the HasPrefix predicate on the "identifier" field.
func IdentifierHasPrefix(v string) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldHasPrefix(FieldIdentifier, v))
}

// IdentifierHasSuffix applies the HasSuffix predicate on the "identifier" field.
func IdentifierHasSuffix(v string) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldHasSuffix(FieldIdentifier, v))
}

// IdentifierEqualFold applies the EqualFold predicate on the "identifier" field.
func IdentifierEqualFold(v string) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldEqualFold(FieldIdentifier, v))
}

// IdentifierContainsFold applies the ContainsFold predicate on the "identifier" field.
func IdentifierContainsFold(v string) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldContainsFold(FieldIdentifier, v))
}

// SenderTypeEQ applies the EQ predicate on the "sender_type" field.
func SenderTypeEQ(v SenderType) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldEQ(FieldSenderType, v))
}

// SenderTypeNEQ applies the NEQ predicate on the "sender_type" field.
func SenderTypeNEQ(v SenderType) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldNEQ(FieldSenderType, v))
}

// SenderTypeIn applies the In predicate on the "sender_type" field.
func SenderTypeIn(vs ...SenderType) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldIn(FieldSenderType, vs...))
}

// SenderTypeNotIn applies the NotIn predicate on the "sender_type" field.
func SenderTypeNotIn(vs ...SenderType) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldNotIn(FieldSenderType, vs...))
}

// SendForEQ applies the EQ predicate on the "send_for" field.
func SendForEQ(v string) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldEQ(FieldSendFor, v))
}

// SendForNEQ applies the NEQ predicate on the "send_for" field.
func SendForNEQ(v string) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldNEQ(FieldSendFor, v))
}

// SendForIn applies the In predicate on the "send_for" field.
func SendForIn(vs ...string) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldIn(FieldSendFor, vs...))
}

// SendForNotIn applies the NotIn predicate on the "send_for" field.
func SendForNotIn(vs ...string) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldNotIn(FieldSendFor, vs...))
}

// SendForGT applies the GT predicate on the "send_for" field.
func SendForGT(v string) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldGT(FieldSendFor, v))
}

// SendForGTE applies the GTE predicate on the "send_for" field.
func SendForGTE(v string) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldGTE(FieldSendFor, v))
}

// SendForLT applies the LT predicate on the "send_for" field.
func SendForLT(v string) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldLT(FieldSendFor, v))
}

// SendForLTE applies the LTE predicate on the "send_for" field.
func SendForLTE(v string) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldLTE(FieldSendFor, v))
}

// SendForContains applies the Contains predicate on the "send_for" field.
func SendForContains(v string) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldContains(FieldSendFor, v))
}

// SendForHasPrefix applies the HasPrefix predicate on the "send_for" field.
func SendForHasPrefix(v string) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldHasPrefix(FieldSendFor, v))
}

// SendForHasSuffix applies the HasSuffix predicate on the "send_for" field.
func SendForHasSuffix(v string) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldHasSuffix(FieldSendFor, v))
}

// SendForEqualFold applies the EqualFold predicate on the "send_for" field.
func SendForEqualFold(v string) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldEqualFold(FieldSendFor, v))
}

// SendForContainsFold applies the ContainsFold predicate on the "send_for" field.
func SendForContainsFold(v string) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldContainsFold(FieldSendFor, v))
}

// ExpiresAtEQ applies the EQ predicate on the "expires_at" field.
func ExpiresAtEQ(v time.Time) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldEQ(FieldExpiresAt, v))
}

// ExpiresAtNEQ applies the NEQ predicate on the "expires_at" field.
func ExpiresAtNEQ(v time.Time) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldNEQ(FieldExpiresAt, v))
}

// ExpiresAtIn applies the In predicate on the "expires_at" field.
func ExpiresAtIn(vs ...time.Time) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldIn(FieldExpiresAt, vs...))
}

// ExpiresAtNotIn applies the NotIn predicate on the "expires_at" field.
func ExpiresAtNotIn(vs ...time.Time) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldNotIn(FieldExpiresAt, vs...))
}

// ExpiresAtGT applies the GT predicate on the "expires_at" field.
func ExpiresAtGT(v time.Time) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldGT(FieldExpiresAt, v))
}

// ExpiresAtGTE applies the GTE predicate on the "expires_at" field.
func ExpiresAtGTE(v time.Time) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldGTE(FieldExpiresAt, v))
}

// ExpiresAtLT applies the LT predicate on the "expires_at" field.
func ExpiresAtLT(v time.Time) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldLT(FieldExpiresAt, v))
}

// ExpiresAtLTE applies the LTE predicate on the "expires_at" field.
func ExpiresAtLTE(v time.Time) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldLTE(FieldExpiresAt, v))
}

// UsedAtEQ applies the EQ predicate on the "used_at" field.
func UsedAtEQ(v time.Time) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldEQ(FieldUsedAt, v))
}

// UsedAtNEQ applies the NEQ predicate on the "used_at" field.
func UsedAtNEQ(v time.Time) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldNEQ(FieldUsedAt, v))
}

// UsedAtIn applies the In predicate on the "used_at" field.
func UsedAtIn(vs ...time.Time) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldIn(FieldUsedAt, vs...))
}

// UsedAtNotIn applies the NotIn predicate on the "used_at" field.
func UsedAtNotIn(vs ...time.Time) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldNotIn(FieldUsedAt, vs...))
}

// UsedAtGT applies the GT predicate on the "used_at" field.
func UsedAtGT(v time.Time) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldGT(FieldUsedAt, v))
}

// UsedAtGTE applies the GTE predicate on the "used_at" field.
func UsedAtGTE(v time.Time) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldGTE(FieldUsedAt, v))
}

// UsedAtLT applies the LT predicate on the "used_at" field.
func UsedAtLT(v time.Time) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldLT(FieldUsedAt, v))
}

// UsedAtLTE applies the LTE predicate on the "used_at" field.
func UsedAtLTE(v time.Time) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldLTE(FieldUsedAt, v))
}

// UsedAtIsNil applies the IsNil predicate on the "used_at" field.
func UsedAtIsNil() predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldIsNull(FieldUsedAt))
}

// UsedAtNotNil applies the NotNil predicate on the "used_at" field.
func UsedAtNotNil() predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldNotNull(FieldUsedAt))
}

// SendSuccessEQ applies the EQ predicate on the "send_success" field.
func SendSuccessEQ(v bool) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldEQ(FieldSendSuccess, v))
}

// SendSuccessNEQ applies the NEQ predicate on the "send_success" field.
func SendSuccessNEQ(v bool) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldNEQ(FieldSendSuccess, v))
}

// SendAtEQ applies the EQ predicate on the "send_at" field.
func SendAtEQ(v time.Time) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldEQ(FieldSendAt, v))
}

// SendAtNEQ applies the NEQ predicate on the "send_at" field.
func SendAtNEQ(v time.Time) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldNEQ(FieldSendAt, v))
}

// SendAtIn applies the In predicate on the "send_at" field.
func SendAtIn(vs ...time.Time) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldIn(FieldSendAt, vs...))
}

// SendAtNotIn applies the NotIn predicate on the "send_at" field.
func SendAtNotIn(vs ...time.Time) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldNotIn(FieldSendAt, vs...))
}

// SendAtGT applies the GT predicate on the "send_at" field.
func SendAtGT(v time.Time) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldGT(FieldSendAt, v))
}

// SendAtGTE applies the GTE predicate on the "send_at" field.
func SendAtGTE(v time.Time) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldGTE(FieldSendAt, v))
}

// SendAtLT applies the LT predicate on the "send_at" field.
func SendAtLT(v time.Time) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldLT(FieldSendAt, v))
}

// SendAtLTE applies the LTE predicate on the "send_at" field.
func SendAtLTE(v time.Time) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldLTE(FieldSendAt, v))
}

// SendAtIsNil applies the IsNil predicate on the "send_at" field.
func SendAtIsNil() predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldIsNull(FieldSendAt))
}

// SendAtNotNil applies the NotNil predicate on the "send_at" field.
func SendAtNotNil() predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldNotNull(FieldSendAt))
}

// ClientIDEQ applies the EQ predicate on the "client_id" field.
func ClientIDEQ(v uint64) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldEQ(FieldClientID, v))
}

// ClientIDNEQ applies the NEQ predicate on the "client_id" field.
func ClientIDNEQ(v uint64) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldNEQ(FieldClientID, v))
}

// ClientIDIn applies the In predicate on the "client_id" field.
func ClientIDIn(vs ...uint64) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldIn(FieldClientID, vs...))
}

// ClientIDNotIn applies the NotIn predicate on the "client_id" field.
func ClientIDNotIn(vs ...uint64) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldNotIn(FieldClientID, vs...))
}

// ClientIDGT applies the GT predicate on the "client_id" field.
func ClientIDGT(v uint64) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldGT(FieldClientID, v))
}

// ClientIDGTE applies the GTE predicate on the "client_id" field.
func ClientIDGTE(v uint64) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldGTE(FieldClientID, v))
}

// ClientIDLT applies the LT predicate on the "client_id" field.
func ClientIDLT(v uint64) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldLT(FieldClientID, v))
}

// ClientIDLTE applies the LTE predicate on the "client_id" field.
func ClientIDLTE(v uint64) predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldLTE(FieldClientID, v))
}

// ClientIDIsNil applies the IsNil predicate on the "client_id" field.
func ClientIDIsNil() predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldIsNull(FieldClientID))
}

// ClientIDNotNil applies the NotNil predicate on the "client_id" field.
func ClientIDNotNil() predicate.VerifyCode {
	return predicate.VerifyCode(sql.FieldNotNull(FieldClientID))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.VerifyCode) predicate.VerifyCode {
	return predicate.VerifyCode(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.VerifyCode) predicate.VerifyCode {
	return predicate.VerifyCode(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.VerifyCode) predicate.VerifyCode {
	return predicate.VerifyCode(sql.NotPredicates(p))
}
