// Code generated by ent, DO NOT EDIT.

package systemmonitor

import (
	"go-backend/database/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLTE(FieldID, id))
}

// CreateTime applies equality check predicate on the "create_time" field. It's identical to CreateTimeEQ.
func CreateTime(v time.Time) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldCreateTime, v))
}

// CreateBy applies equality check predicate on the "create_by" field. It's identical to CreateByEQ.
func CreateBy(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldCreateBy, v))
}

// UpdateTime applies equality check predicate on the "update_time" field. It's identical to UpdateTimeEQ.
func UpdateTime(v time.Time) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldUpdateTime, v))
}

// UpdateBy applies equality check predicate on the "update_by" field. It's identical to UpdateByEQ.
func UpdateBy(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldUpdateBy, v))
}

// CPUUsagePercent applies equality check predicate on the "cpu_usage_percent" field. It's identical to CPUUsagePercentEQ.
func CPUUsagePercent(v float64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldCPUUsagePercent, v))
}

// CPUCores applies equality check predicate on the "cpu_cores" field. It's identical to CPUCoresEQ.
func CPUCores(v int) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldCPUCores, v))
}

// MemoryTotal applies equality check predicate on the "memory_total" field. It's identical to MemoryTotalEQ.
func MemoryTotal(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldMemoryTotal, v))
}

// MemoryUsed applies equality check predicate on the "memory_used" field. It's identical to MemoryUsedEQ.
func MemoryUsed(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldMemoryUsed, v))
}

// MemoryFree applies equality check predicate on the "memory_free" field. It's identical to MemoryFreeEQ.
func MemoryFree(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldMemoryFree, v))
}

// MemoryUsagePercent applies equality check predicate on the "memory_usage_percent" field. It's identical to MemoryUsagePercentEQ.
func MemoryUsagePercent(v float64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldMemoryUsagePercent, v))
}

// DiskTotal applies equality check predicate on the "disk_total" field. It's identical to DiskTotalEQ.
func DiskTotal(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldDiskTotal, v))
}

// DiskUsed applies equality check predicate on the "disk_used" field. It's identical to DiskUsedEQ.
func DiskUsed(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldDiskUsed, v))
}

// DiskFree applies equality check predicate on the "disk_free" field. It's identical to DiskFreeEQ.
func DiskFree(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldDiskFree, v))
}

// DiskUsagePercent applies equality check predicate on the "disk_usage_percent" field. It's identical to DiskUsagePercentEQ.
func DiskUsagePercent(v float64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldDiskUsagePercent, v))
}

// NetworkBytesSent applies equality check predicate on the "network_bytes_sent" field. It's identical to NetworkBytesSentEQ.
func NetworkBytesSent(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldNetworkBytesSent, v))
}

// NetworkBytesRecv applies equality check predicate on the "network_bytes_recv" field. It's identical to NetworkBytesRecvEQ.
func NetworkBytesRecv(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldNetworkBytesRecv, v))
}

// Os applies equality check predicate on the "os" field. It's identical to OsEQ.
func Os(v string) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldOs, v))
}

// Platform applies equality check predicate on the "platform" field. It's identical to PlatformEQ.
func Platform(v string) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldPlatform, v))
}

// PlatformVersion applies equality check predicate on the "platform_version" field. It's identical to PlatformVersionEQ.
func PlatformVersion(v string) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldPlatformVersion, v))
}

// Hostname applies equality check predicate on the "hostname" field. It's identical to HostnameEQ.
func Hostname(v string) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldHostname, v))
}

// GoroutinesCount applies equality check predicate on the "goroutines_count" field. It's identical to GoroutinesCountEQ.
func GoroutinesCount(v int) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldGoroutinesCount, v))
}

// HeapAlloc applies equality check predicate on the "heap_alloc" field. It's identical to HeapAllocEQ.
func HeapAlloc(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldHeapAlloc, v))
}

// HeapSys applies equality check predicate on the "heap_sys" field. It's identical to HeapSysEQ.
func HeapSys(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldHeapSys, v))
}

// GcCount applies equality check predicate on the "gc_count" field. It's identical to GcCountEQ.
func GcCount(v uint32) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldGcCount, v))
}

// LoadAvg1 applies equality check predicate on the "load_avg_1" field. It's identical to LoadAvg1EQ.
func LoadAvg1(v float64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldLoadAvg1, v))
}

// LoadAvg5 applies equality check predicate on the "load_avg_5" field. It's identical to LoadAvg5EQ.
func LoadAvg5(v float64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldLoadAvg5, v))
}

// LoadAvg15 applies equality check predicate on the "load_avg_15" field. It's identical to LoadAvg15EQ.
func LoadAvg15(v float64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldLoadAvg15, v))
}

// Uptime applies equality check predicate on the "uptime" field. It's identical to UptimeEQ.
func Uptime(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldUptime, v))
}

// RecordedAt applies equality check predicate on the "recorded_at" field. It's identical to RecordedAtEQ.
func RecordedAt(v time.Time) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldRecordedAt, v))
}

// CreateTimeEQ applies the EQ predicate on the "create_time" field.
func CreateTimeEQ(v time.Time) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldCreateTime, v))
}

// CreateTimeNEQ applies the NEQ predicate on the "create_time" field.
func CreateTimeNEQ(v time.Time) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNEQ(FieldCreateTime, v))
}

// CreateTimeIn applies the In predicate on the "create_time" field.
func CreateTimeIn(vs ...time.Time) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldIn(FieldCreateTime, vs...))
}

// CreateTimeNotIn applies the NotIn predicate on the "create_time" field.
func CreateTimeNotIn(vs ...time.Time) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNotIn(FieldCreateTime, vs...))
}

// CreateTimeGT applies the GT predicate on the "create_time" field.
func CreateTimeGT(v time.Time) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGT(FieldCreateTime, v))
}

// CreateTimeGTE applies the GTE predicate on the "create_time" field.
func CreateTimeGTE(v time.Time) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGTE(FieldCreateTime, v))
}

// CreateTimeLT applies the LT predicate on the "create_time" field.
func CreateTimeLT(v time.Time) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLT(FieldCreateTime, v))
}

// CreateTimeLTE applies the LTE predicate on the "create_time" field.
func CreateTimeLTE(v time.Time) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLTE(FieldCreateTime, v))
}

// CreateByEQ applies the EQ predicate on the "create_by" field.
func CreateByEQ(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldCreateBy, v))
}

// CreateByNEQ applies the NEQ predicate on the "create_by" field.
func CreateByNEQ(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNEQ(FieldCreateBy, v))
}

// CreateByIn applies the In predicate on the "create_by" field.
func CreateByIn(vs ...uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldIn(FieldCreateBy, vs...))
}

// CreateByNotIn applies the NotIn predicate on the "create_by" field.
func CreateByNotIn(vs ...uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNotIn(FieldCreateBy, vs...))
}

// CreateByGT applies the GT predicate on the "create_by" field.
func CreateByGT(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGT(FieldCreateBy, v))
}

// CreateByGTE applies the GTE predicate on the "create_by" field.
func CreateByGTE(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGTE(FieldCreateBy, v))
}

// CreateByLT applies the LT predicate on the "create_by" field.
func CreateByLT(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLT(FieldCreateBy, v))
}

// CreateByLTE applies the LTE predicate on the "create_by" field.
func CreateByLTE(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLTE(FieldCreateBy, v))
}

// CreateByIsNil applies the IsNil predicate on the "create_by" field.
func CreateByIsNil() predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldIsNull(FieldCreateBy))
}

// CreateByNotNil applies the NotNil predicate on the "create_by" field.
func CreateByNotNil() predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNotNull(FieldCreateBy))
}

// UpdateTimeEQ applies the EQ predicate on the "update_time" field.
func UpdateTimeEQ(v time.Time) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldUpdateTime, v))
}

// UpdateTimeNEQ applies the NEQ predicate on the "update_time" field.
func UpdateTimeNEQ(v time.Time) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNEQ(FieldUpdateTime, v))
}

// UpdateTimeIn applies the In predicate on the "update_time" field.
func UpdateTimeIn(vs ...time.Time) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldIn(FieldUpdateTime, vs...))
}

// UpdateTimeNotIn applies the NotIn predicate on the "update_time" field.
func UpdateTimeNotIn(vs ...time.Time) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNotIn(FieldUpdateTime, vs...))
}

// UpdateTimeGT applies the GT predicate on the "update_time" field.
func UpdateTimeGT(v time.Time) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGT(FieldUpdateTime, v))
}

// UpdateTimeGTE applies the GTE predicate on the "update_time" field.
func UpdateTimeGTE(v time.Time) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGTE(FieldUpdateTime, v))
}

// UpdateTimeLT applies the LT predicate on the "update_time" field.
func UpdateTimeLT(v time.Time) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLT(FieldUpdateTime, v))
}

// UpdateTimeLTE applies the LTE predicate on the "update_time" field.
func UpdateTimeLTE(v time.Time) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLTE(FieldUpdateTime, v))
}

// UpdateByEQ applies the EQ predicate on the "update_by" field.
func UpdateByEQ(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldUpdateBy, v))
}

// UpdateByNEQ applies the NEQ predicate on the "update_by" field.
func UpdateByNEQ(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNEQ(FieldUpdateBy, v))
}

// UpdateByIn applies the In predicate on the "update_by" field.
func UpdateByIn(vs ...uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldIn(FieldUpdateBy, vs...))
}

// UpdateByNotIn applies the NotIn predicate on the "update_by" field.
func UpdateByNotIn(vs ...uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNotIn(FieldUpdateBy, vs...))
}

// UpdateByGT applies the GT predicate on the "update_by" field.
func UpdateByGT(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGT(FieldUpdateBy, v))
}

// UpdateByGTE applies the GTE predicate on the "update_by" field.
func UpdateByGTE(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGTE(FieldUpdateBy, v))
}

// UpdateByLT applies the LT predicate on the "update_by" field.
func UpdateByLT(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLT(FieldUpdateBy, v))
}

// UpdateByLTE applies the LTE predicate on the "update_by" field.
func UpdateByLTE(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLTE(FieldUpdateBy, v))
}

// UpdateByIsNil applies the IsNil predicate on the "update_by" field.
func UpdateByIsNil() predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldIsNull(FieldUpdateBy))
}

// UpdateByNotNil applies the NotNil predicate on the "update_by" field.
func UpdateByNotNil() predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNotNull(FieldUpdateBy))
}

// CPUUsagePercentEQ applies the EQ predicate on the "cpu_usage_percent" field.
func CPUUsagePercentEQ(v float64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldCPUUsagePercent, v))
}

// CPUUsagePercentNEQ applies the NEQ predicate on the "cpu_usage_percent" field.
func CPUUsagePercentNEQ(v float64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNEQ(FieldCPUUsagePercent, v))
}

// CPUUsagePercentIn applies the In predicate on the "cpu_usage_percent" field.
func CPUUsagePercentIn(vs ...float64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldIn(FieldCPUUsagePercent, vs...))
}

// CPUUsagePercentNotIn applies the NotIn predicate on the "cpu_usage_percent" field.
func CPUUsagePercentNotIn(vs ...float64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNotIn(FieldCPUUsagePercent, vs...))
}

// CPUUsagePercentGT applies the GT predicate on the "cpu_usage_percent" field.
func CPUUsagePercentGT(v float64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGT(FieldCPUUsagePercent, v))
}

// CPUUsagePercentGTE applies the GTE predicate on the "cpu_usage_percent" field.
func CPUUsagePercentGTE(v float64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGTE(FieldCPUUsagePercent, v))
}

// CPUUsagePercentLT applies the LT predicate on the "cpu_usage_percent" field.
func CPUUsagePercentLT(v float64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLT(FieldCPUUsagePercent, v))
}

// CPUUsagePercentLTE applies the LTE predicate on the "cpu_usage_percent" field.
func CPUUsagePercentLTE(v float64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLTE(FieldCPUUsagePercent, v))
}

// CPUCoresEQ applies the EQ predicate on the "cpu_cores" field.
func CPUCoresEQ(v int) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldCPUCores, v))
}

// CPUCoresNEQ applies the NEQ predicate on the "cpu_cores" field.
func CPUCoresNEQ(v int) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNEQ(FieldCPUCores, v))
}

// CPUCoresIn applies the In predicate on the "cpu_cores" field.
func CPUCoresIn(vs ...int) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldIn(FieldCPUCores, vs...))
}

// CPUCoresNotIn applies the NotIn predicate on the "cpu_cores" field.
func CPUCoresNotIn(vs ...int) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNotIn(FieldCPUCores, vs...))
}

// CPUCoresGT applies the GT predicate on the "cpu_cores" field.
func CPUCoresGT(v int) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGT(FieldCPUCores, v))
}

// CPUCoresGTE applies the GTE predicate on the "cpu_cores" field.
func CPUCoresGTE(v int) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGTE(FieldCPUCores, v))
}

// CPUCoresLT applies the LT predicate on the "cpu_cores" field.
func CPUCoresLT(v int) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLT(FieldCPUCores, v))
}

// CPUCoresLTE applies the LTE predicate on the "cpu_cores" field.
func CPUCoresLTE(v int) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLTE(FieldCPUCores, v))
}

// MemoryTotalEQ applies the EQ predicate on the "memory_total" field.
func MemoryTotalEQ(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldMemoryTotal, v))
}

// MemoryTotalNEQ applies the NEQ predicate on the "memory_total" field.
func MemoryTotalNEQ(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNEQ(FieldMemoryTotal, v))
}

// MemoryTotalIn applies the In predicate on the "memory_total" field.
func MemoryTotalIn(vs ...uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldIn(FieldMemoryTotal, vs...))
}

// MemoryTotalNotIn applies the NotIn predicate on the "memory_total" field.
func MemoryTotalNotIn(vs ...uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNotIn(FieldMemoryTotal, vs...))
}

// MemoryTotalGT applies the GT predicate on the "memory_total" field.
func MemoryTotalGT(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGT(FieldMemoryTotal, v))
}

// MemoryTotalGTE applies the GTE predicate on the "memory_total" field.
func MemoryTotalGTE(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGTE(FieldMemoryTotal, v))
}

// MemoryTotalLT applies the LT predicate on the "memory_total" field.
func MemoryTotalLT(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLT(FieldMemoryTotal, v))
}

// MemoryTotalLTE applies the LTE predicate on the "memory_total" field.
func MemoryTotalLTE(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLTE(FieldMemoryTotal, v))
}

// MemoryUsedEQ applies the EQ predicate on the "memory_used" field.
func MemoryUsedEQ(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldMemoryUsed, v))
}

// MemoryUsedNEQ applies the NEQ predicate on the "memory_used" field.
func MemoryUsedNEQ(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNEQ(FieldMemoryUsed, v))
}

// MemoryUsedIn applies the In predicate on the "memory_used" field.
func MemoryUsedIn(vs ...uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldIn(FieldMemoryUsed, vs...))
}

// MemoryUsedNotIn applies the NotIn predicate on the "memory_used" field.
func MemoryUsedNotIn(vs ...uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNotIn(FieldMemoryUsed, vs...))
}

// MemoryUsedGT applies the GT predicate on the "memory_used" field.
func MemoryUsedGT(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGT(FieldMemoryUsed, v))
}

// MemoryUsedGTE applies the GTE predicate on the "memory_used" field.
func MemoryUsedGTE(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGTE(FieldMemoryUsed, v))
}

// MemoryUsedLT applies the LT predicate on the "memory_used" field.
func MemoryUsedLT(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLT(FieldMemoryUsed, v))
}

// MemoryUsedLTE applies the LTE predicate on the "memory_used" field.
func MemoryUsedLTE(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLTE(FieldMemoryUsed, v))
}

// MemoryFreeEQ applies the EQ predicate on the "memory_free" field.
func MemoryFreeEQ(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldMemoryFree, v))
}

// MemoryFreeNEQ applies the NEQ predicate on the "memory_free" field.
func MemoryFreeNEQ(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNEQ(FieldMemoryFree, v))
}

// MemoryFreeIn applies the In predicate on the "memory_free" field.
func MemoryFreeIn(vs ...uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldIn(FieldMemoryFree, vs...))
}

// MemoryFreeNotIn applies the NotIn predicate on the "memory_free" field.
func MemoryFreeNotIn(vs ...uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNotIn(FieldMemoryFree, vs...))
}

// MemoryFreeGT applies the GT predicate on the "memory_free" field.
func MemoryFreeGT(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGT(FieldMemoryFree, v))
}

// MemoryFreeGTE applies the GTE predicate on the "memory_free" field.
func MemoryFreeGTE(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGTE(FieldMemoryFree, v))
}

// MemoryFreeLT applies the LT predicate on the "memory_free" field.
func MemoryFreeLT(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLT(FieldMemoryFree, v))
}

// MemoryFreeLTE applies the LTE predicate on the "memory_free" field.
func MemoryFreeLTE(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLTE(FieldMemoryFree, v))
}

// MemoryUsagePercentEQ applies the EQ predicate on the "memory_usage_percent" field.
func MemoryUsagePercentEQ(v float64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldMemoryUsagePercent, v))
}

// MemoryUsagePercentNEQ applies the NEQ predicate on the "memory_usage_percent" field.
func MemoryUsagePercentNEQ(v float64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNEQ(FieldMemoryUsagePercent, v))
}

// MemoryUsagePercentIn applies the In predicate on the "memory_usage_percent" field.
func MemoryUsagePercentIn(vs ...float64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldIn(FieldMemoryUsagePercent, vs...))
}

// MemoryUsagePercentNotIn applies the NotIn predicate on the "memory_usage_percent" field.
func MemoryUsagePercentNotIn(vs ...float64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNotIn(FieldMemoryUsagePercent, vs...))
}

// MemoryUsagePercentGT applies the GT predicate on the "memory_usage_percent" field.
func MemoryUsagePercentGT(v float64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGT(FieldMemoryUsagePercent, v))
}

// MemoryUsagePercentGTE applies the GTE predicate on the "memory_usage_percent" field.
func MemoryUsagePercentGTE(v float64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGTE(FieldMemoryUsagePercent, v))
}

// MemoryUsagePercentLT applies the LT predicate on the "memory_usage_percent" field.
func MemoryUsagePercentLT(v float64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLT(FieldMemoryUsagePercent, v))
}

// MemoryUsagePercentLTE applies the LTE predicate on the "memory_usage_percent" field.
func MemoryUsagePercentLTE(v float64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLTE(FieldMemoryUsagePercent, v))
}

// DiskTotalEQ applies the EQ predicate on the "disk_total" field.
func DiskTotalEQ(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldDiskTotal, v))
}

// DiskTotalNEQ applies the NEQ predicate on the "disk_total" field.
func DiskTotalNEQ(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNEQ(FieldDiskTotal, v))
}

// DiskTotalIn applies the In predicate on the "disk_total" field.
func DiskTotalIn(vs ...uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldIn(FieldDiskTotal, vs...))
}

// DiskTotalNotIn applies the NotIn predicate on the "disk_total" field.
func DiskTotalNotIn(vs ...uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNotIn(FieldDiskTotal, vs...))
}

// DiskTotalGT applies the GT predicate on the "disk_total" field.
func DiskTotalGT(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGT(FieldDiskTotal, v))
}

// DiskTotalGTE applies the GTE predicate on the "disk_total" field.
func DiskTotalGTE(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGTE(FieldDiskTotal, v))
}

// DiskTotalLT applies the LT predicate on the "disk_total" field.
func DiskTotalLT(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLT(FieldDiskTotal, v))
}

// DiskTotalLTE applies the LTE predicate on the "disk_total" field.
func DiskTotalLTE(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLTE(FieldDiskTotal, v))
}

// DiskUsedEQ applies the EQ predicate on the "disk_used" field.
func DiskUsedEQ(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldDiskUsed, v))
}

// DiskUsedNEQ applies the NEQ predicate on the "disk_used" field.
func DiskUsedNEQ(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNEQ(FieldDiskUsed, v))
}

// DiskUsedIn applies the In predicate on the "disk_used" field.
func DiskUsedIn(vs ...uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldIn(FieldDiskUsed, vs...))
}

// DiskUsedNotIn applies the NotIn predicate on the "disk_used" field.
func DiskUsedNotIn(vs ...uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNotIn(FieldDiskUsed, vs...))
}

// DiskUsedGT applies the GT predicate on the "disk_used" field.
func DiskUsedGT(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGT(FieldDiskUsed, v))
}

// DiskUsedGTE applies the GTE predicate on the "disk_used" field.
func DiskUsedGTE(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGTE(FieldDiskUsed, v))
}

// DiskUsedLT applies the LT predicate on the "disk_used" field.
func DiskUsedLT(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLT(FieldDiskUsed, v))
}

// DiskUsedLTE applies the LTE predicate on the "disk_used" field.
func DiskUsedLTE(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLTE(FieldDiskUsed, v))
}

// DiskFreeEQ applies the EQ predicate on the "disk_free" field.
func DiskFreeEQ(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldDiskFree, v))
}

// DiskFreeNEQ applies the NEQ predicate on the "disk_free" field.
func DiskFreeNEQ(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNEQ(FieldDiskFree, v))
}

// DiskFreeIn applies the In predicate on the "disk_free" field.
func DiskFreeIn(vs ...uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldIn(FieldDiskFree, vs...))
}

// DiskFreeNotIn applies the NotIn predicate on the "disk_free" field.
func DiskFreeNotIn(vs ...uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNotIn(FieldDiskFree, vs...))
}

// DiskFreeGT applies the GT predicate on the "disk_free" field.
func DiskFreeGT(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGT(FieldDiskFree, v))
}

// DiskFreeGTE applies the GTE predicate on the "disk_free" field.
func DiskFreeGTE(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGTE(FieldDiskFree, v))
}

// DiskFreeLT applies the LT predicate on the "disk_free" field.
func DiskFreeLT(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLT(FieldDiskFree, v))
}

// DiskFreeLTE applies the LTE predicate on the "disk_free" field.
func DiskFreeLTE(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLTE(FieldDiskFree, v))
}

// DiskUsagePercentEQ applies the EQ predicate on the "disk_usage_percent" field.
func DiskUsagePercentEQ(v float64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldDiskUsagePercent, v))
}

// DiskUsagePercentNEQ applies the NEQ predicate on the "disk_usage_percent" field.
func DiskUsagePercentNEQ(v float64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNEQ(FieldDiskUsagePercent, v))
}

// DiskUsagePercentIn applies the In predicate on the "disk_usage_percent" field.
func DiskUsagePercentIn(vs ...float64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldIn(FieldDiskUsagePercent, vs...))
}

// DiskUsagePercentNotIn applies the NotIn predicate on the "disk_usage_percent" field.
func DiskUsagePercentNotIn(vs ...float64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNotIn(FieldDiskUsagePercent, vs...))
}

// DiskUsagePercentGT applies the GT predicate on the "disk_usage_percent" field.
func DiskUsagePercentGT(v float64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGT(FieldDiskUsagePercent, v))
}

// DiskUsagePercentGTE applies the GTE predicate on the "disk_usage_percent" field.
func DiskUsagePercentGTE(v float64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGTE(FieldDiskUsagePercent, v))
}

// DiskUsagePercentLT applies the LT predicate on the "disk_usage_percent" field.
func DiskUsagePercentLT(v float64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLT(FieldDiskUsagePercent, v))
}

// DiskUsagePercentLTE applies the LTE predicate on the "disk_usage_percent" field.
func DiskUsagePercentLTE(v float64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLTE(FieldDiskUsagePercent, v))
}

// NetworkBytesSentEQ applies the EQ predicate on the "network_bytes_sent" field.
func NetworkBytesSentEQ(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldNetworkBytesSent, v))
}

// NetworkBytesSentNEQ applies the NEQ predicate on the "network_bytes_sent" field.
func NetworkBytesSentNEQ(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNEQ(FieldNetworkBytesSent, v))
}

// NetworkBytesSentIn applies the In predicate on the "network_bytes_sent" field.
func NetworkBytesSentIn(vs ...uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldIn(FieldNetworkBytesSent, vs...))
}

// NetworkBytesSentNotIn applies the NotIn predicate on the "network_bytes_sent" field.
func NetworkBytesSentNotIn(vs ...uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNotIn(FieldNetworkBytesSent, vs...))
}

// NetworkBytesSentGT applies the GT predicate on the "network_bytes_sent" field.
func NetworkBytesSentGT(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGT(FieldNetworkBytesSent, v))
}

// NetworkBytesSentGTE applies the GTE predicate on the "network_bytes_sent" field.
func NetworkBytesSentGTE(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGTE(FieldNetworkBytesSent, v))
}

// NetworkBytesSentLT applies the LT predicate on the "network_bytes_sent" field.
func NetworkBytesSentLT(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLT(FieldNetworkBytesSent, v))
}

// NetworkBytesSentLTE applies the LTE predicate on the "network_bytes_sent" field.
func NetworkBytesSentLTE(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLTE(FieldNetworkBytesSent, v))
}

// NetworkBytesRecvEQ applies the EQ predicate on the "network_bytes_recv" field.
func NetworkBytesRecvEQ(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldNetworkBytesRecv, v))
}

// NetworkBytesRecvNEQ applies the NEQ predicate on the "network_bytes_recv" field.
func NetworkBytesRecvNEQ(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNEQ(FieldNetworkBytesRecv, v))
}

// NetworkBytesRecvIn applies the In predicate on the "network_bytes_recv" field.
func NetworkBytesRecvIn(vs ...uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldIn(FieldNetworkBytesRecv, vs...))
}

// NetworkBytesRecvNotIn applies the NotIn predicate on the "network_bytes_recv" field.
func NetworkBytesRecvNotIn(vs ...uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNotIn(FieldNetworkBytesRecv, vs...))
}

// NetworkBytesRecvGT applies the GT predicate on the "network_bytes_recv" field.
func NetworkBytesRecvGT(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGT(FieldNetworkBytesRecv, v))
}

// NetworkBytesRecvGTE applies the GTE predicate on the "network_bytes_recv" field.
func NetworkBytesRecvGTE(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGTE(FieldNetworkBytesRecv, v))
}

// NetworkBytesRecvLT applies the LT predicate on the "network_bytes_recv" field.
func NetworkBytesRecvLT(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLT(FieldNetworkBytesRecv, v))
}

// NetworkBytesRecvLTE applies the LTE predicate on the "network_bytes_recv" field.
func NetworkBytesRecvLTE(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLTE(FieldNetworkBytesRecv, v))
}

// OsEQ applies the EQ predicate on the "os" field.
func OsEQ(v string) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldOs, v))
}

// OsNEQ applies the NEQ predicate on the "os" field.
func OsNEQ(v string) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNEQ(FieldOs, v))
}

// OsIn applies the In predicate on the "os" field.
func OsIn(vs ...string) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldIn(FieldOs, vs...))
}

// OsNotIn applies the NotIn predicate on the "os" field.
func OsNotIn(vs ...string) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNotIn(FieldOs, vs...))
}

// OsGT applies the GT predicate on the "os" field.
func OsGT(v string) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGT(FieldOs, v))
}

// OsGTE applies the GTE predicate on the "os" field.
func OsGTE(v string) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGTE(FieldOs, v))
}

// OsLT applies the LT predicate on the "os" field.
func OsLT(v string) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLT(FieldOs, v))
}

// OsLTE applies the LTE predicate on the "os" field.
func OsLTE(v string) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLTE(FieldOs, v))
}

// OsContains applies the Contains predicate on the "os" field.
func OsContains(v string) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldContains(FieldOs, v))
}

// OsHasPrefix applies the HasPrefix predicate on the "os" field.
func OsHasPrefix(v string) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldHasPrefix(FieldOs, v))
}

// OsHasSuffix applies the HasSuffix predicate on the "os" field.
func OsHasSuffix(v string) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldHasSuffix(FieldOs, v))
}

// OsEqualFold applies the EqualFold predicate on the "os" field.
func OsEqualFold(v string) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEqualFold(FieldOs, v))
}

// OsContainsFold applies the ContainsFold predicate on the "os" field.
func OsContainsFold(v string) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldContainsFold(FieldOs, v))
}

// PlatformEQ applies the EQ predicate on the "platform" field.
func PlatformEQ(v string) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldPlatform, v))
}

// PlatformNEQ applies the NEQ predicate on the "platform" field.
func PlatformNEQ(v string) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNEQ(FieldPlatform, v))
}

// PlatformIn applies the In predicate on the "platform" field.
func PlatformIn(vs ...string) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldIn(FieldPlatform, vs...))
}

// PlatformNotIn applies the NotIn predicate on the "platform" field.
func PlatformNotIn(vs ...string) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNotIn(FieldPlatform, vs...))
}

// PlatformGT applies the GT predicate on the "platform" field.
func PlatformGT(v string) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGT(FieldPlatform, v))
}

// PlatformGTE applies the GTE predicate on the "platform" field.
func PlatformGTE(v string) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGTE(FieldPlatform, v))
}

// PlatformLT applies the LT predicate on the "platform" field.
func PlatformLT(v string) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLT(FieldPlatform, v))
}

// PlatformLTE applies the LTE predicate on the "platform" field.
func PlatformLTE(v string) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLTE(FieldPlatform, v))
}

// PlatformContains applies the Contains predicate on the "platform" field.
func PlatformContains(v string) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldContains(FieldPlatform, v))
}

// PlatformHasPrefix applies the HasPrefix predicate on the "platform" field.
func PlatformHasPrefix(v string) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldHasPrefix(FieldPlatform, v))
}

// PlatformHasSuffix applies the HasSuffix predicate on the "platform" field.
func PlatformHasSuffix(v string) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldHasSuffix(FieldPlatform, v))
}

// PlatformEqualFold applies the EqualFold predicate on the "platform" field.
func PlatformEqualFold(v string) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEqualFold(FieldPlatform, v))
}

// PlatformContainsFold applies the ContainsFold predicate on the "platform" field.
func PlatformContainsFold(v string) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldContainsFold(FieldPlatform, v))
}

// PlatformVersionEQ applies the EQ predicate on the "platform_version" field.
func PlatformVersionEQ(v string) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldPlatformVersion, v))
}

// PlatformVersionNEQ applies the NEQ predicate on the "platform_version" field.
func PlatformVersionNEQ(v string) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNEQ(FieldPlatformVersion, v))
}

// PlatformVersionIn applies the In predicate on the "platform_version" field.
func PlatformVersionIn(vs ...string) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldIn(FieldPlatformVersion, vs...))
}

// PlatformVersionNotIn applies the NotIn predicate on the "platform_version" field.
func PlatformVersionNotIn(vs ...string) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNotIn(FieldPlatformVersion, vs...))
}

// PlatformVersionGT applies the GT predicate on the "platform_version" field.
func PlatformVersionGT(v string) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGT(FieldPlatformVersion, v))
}

// PlatformVersionGTE applies the GTE predicate on the "platform_version" field.
func PlatformVersionGTE(v string) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGTE(FieldPlatformVersion, v))
}

// PlatformVersionLT applies the LT predicate on the "platform_version" field.
func PlatformVersionLT(v string) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLT(FieldPlatformVersion, v))
}

// PlatformVersionLTE applies the LTE predicate on the "platform_version" field.
func PlatformVersionLTE(v string) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLTE(FieldPlatformVersion, v))
}

// PlatformVersionContains applies the Contains predicate on the "platform_version" field.
func PlatformVersionContains(v string) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldContains(FieldPlatformVersion, v))
}

// PlatformVersionHasPrefix applies the HasPrefix predicate on the "platform_version" field.
func PlatformVersionHasPrefix(v string) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldHasPrefix(FieldPlatformVersion, v))
}

// PlatformVersionHasSuffix applies the HasSuffix predicate on the "platform_version" field.
func PlatformVersionHasSuffix(v string) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldHasSuffix(FieldPlatformVersion, v))
}

// PlatformVersionEqualFold applies the EqualFold predicate on the "platform_version" field.
func PlatformVersionEqualFold(v string) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEqualFold(FieldPlatformVersion, v))
}

// PlatformVersionContainsFold applies the ContainsFold predicate on the "platform_version" field.
func PlatformVersionContainsFold(v string) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldContainsFold(FieldPlatformVersion, v))
}

// HostnameEQ applies the EQ predicate on the "hostname" field.
func HostnameEQ(v string) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldHostname, v))
}

// HostnameNEQ applies the NEQ predicate on the "hostname" field.
func HostnameNEQ(v string) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNEQ(FieldHostname, v))
}

// HostnameIn applies the In predicate on the "hostname" field.
func HostnameIn(vs ...string) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldIn(FieldHostname, vs...))
}

// HostnameNotIn applies the NotIn predicate on the "hostname" field.
func HostnameNotIn(vs ...string) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNotIn(FieldHostname, vs...))
}

// HostnameGT applies the GT predicate on the "hostname" field.
func HostnameGT(v string) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGT(FieldHostname, v))
}

// HostnameGTE applies the GTE predicate on the "hostname" field.
func HostnameGTE(v string) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGTE(FieldHostname, v))
}

// HostnameLT applies the LT predicate on the "hostname" field.
func HostnameLT(v string) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLT(FieldHostname, v))
}

// HostnameLTE applies the LTE predicate on the "hostname" field.
func HostnameLTE(v string) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLTE(FieldHostname, v))
}

// HostnameContains applies the Contains predicate on the "hostname" field.
func HostnameContains(v string) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldContains(FieldHostname, v))
}

// HostnameHasPrefix applies the HasPrefix predicate on the "hostname" field.
func HostnameHasPrefix(v string) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldHasPrefix(FieldHostname, v))
}

// HostnameHasSuffix applies the HasSuffix predicate on the "hostname" field.
func HostnameHasSuffix(v string) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldHasSuffix(FieldHostname, v))
}

// HostnameEqualFold applies the EqualFold predicate on the "hostname" field.
func HostnameEqualFold(v string) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEqualFold(FieldHostname, v))
}

// HostnameContainsFold applies the ContainsFold predicate on the "hostname" field.
func HostnameContainsFold(v string) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldContainsFold(FieldHostname, v))
}

// GoroutinesCountEQ applies the EQ predicate on the "goroutines_count" field.
func GoroutinesCountEQ(v int) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldGoroutinesCount, v))
}

// GoroutinesCountNEQ applies the NEQ predicate on the "goroutines_count" field.
func GoroutinesCountNEQ(v int) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNEQ(FieldGoroutinesCount, v))
}

// GoroutinesCountIn applies the In predicate on the "goroutines_count" field.
func GoroutinesCountIn(vs ...int) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldIn(FieldGoroutinesCount, vs...))
}

// GoroutinesCountNotIn applies the NotIn predicate on the "goroutines_count" field.
func GoroutinesCountNotIn(vs ...int) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNotIn(FieldGoroutinesCount, vs...))
}

// GoroutinesCountGT applies the GT predicate on the "goroutines_count" field.
func GoroutinesCountGT(v int) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGT(FieldGoroutinesCount, v))
}

// GoroutinesCountGTE applies the GTE predicate on the "goroutines_count" field.
func GoroutinesCountGTE(v int) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGTE(FieldGoroutinesCount, v))
}

// GoroutinesCountLT applies the LT predicate on the "goroutines_count" field.
func GoroutinesCountLT(v int) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLT(FieldGoroutinesCount, v))
}

// GoroutinesCountLTE applies the LTE predicate on the "goroutines_count" field.
func GoroutinesCountLTE(v int) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLTE(FieldGoroutinesCount, v))
}

// HeapAllocEQ applies the EQ predicate on the "heap_alloc" field.
func HeapAllocEQ(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldHeapAlloc, v))
}

// HeapAllocNEQ applies the NEQ predicate on the "heap_alloc" field.
func HeapAllocNEQ(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNEQ(FieldHeapAlloc, v))
}

// HeapAllocIn applies the In predicate on the "heap_alloc" field.
func HeapAllocIn(vs ...uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldIn(FieldHeapAlloc, vs...))
}

// HeapAllocNotIn applies the NotIn predicate on the "heap_alloc" field.
func HeapAllocNotIn(vs ...uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNotIn(FieldHeapAlloc, vs...))
}

// HeapAllocGT applies the GT predicate on the "heap_alloc" field.
func HeapAllocGT(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGT(FieldHeapAlloc, v))
}

// HeapAllocGTE applies the GTE predicate on the "heap_alloc" field.
func HeapAllocGTE(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGTE(FieldHeapAlloc, v))
}

// HeapAllocLT applies the LT predicate on the "heap_alloc" field.
func HeapAllocLT(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLT(FieldHeapAlloc, v))
}

// HeapAllocLTE applies the LTE predicate on the "heap_alloc" field.
func HeapAllocLTE(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLTE(FieldHeapAlloc, v))
}

// HeapSysEQ applies the EQ predicate on the "heap_sys" field.
func HeapSysEQ(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldHeapSys, v))
}

// HeapSysNEQ applies the NEQ predicate on the "heap_sys" field.
func HeapSysNEQ(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNEQ(FieldHeapSys, v))
}

// HeapSysIn applies the In predicate on the "heap_sys" field.
func HeapSysIn(vs ...uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldIn(FieldHeapSys, vs...))
}

// HeapSysNotIn applies the NotIn predicate on the "heap_sys" field.
func HeapSysNotIn(vs ...uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNotIn(FieldHeapSys, vs...))
}

// HeapSysGT applies the GT predicate on the "heap_sys" field.
func HeapSysGT(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGT(FieldHeapSys, v))
}

// HeapSysGTE applies the GTE predicate on the "heap_sys" field.
func HeapSysGTE(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGTE(FieldHeapSys, v))
}

// HeapSysLT applies the LT predicate on the "heap_sys" field.
func HeapSysLT(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLT(FieldHeapSys, v))
}

// HeapSysLTE applies the LTE predicate on the "heap_sys" field.
func HeapSysLTE(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLTE(FieldHeapSys, v))
}

// GcCountEQ applies the EQ predicate on the "gc_count" field.
func GcCountEQ(v uint32) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldGcCount, v))
}

// GcCountNEQ applies the NEQ predicate on the "gc_count" field.
func GcCountNEQ(v uint32) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNEQ(FieldGcCount, v))
}

// GcCountIn applies the In predicate on the "gc_count" field.
func GcCountIn(vs ...uint32) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldIn(FieldGcCount, vs...))
}

// GcCountNotIn applies the NotIn predicate on the "gc_count" field.
func GcCountNotIn(vs ...uint32) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNotIn(FieldGcCount, vs...))
}

// GcCountGT applies the GT predicate on the "gc_count" field.
func GcCountGT(v uint32) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGT(FieldGcCount, v))
}

// GcCountGTE applies the GTE predicate on the "gc_count" field.
func GcCountGTE(v uint32) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGTE(FieldGcCount, v))
}

// GcCountLT applies the LT predicate on the "gc_count" field.
func GcCountLT(v uint32) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLT(FieldGcCount, v))
}

// GcCountLTE applies the LTE predicate on the "gc_count" field.
func GcCountLTE(v uint32) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLTE(FieldGcCount, v))
}

// LoadAvg1EQ applies the EQ predicate on the "load_avg_1" field.
func LoadAvg1EQ(v float64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldLoadAvg1, v))
}

// LoadAvg1NEQ applies the NEQ predicate on the "load_avg_1" field.
func LoadAvg1NEQ(v float64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNEQ(FieldLoadAvg1, v))
}

// LoadAvg1In applies the In predicate on the "load_avg_1" field.
func LoadAvg1In(vs ...float64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldIn(FieldLoadAvg1, vs...))
}

// LoadAvg1NotIn applies the NotIn predicate on the "load_avg_1" field.
func LoadAvg1NotIn(vs ...float64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNotIn(FieldLoadAvg1, vs...))
}

// LoadAvg1GT applies the GT predicate on the "load_avg_1" field.
func LoadAvg1GT(v float64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGT(FieldLoadAvg1, v))
}

// LoadAvg1GTE applies the GTE predicate on the "load_avg_1" field.
func LoadAvg1GTE(v float64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGTE(FieldLoadAvg1, v))
}

// LoadAvg1LT applies the LT predicate on the "load_avg_1" field.
func LoadAvg1LT(v float64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLT(FieldLoadAvg1, v))
}

// LoadAvg1LTE applies the LTE predicate on the "load_avg_1" field.
func LoadAvg1LTE(v float64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLTE(FieldLoadAvg1, v))
}

// LoadAvg1IsNil applies the IsNil predicate on the "load_avg_1" field.
func LoadAvg1IsNil() predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldIsNull(FieldLoadAvg1))
}

// LoadAvg1NotNil applies the NotNil predicate on the "load_avg_1" field.
func LoadAvg1NotNil() predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNotNull(FieldLoadAvg1))
}

// LoadAvg5EQ applies the EQ predicate on the "load_avg_5" field.
func LoadAvg5EQ(v float64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldLoadAvg5, v))
}

// LoadAvg5NEQ applies the NEQ predicate on the "load_avg_5" field.
func LoadAvg5NEQ(v float64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNEQ(FieldLoadAvg5, v))
}

// LoadAvg5In applies the In predicate on the "load_avg_5" field.
func LoadAvg5In(vs ...float64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldIn(FieldLoadAvg5, vs...))
}

// LoadAvg5NotIn applies the NotIn predicate on the "load_avg_5" field.
func LoadAvg5NotIn(vs ...float64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNotIn(FieldLoadAvg5, vs...))
}

// LoadAvg5GT applies the GT predicate on the "load_avg_5" field.
func LoadAvg5GT(v float64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGT(FieldLoadAvg5, v))
}

// LoadAvg5GTE applies the GTE predicate on the "load_avg_5" field.
func LoadAvg5GTE(v float64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGTE(FieldLoadAvg5, v))
}

// LoadAvg5LT applies the LT predicate on the "load_avg_5" field.
func LoadAvg5LT(v float64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLT(FieldLoadAvg5, v))
}

// LoadAvg5LTE applies the LTE predicate on the "load_avg_5" field.
func LoadAvg5LTE(v float64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLTE(FieldLoadAvg5, v))
}

// LoadAvg5IsNil applies the IsNil predicate on the "load_avg_5" field.
func LoadAvg5IsNil() predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldIsNull(FieldLoadAvg5))
}

// LoadAvg5NotNil applies the NotNil predicate on the "load_avg_5" field.
func LoadAvg5NotNil() predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNotNull(FieldLoadAvg5))
}

// LoadAvg15EQ applies the EQ predicate on the "load_avg_15" field.
func LoadAvg15EQ(v float64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldLoadAvg15, v))
}

// LoadAvg15NEQ applies the NEQ predicate on the "load_avg_15" field.
func LoadAvg15NEQ(v float64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNEQ(FieldLoadAvg15, v))
}

// LoadAvg15In applies the In predicate on the "load_avg_15" field.
func LoadAvg15In(vs ...float64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldIn(FieldLoadAvg15, vs...))
}

// LoadAvg15NotIn applies the NotIn predicate on the "load_avg_15" field.
func LoadAvg15NotIn(vs ...float64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNotIn(FieldLoadAvg15, vs...))
}

// LoadAvg15GT applies the GT predicate on the "load_avg_15" field.
func LoadAvg15GT(v float64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGT(FieldLoadAvg15, v))
}

// LoadAvg15GTE applies the GTE predicate on the "load_avg_15" field.
func LoadAvg15GTE(v float64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGTE(FieldLoadAvg15, v))
}

// LoadAvg15LT applies the LT predicate on the "load_avg_15" field.
func LoadAvg15LT(v float64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLT(FieldLoadAvg15, v))
}

// LoadAvg15LTE applies the LTE predicate on the "load_avg_15" field.
func LoadAvg15LTE(v float64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLTE(FieldLoadAvg15, v))
}

// LoadAvg15IsNil applies the IsNil predicate on the "load_avg_15" field.
func LoadAvg15IsNil() predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldIsNull(FieldLoadAvg15))
}

// LoadAvg15NotNil applies the NotNil predicate on the "load_avg_15" field.
func LoadAvg15NotNil() predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNotNull(FieldLoadAvg15))
}

// UptimeEQ applies the EQ predicate on the "uptime" field.
func UptimeEQ(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldUptime, v))
}

// UptimeNEQ applies the NEQ predicate on the "uptime" field.
func UptimeNEQ(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNEQ(FieldUptime, v))
}

// UptimeIn applies the In predicate on the "uptime" field.
func UptimeIn(vs ...uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldIn(FieldUptime, vs...))
}

// UptimeNotIn applies the NotIn predicate on the "uptime" field.
func UptimeNotIn(vs ...uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNotIn(FieldUptime, vs...))
}

// UptimeGT applies the GT predicate on the "uptime" field.
func UptimeGT(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGT(FieldUptime, v))
}

// UptimeGTE applies the GTE predicate on the "uptime" field.
func UptimeGTE(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGTE(FieldUptime, v))
}

// UptimeLT applies the LT predicate on the "uptime" field.
func UptimeLT(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLT(FieldUptime, v))
}

// UptimeLTE applies the LTE predicate on the "uptime" field.
func UptimeLTE(v uint64) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLTE(FieldUptime, v))
}

// RecordedAtEQ applies the EQ predicate on the "recorded_at" field.
func RecordedAtEQ(v time.Time) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldEQ(FieldRecordedAt, v))
}

// RecordedAtNEQ applies the NEQ predicate on the "recorded_at" field.
func RecordedAtNEQ(v time.Time) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNEQ(FieldRecordedAt, v))
}

// RecordedAtIn applies the In predicate on the "recorded_at" field.
func RecordedAtIn(vs ...time.Time) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldIn(FieldRecordedAt, vs...))
}

// RecordedAtNotIn applies the NotIn predicate on the "recorded_at" field.
func RecordedAtNotIn(vs ...time.Time) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldNotIn(FieldRecordedAt, vs...))
}

// RecordedAtGT applies the GT predicate on the "recorded_at" field.
func RecordedAtGT(v time.Time) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGT(FieldRecordedAt, v))
}

// RecordedAtGTE applies the GTE predicate on the "recorded_at" field.
func RecordedAtGTE(v time.Time) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldGTE(FieldRecordedAt, v))
}

// RecordedAtLT applies the LT predicate on the "recorded_at" field.
func RecordedAtLT(v time.Time) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLT(FieldRecordedAt, v))
}

// RecordedAtLTE applies the LTE predicate on the "recorded_at" field.
func RecordedAtLTE(v time.Time) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.FieldLTE(FieldRecordedAt, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.SystemMonitor) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.SystemMonitor) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.SystemMonitor) predicate.SystemMonitor {
	return predicate.SystemMonitor(sql.NotPredicates(p))
}
