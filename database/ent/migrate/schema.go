// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// LoggingsColumns holds the columns for the "loggings" table.
	LoggingsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeInt64, Nullable: true},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "update_by", Type: field.TypeInt64, Nullable: true},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "delete_by", Type: field.TypeInt64, Nullable: true},
		{Name: "level", Type: field.TypeEnum, Enums: []string{"debug", "info", "error", "warn", "fatal"}, Default: "info"},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"Error", "Panic", "manul"}, Default: "manul"},
		{Name: "message", Type: field.TypeString, Size: 500},
		{Name: "method", Type: field.TypeString, Nullable: true, Size: 127},
		{Name: "path", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "ip", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "query", Type: field.TypeString, Nullable: true, Size: 1000},
		{Name: "code", Type: field.TypeInt, Nullable: true},
		{Name: "user_agent", Type: field.TypeString, Nullable: true, Size: 512},
		{Name: "data", Type: field.TypeJSON, Nullable: true},
		{Name: "stack", Type: field.TypeString, Nullable: true, Size: 8192},
	}
	// LoggingsTable holds the schema information for the "loggings" table.
	LoggingsTable = &schema.Table{
		Name:       "loggings",
		Columns:    LoggingsColumns,
		PrimaryKey: []*schema.Column{LoggingsColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeInt64, Nullable: true},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "update_by", Type: field.TypeInt64, Nullable: true},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "delete_by", Type: field.TypeInt64, Nullable: true},
		{Name: "name", Type: field.TypeString, Size: 100},
		{Name: "email", Type: field.TypeString, Unique: true, Size: 255},
		{Name: "age", Type: field.TypeInt, Nullable: true},
		{Name: "phone", Type: field.TypeString, Nullable: true, Size: 20},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		LoggingsTable,
		UsersTable,
	}
)

func init() {
}
