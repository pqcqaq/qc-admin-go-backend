// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// SysAPIAuthColumns holds the columns for the "sys_api_auth" table.
	SysAPIAuthColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeUint64, Nullable: true},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "update_by", Type: field.TypeUint64, Nullable: true},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "delete_by", Type: field.TypeUint64, Nullable: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "method", Type: field.TypeString},
		{Name: "path", Type: field.TypeString},
		{Name: "is_public", Type: field.TypeBool, Default: false},
		{Name: "is_active", Type: field.TypeBool, Default: true},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"http", "websocket"}, Default: "http"},
		{Name: "metadata", Type: field.TypeJSON, Nullable: true},
	}
	// SysAPIAuthTable holds the schema information for the "sys_api_auth" table.
	SysAPIAuthTable = &schema.Table{
		Name:       "sys_api_auth",
		Columns:    SysAPIAuthColumns,
		PrimaryKey: []*schema.Column{SysAPIAuthColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "apiauth_delete_time",
				Unique:  false,
				Columns: []*schema.Column{SysAPIAuthColumns[5]},
			},
			{
				Name:    "apiauth_delete_by",
				Unique:  false,
				Columns: []*schema.Column{SysAPIAuthColumns[6]},
			},
			{
				Name:    "apiauth_method_path_delete_time",
				Unique:  true,
				Columns: []*schema.Column{SysAPIAuthColumns[9], SysAPIAuthColumns[10], SysAPIAuthColumns[5]},
			},
			{
				Name:    "apiauth_name_delete_time",
				Unique:  true,
				Columns: []*schema.Column{SysAPIAuthColumns[7], SysAPIAuthColumns[5]},
			},
			{
				Name:    "apiauth_is_public",
				Unique:  false,
				Columns: []*schema.Column{SysAPIAuthColumns[11]},
			},
			{
				Name:    "apiauth_is_active",
				Unique:  false,
				Columns: []*schema.Column{SysAPIAuthColumns[12]},
			},
			{
				Name:    "apiauth_method",
				Unique:  false,
				Columns: []*schema.Column{SysAPIAuthColumns[9]},
			},
			{
				Name:    "apiauth_path",
				Unique:  false,
				Columns: []*schema.Column{SysAPIAuthColumns[10]},
			},
		},
	}
	// SysAddressesColumns holds the columns for the "sys_addresses" table.
	SysAddressesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeUint64, Nullable: true},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "update_by", Type: field.TypeUint64, Nullable: true},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "delete_by", Type: field.TypeUint64, Nullable: true},
		{Name: "detail", Type: field.TypeString, Size: 256},
		{Name: "phone", Type: field.TypeString, Size: 20},
		{Name: "name", Type: field.TypeString, Size: 32},
		{Name: "is_default", Type: field.TypeBool, Default: false},
		{Name: "remark", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "entity", Type: field.TypeString, Nullable: true, Size: 32},
		{Name: "entity_id", Type: field.TypeString, Nullable: true, Size: 64},
		{Name: "area_id", Type: field.TypeUint64},
	}
	// SysAddressesTable holds the schema information for the "sys_addresses" table.
	SysAddressesTable = &schema.Table{
		Name:       "sys_addresses",
		Columns:    SysAddressesColumns,
		PrimaryKey: []*schema.Column{SysAddressesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sys_addresses_sys_areas_area",
				Columns:    []*schema.Column{SysAddressesColumns[14]},
				RefColumns: []*schema.Column{SysAreasColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "address_delete_time",
				Unique:  false,
				Columns: []*schema.Column{SysAddressesColumns[5]},
			},
			{
				Name:    "address_delete_by",
				Unique:  false,
				Columns: []*schema.Column{SysAddressesColumns[6]},
			},
			{
				Name:    "address_entity_entity_id",
				Unique:  false,
				Columns: []*schema.Column{SysAddressesColumns[12], SysAddressesColumns[13]},
			},
			{
				Name:    "address_is_default",
				Unique:  false,
				Columns: []*schema.Column{SysAddressesColumns[10]},
			},
			{
				Name:    "address_area_id",
				Unique:  false,
				Columns: []*schema.Column{SysAddressesColumns[14]},
			},
		},
	}
	// SysAreasColumns holds the columns for the "sys_areas" table.
	SysAreasColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeUint64, Nullable: true},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "update_by", Type: field.TypeUint64, Nullable: true},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "delete_by", Type: field.TypeUint64, Nullable: true},
		{Name: "name", Type: field.TypeString, Size: 32},
		{Name: "spell", Type: field.TypeString, Size: 8},
		{Name: "level", Type: field.TypeEnum, Enums: []string{"country", "province", "city", "district", "street"}},
		{Name: "depth", Type: field.TypeInt},
		{Name: "code", Type: field.TypeString, Size: 12},
		{Name: "latitude", Type: field.TypeFloat64},
		{Name: "longitude", Type: field.TypeFloat64},
		{Name: "color", Type: field.TypeString, Nullable: true, Size: 20},
		{Name: "parent_id", Type: field.TypeUint64, Nullable: true},
	}
	// SysAreasTable holds the schema information for the "sys_areas" table.
	SysAreasTable = &schema.Table{
		Name:       "sys_areas",
		Columns:    SysAreasColumns,
		PrimaryKey: []*schema.Column{SysAreasColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sys_areas_sys_areas_parent",
				Columns:    []*schema.Column{SysAreasColumns[15]},
				RefColumns: []*schema.Column{SysAreasColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "area_delete_time",
				Unique:  false,
				Columns: []*schema.Column{SysAreasColumns[5]},
			},
			{
				Name:    "area_delete_by",
				Unique:  false,
				Columns: []*schema.Column{SysAreasColumns[6]},
			},
			{
				Name:    "area_code_delete_time",
				Unique:  true,
				Columns: []*schema.Column{SysAreasColumns[11], SysAreasColumns[5]},
			},
			{
				Name:    "area_name",
				Unique:  false,
				Columns: []*schema.Column{SysAreasColumns[7]},
			},
			{
				Name:    "area_level",
				Unique:  false,
				Columns: []*schema.Column{SysAreasColumns[9]},
			},
			{
				Name:    "area_depth",
				Unique:  false,
				Columns: []*schema.Column{SysAreasColumns[10]},
			},
			{
				Name:    "area_parent_id",
				Unique:  false,
				Columns: []*schema.Column{SysAreasColumns[15]},
			},
		},
	}
	// SysAttachmentsColumns holds the columns for the "sys_attachments" table.
	SysAttachmentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeUint64, Nullable: true},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "update_by", Type: field.TypeUint64, Nullable: true},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "delete_by", Type: field.TypeUint64, Nullable: true},
		{Name: "filename", Type: field.TypeString, Size: 255},
		{Name: "path", Type: field.TypeString, Size: 500},
		{Name: "url", Type: field.TypeString, Nullable: true, Size: 500},
		{Name: "content_type", Type: field.TypeString, Size: 100},
		{Name: "size", Type: field.TypeInt64},
		{Name: "etag", Type: field.TypeString, Nullable: true, Size: 100},
		{Name: "bucket", Type: field.TypeString, Size: 100},
		{Name: "storage_provider", Type: field.TypeString, Size: 50, Default: "s3"},
		{Name: "metadata", Type: field.TypeJSON, Nullable: true},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"uploading", "uploaded", "failed", "deleted"}, Default: "uploading"},
		{Name: "upload_session_id", Type: field.TypeString, Nullable: true, Size: 100},
		{Name: "tag1", Type: field.TypeString, Nullable: true, Size: 100},
		{Name: "tag2", Type: field.TypeString, Nullable: true, Size: 100},
		{Name: "tag3", Type: field.TypeString, Nullable: true, Size: 100},
	}
	// SysAttachmentsTable holds the schema information for the "sys_attachments" table.
	SysAttachmentsTable = &schema.Table{
		Name:       "sys_attachments",
		Columns:    SysAttachmentsColumns,
		PrimaryKey: []*schema.Column{SysAttachmentsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "attachment_delete_time",
				Unique:  false,
				Columns: []*schema.Column{SysAttachmentsColumns[5]},
			},
			{
				Name:    "attachment_delete_by",
				Unique:  false,
				Columns: []*schema.Column{SysAttachmentsColumns[6]},
			},
			{
				Name:    "idx_attachment_path",
				Unique:  true,
				Columns: []*schema.Column{SysAttachmentsColumns[8], SysAttachmentsColumns[5]},
			},
			{
				Name:    "idx_attachment_filename",
				Unique:  false,
				Columns: []*schema.Column{SysAttachmentsColumns[7]},
			},
			{
				Name:    "idx_attachment_content_type",
				Unique:  false,
				Columns: []*schema.Column{SysAttachmentsColumns[10]},
			},
			{
				Name:    "idx_attachment_status",
				Unique:  false,
				Columns: []*schema.Column{SysAttachmentsColumns[16]},
			},
			{
				Name:    "idx_attachment_bucket",
				Unique:  false,
				Columns: []*schema.Column{SysAttachmentsColumns[13]},
			},
			{
				Name:    "idx_attachment_deleted_created",
				Unique:  false,
				Columns: []*schema.Column{SysAttachmentsColumns[5], SysAttachmentsColumns[1]},
			},
			{
				Name:    "idx_attachment_session",
				Unique:  false,
				Columns: []*schema.Column{SysAttachmentsColumns[17]},
			},
			{
				Name:    "idx_attachment_tag1",
				Unique:  false,
				Columns: []*schema.Column{SysAttachmentsColumns[18]},
			},
			{
				Name:    "idx_attachment_tag2",
				Unique:  false,
				Columns: []*schema.Column{SysAttachmentsColumns[19]},
			},
			{
				Name:    "idx_attachment_tag3",
				Unique:  false,
				Columns: []*schema.Column{SysAttachmentsColumns[20]},
			},
		},
	}
	// SysClientsColumns holds the columns for the "sys_clients" table.
	SysClientsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeUint64, Nullable: true},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "update_by", Type: field.TypeUint64, Nullable: true},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "delete_by", Type: field.TypeUint64, Nullable: true},
		{Name: "name", Type: field.TypeString, Size: 100},
		{Name: "code", Type: field.TypeString, Size: 64},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "enabled", Type: field.TypeBool, Default: true},
		{Name: "access_token_expiry", Type: field.TypeUint64},
		{Name: "refresh_token_expiry", Type: field.TypeUint64},
		{Name: "anonymous", Type: field.TypeBool, Default: true},
	}
	// SysClientsTable holds the schema information for the "sys_clients" table.
	SysClientsTable = &schema.Table{
		Name:       "sys_clients",
		Columns:    SysClientsColumns,
		PrimaryKey: []*schema.Column{SysClientsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "clientdevice_delete_time",
				Unique:  false,
				Columns: []*schema.Column{SysClientsColumns[5]},
			},
			{
				Name:    "clientdevice_delete_by",
				Unique:  false,
				Columns: []*schema.Column{SysClientsColumns[6]},
			},
			{
				Name:    "clientdevice_code_delete_time",
				Unique:  true,
				Columns: []*schema.Column{SysClientsColumns[8], SysClientsColumns[5]},
			},
		},
	}
	// SysCredentialsColumns holds the columns for the "sys_credentials" table.
	SysCredentialsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeUint64, Nullable: true},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "update_by", Type: field.TypeUint64, Nullable: true},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "delete_by", Type: field.TypeUint64, Nullable: true},
		{Name: "credential_type", Type: field.TypeEnum, Enums: []string{"password", "email", "oauth", "phone", "totp"}},
		{Name: "identifier", Type: field.TypeString, Size: 255},
		{Name: "secret", Type: field.TypeString, Nullable: true, Size: 500},
		{Name: "salt", Type: field.TypeString, Nullable: true, Size: 100},
		{Name: "provider", Type: field.TypeString, Nullable: true, Size: 50},
		{Name: "is_verified", Type: field.TypeBool, Default: false},
		{Name: "verified_at", Type: field.TypeTime, Nullable: true},
		{Name: "last_used_at", Type: field.TypeTime, Nullable: true},
		{Name: "expires_at", Type: field.TypeTime, Nullable: true},
		{Name: "failed_attempts", Type: field.TypeInt, Default: 0},
		{Name: "locked_until", Type: field.TypeTime, Nullable: true},
		{Name: "metadata", Type: field.TypeJSON, Nullable: true},
		{Name: "user_id", Type: field.TypeUint64},
	}
	// SysCredentialsTable holds the schema information for the "sys_credentials" table.
	SysCredentialsTable = &schema.Table{
		Name:       "sys_credentials",
		Columns:    SysCredentialsColumns,
		PrimaryKey: []*schema.Column{SysCredentialsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sys_credentials_sys_users_credentials",
				Columns:    []*schema.Column{SysCredentialsColumns[19]},
				RefColumns: []*schema.Column{SysUsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "credential_delete_time",
				Unique:  false,
				Columns: []*schema.Column{SysCredentialsColumns[5]},
			},
			{
				Name:    "credential_delete_by",
				Unique:  false,
				Columns: []*schema.Column{SysCredentialsColumns[6]},
			},
			{
				Name:    "credential_user_id_credential_type_delete_time",
				Unique:  false,
				Columns: []*schema.Column{SysCredentialsColumns[19], SysCredentialsColumns[7], SysCredentialsColumns[5]},
			},
			{
				Name:    "credential_credential_type_identifier_delete_time",
				Unique:  false,
				Columns: []*schema.Column{SysCredentialsColumns[7], SysCredentialsColumns[8], SysCredentialsColumns[5]},
			},
			{
				Name:    "credential_provider_identifier_delete_time",
				Unique:  false,
				Columns: []*schema.Column{SysCredentialsColumns[11], SysCredentialsColumns[8], SysCredentialsColumns[5]},
			},
			{
				Name:    "credential_is_verified_credential_type_delete_time",
				Unique:  false,
				Columns: []*schema.Column{SysCredentialsColumns[12], SysCredentialsColumns[7], SysCredentialsColumns[5]},
			},
			{
				Name:    "credential_expires_at_delete_time",
				Unique:  false,
				Columns: []*schema.Column{SysCredentialsColumns[15], SysCredentialsColumns[5]},
			},
		},
	}
	// LoggingsColumns holds the columns for the "loggings" table.
	LoggingsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeUint64, Nullable: true},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "update_by", Type: field.TypeUint64, Nullable: true},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "delete_by", Type: field.TypeUint64, Nullable: true},
		{Name: "level", Type: field.TypeEnum, Enums: []string{"debug", "info", "error", "warn", "fatal"}, Default: "info"},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"Error", "Panic", "manul"}, Default: "manul"},
		{Name: "message", Type: field.TypeString, Size: 500},
		{Name: "method", Type: field.TypeString, Nullable: true, Size: 127},
		{Name: "path", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "ip", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "query", Type: field.TypeString, Nullable: true, Size: 1000},
		{Name: "code", Type: field.TypeInt, Nullable: true},
		{Name: "user_agent", Type: field.TypeString, Nullable: true, Size: 512},
		{Name: "data", Type: field.TypeJSON, Nullable: true},
		{Name: "stack", Type: field.TypeString, Nullable: true, Size: 8192},
	}
	// LoggingsTable holds the schema information for the "loggings" table.
	LoggingsTable = &schema.Table{
		Name:       "loggings",
		Columns:    LoggingsColumns,
		PrimaryKey: []*schema.Column{LoggingsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "logging_delete_time",
				Unique:  false,
				Columns: []*schema.Column{LoggingsColumns[5]},
			},
			{
				Name:    "logging_delete_by",
				Unique:  false,
				Columns: []*schema.Column{LoggingsColumns[6]},
			},
		},
	}
	// SysLoginRecordsColumns holds the columns for the "sys_login_records" table.
	SysLoginRecordsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeUint64, Nullable: true},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "update_by", Type: field.TypeUint64, Nullable: true},
		{Name: "identifier", Type: field.TypeString, Size: 255},
		{Name: "credential_type", Type: field.TypeEnum, Enums: []string{"password", "email", "oauth", "phone", "totp"}},
		{Name: "ip_address", Type: field.TypeString, Size: 45},
		{Name: "user_agent", Type: field.TypeString, Nullable: true, Size: 512},
		{Name: "device_info", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "location", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"success", "failed", "locked"}},
		{Name: "failure_reason", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "session_id", Type: field.TypeString, Nullable: true, Size: 128},
		{Name: "logout_time", Type: field.TypeTime, Nullable: true},
		{Name: "duration", Type: field.TypeInt, Nullable: true},
		{Name: "metadata", Type: field.TypeJSON, Nullable: true},
		{Name: "client_id", Type: field.TypeUint64, Nullable: true},
		{Name: "user_id", Type: field.TypeUint64},
	}
	// SysLoginRecordsTable holds the schema information for the "sys_login_records" table.
	SysLoginRecordsTable = &schema.Table{
		Name:       "sys_login_records",
		Columns:    SysLoginRecordsColumns,
		PrimaryKey: []*schema.Column{SysLoginRecordsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sys_login_records_sys_users_login_records",
				Columns:    []*schema.Column{SysLoginRecordsColumns[18]},
				RefColumns: []*schema.Column{SysUsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "loginrecord_user_id_create_time",
				Unique:  false,
				Columns: []*schema.Column{SysLoginRecordsColumns[18], SysLoginRecordsColumns[1]},
			},
			{
				Name:    "loginrecord_status_create_time",
				Unique:  false,
				Columns: []*schema.Column{SysLoginRecordsColumns[11], SysLoginRecordsColumns[1]},
			},
			{
				Name:    "loginrecord_credential_type_create_time",
				Unique:  false,
				Columns: []*schema.Column{SysLoginRecordsColumns[6], SysLoginRecordsColumns[1]},
			},
			{
				Name:    "loginrecord_ip_address_create_time",
				Unique:  false,
				Columns: []*schema.Column{SysLoginRecordsColumns[7], SysLoginRecordsColumns[1]},
			},
			{
				Name:    "loginrecord_session_id",
				Unique:  false,
				Columns: []*schema.Column{SysLoginRecordsColumns[13]},
			},
		},
	}
	// OauthApplicationsColumns holds the columns for the "oauth_applications" table.
	OauthApplicationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeUint64, Nullable: true},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "update_by", Type: field.TypeUint64, Nullable: true},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "delete_by", Type: field.TypeUint64, Nullable: true},
		{Name: "client_id", Type: field.TypeString, Unique: true, Size: 128},
		{Name: "client_secret", Type: field.TypeString, Size: 512},
		{Name: "name", Type: field.TypeString, Size: 64},
		{Name: "redirect_uris", Type: field.TypeJSON},
		{Name: "is_confidential", Type: field.TypeBool, Default: true},
		{Name: "scopes", Type: field.TypeJSON},
		{Name: "able_state", Type: field.TypeEnum, Enums: []string{"enabled", "disabled"}, Default: "enabled"},
		{Name: "system_id", Type: field.TypeUint64, Nullable: true},
	}
	// OauthApplicationsTable holds the schema information for the "oauth_applications" table.
	OauthApplicationsTable = &schema.Table{
		Name:       "oauth_applications",
		Columns:    OauthApplicationsColumns,
		PrimaryKey: []*schema.Column{OauthApplicationsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "oauthapplication_delete_time",
				Unique:  false,
				Columns: []*schema.Column{OauthApplicationsColumns[5]},
			},
			{
				Name:    "oauthapplication_delete_by",
				Unique:  false,
				Columns: []*schema.Column{OauthApplicationsColumns[6]},
			},
			{
				Name:    "oauthapplication_client_id",
				Unique:  false,
				Columns: []*schema.Column{OauthApplicationsColumns[7]},
			},
			{
				Name:    "oauthapplication_name_delete_time",
				Unique:  true,
				Columns: []*schema.Column{OauthApplicationsColumns[9], OauthApplicationsColumns[5]},
			},
		},
	}
	// OauthAuthorizationCodesColumns holds the columns for the "oauth_authorization_codes" table.
	OauthAuthorizationCodesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeUint64, Nullable: true},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "update_by", Type: field.TypeUint64, Nullable: true},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "delete_by", Type: field.TypeUint64, Nullable: true},
		{Name: "code", Type: field.TypeString, Unique: true, Size: 128},
		{Name: "redirect_uri", Type: field.TypeString, Size: 512},
		{Name: "scope", Type: field.TypeJSON},
		{Name: "expires_at", Type: field.TypeTime},
		{Name: "used_at", Type: field.TypeTime, Nullable: true},
		{Name: "code_challenge", Type: field.TypeString, Nullable: true, Size: 128},
		{Name: "code_challenge_method", Type: field.TypeString, Nullable: true, Size: 10},
		{Name: "application_id", Type: field.TypeUint64},
		{Name: "user_id", Type: field.TypeUint64},
		{Name: "oauth_user_authorization_code", Type: field.TypeUint64, Unique: true, Nullable: true},
	}
	// OauthAuthorizationCodesTable holds the schema information for the "oauth_authorization_codes" table.
	OauthAuthorizationCodesTable = &schema.Table{
		Name:       "oauth_authorization_codes",
		Columns:    OauthAuthorizationCodesColumns,
		PrimaryKey: []*schema.Column{OauthAuthorizationCodesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "oauth_authorization_codes_oauth_applications_authorization_codes",
				Columns:    []*schema.Column{OauthAuthorizationCodesColumns[14]},
				RefColumns: []*schema.Column{OauthApplicationsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "oauth_authorization_codes_sys_users_user",
				Columns:    []*schema.Column{OauthAuthorizationCodesColumns[15]},
				RefColumns: []*schema.Column{SysUsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "oauth_authorization_codes_oauth_user_authorizations_code",
				Columns:    []*schema.Column{OauthAuthorizationCodesColumns[16]},
				RefColumns: []*schema.Column{OauthUserAuthorizationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "oauthauthorizationcode_delete_time",
				Unique:  false,
				Columns: []*schema.Column{OauthAuthorizationCodesColumns[5]},
			},
			{
				Name:    "oauthauthorizationcode_delete_by",
				Unique:  false,
				Columns: []*schema.Column{OauthAuthorizationCodesColumns[6]},
			},
			{
				Name:    "oauthauthorizationcode_code",
				Unique:  false,
				Columns: []*schema.Column{OauthAuthorizationCodesColumns[7]},
			},
			{
				Name:    "oauthauthorizationcode_application_id_user_id",
				Unique:  false,
				Columns: []*schema.Column{OauthAuthorizationCodesColumns[14], OauthAuthorizationCodesColumns[15]},
			},
			{
				Name:    "oauthauthorizationcode_expires_at",
				Unique:  false,
				Columns: []*schema.Column{OauthAuthorizationCodesColumns[10]},
			},
		},
	}
	// OauthProvidersColumns holds the columns for the "oauth_providers" table.
	OauthProvidersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeUint64, Nullable: true},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "update_by", Type: field.TypeUint64, Nullable: true},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "delete_by", Type: field.TypeUint64, Nullable: true},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"oak", "gitea", "github", "google", "gitlab", "microsoft", "weixin", "custom"}},
		{Name: "name", Type: field.TypeString, Size: 64},
		{Name: "authorization_endpoint", Type: field.TypeString, Size: 512},
		{Name: "token_endpoint", Type: field.TypeString, Size: 512},
		{Name: "user_info_endpoint", Type: field.TypeString, Size: 512},
		{Name: "revoke_endpoint", Type: field.TypeString, Nullable: true, Size: 512},
		{Name: "refresh_endpoint", Type: field.TypeString, Nullable: true, Size: 512},
		{Name: "client_id", Type: field.TypeString, Size: 512},
		{Name: "client_secret", Type: field.TypeString, Size: 512},
		{Name: "redirect_uri", Type: field.TypeString, Size: 512},
		{Name: "scopes", Type: field.TypeJSON, Nullable: true},
		{Name: "auto_register", Type: field.TypeBool, Default: false},
		{Name: "able_state", Type: field.TypeEnum, Enums: []string{"enabled", "disabled"}, Default: "enabled"},
		{Name: "metadata", Type: field.TypeJSON, Nullable: true},
	}
	// OauthProvidersTable holds the schema information for the "oauth_providers" table.
	OauthProvidersTable = &schema.Table{
		Name:       "oauth_providers",
		Columns:    OauthProvidersColumns,
		PrimaryKey: []*schema.Column{OauthProvidersColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "oauthprovider_delete_time",
				Unique:  false,
				Columns: []*schema.Column{OauthProvidersColumns[5]},
			},
			{
				Name:    "oauthprovider_delete_by",
				Unique:  false,
				Columns: []*schema.Column{OauthProvidersColumns[6]},
			},
			{
				Name:    "oauthprovider_type_name_delete_time",
				Unique:  true,
				Columns: []*schema.Column{OauthProvidersColumns[7], OauthProvidersColumns[8], OauthProvidersColumns[5]},
			},
			{
				Name:    "oauthprovider_able_state",
				Unique:  false,
				Columns: []*schema.Column{OauthProvidersColumns[19]},
			},
		},
	}
	// OauthStatesColumns holds the columns for the "oauth_states" table.
	OauthStatesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeUint64, Nullable: true},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "update_by", Type: field.TypeUint64, Nullable: true},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "delete_by", Type: field.TypeUint64, Nullable: true},
		{Name: "state", Type: field.TypeString, Unique: true, Size: 32},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"login", "bind"}},
		{Name: "expires_at", Type: field.TypeTime},
		{Name: "used_at", Type: field.TypeTime, Nullable: true},
		{Name: "provider_id", Type: field.TypeUint64},
		{Name: "user_id", Type: field.TypeUint64, Nullable: true},
	}
	// OauthStatesTable holds the schema information for the "oauth_states" table.
	OauthStatesTable = &schema.Table{
		Name:       "oauth_states",
		Columns:    OauthStatesColumns,
		PrimaryKey: []*schema.Column{OauthStatesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "oauth_states_oauth_providers_states",
				Columns:    []*schema.Column{OauthStatesColumns[11]},
				RefColumns: []*schema.Column{OauthProvidersColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "oauth_states_sys_users_user",
				Columns:    []*schema.Column{OauthStatesColumns[12]},
				RefColumns: []*schema.Column{SysUsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "oauthstate_delete_time",
				Unique:  false,
				Columns: []*schema.Column{OauthStatesColumns[5]},
			},
			{
				Name:    "oauthstate_delete_by",
				Unique:  false,
				Columns: []*schema.Column{OauthStatesColumns[6]},
			},
			{
				Name:    "oauthstate_state",
				Unique:  false,
				Columns: []*schema.Column{OauthStatesColumns[7]},
			},
			{
				Name:    "oauthstate_expires_at",
				Unique:  false,
				Columns: []*schema.Column{OauthStatesColumns[9]},
			},
		},
	}
	// OauthTokensColumns holds the columns for the "oauth_tokens" table.
	OauthTokensColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeUint64, Nullable: true},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "update_by", Type: field.TypeUint64, Nullable: true},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "delete_by", Type: field.TypeUint64, Nullable: true},
		{Name: "access_token", Type: field.TypeString, Unique: true, Size: 1024},
		{Name: "refresh_token", Type: field.TypeString, Unique: true, Size: 1024},
		{Name: "scope", Type: field.TypeJSON},
		{Name: "access_expires_at", Type: field.TypeTime},
		{Name: "refresh_expires_at", Type: field.TypeTime},
		{Name: "revoked_at", Type: field.TypeTime, Nullable: true},
		{Name: "last_used_at", Type: field.TypeTime, Nullable: true},
		{Name: "application_id", Type: field.TypeUint64},
		{Name: "oauth_authorization_code_token", Type: field.TypeUint64, Unique: true, Nullable: true},
		{Name: "user_id", Type: field.TypeUint64},
		{Name: "oauth_user_authorization_token", Type: field.TypeUint64, Unique: true, Nullable: true},
	}
	// OauthTokensTable holds the schema information for the "oauth_tokens" table.
	OauthTokensTable = &schema.Table{
		Name:       "oauth_tokens",
		Columns:    OauthTokensColumns,
		PrimaryKey: []*schema.Column{OauthTokensColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "oauth_tokens_oauth_applications_tokens",
				Columns:    []*schema.Column{OauthTokensColumns[14]},
				RefColumns: []*schema.Column{OauthApplicationsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "oauth_tokens_oauth_authorization_codes_token",
				Columns:    []*schema.Column{OauthTokensColumns[15]},
				RefColumns: []*schema.Column{OauthAuthorizationCodesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "oauth_tokens_sys_users_user",
				Columns:    []*schema.Column{OauthTokensColumns[16]},
				RefColumns: []*schema.Column{SysUsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "oauth_tokens_oauth_user_authorizations_token",
				Columns:    []*schema.Column{OauthTokensColumns[17]},
				RefColumns: []*schema.Column{OauthUserAuthorizationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "oauthtoken_delete_time",
				Unique:  false,
				Columns: []*schema.Column{OauthTokensColumns[5]},
			},
			{
				Name:    "oauthtoken_delete_by",
				Unique:  false,
				Columns: []*schema.Column{OauthTokensColumns[6]},
			},
			{
				Name:    "oauthtoken_access_token",
				Unique:  false,
				Columns: []*schema.Column{OauthTokensColumns[7]},
			},
			{
				Name:    "oauthtoken_refresh_token",
				Unique:  false,
				Columns: []*schema.Column{OauthTokensColumns[8]},
			},
			{
				Name:    "oauthtoken_application_id_user_id",
				Unique:  false,
				Columns: []*schema.Column{OauthTokensColumns[14], OauthTokensColumns[16]},
			},
			{
				Name:    "oauthtoken_access_expires_at",
				Unique:  false,
				Columns: []*schema.Column{OauthTokensColumns[10]},
			},
			{
				Name:    "oauthtoken_refresh_expires_at",
				Unique:  false,
				Columns: []*schema.Column{OauthTokensColumns[11]},
			},
		},
	}
	// OauthUsersColumns holds the columns for the "oauth_users" table.
	OauthUsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeUint64, Nullable: true},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "update_by", Type: field.TypeUint64, Nullable: true},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "delete_by", Type: field.TypeUint64, Nullable: true},
		{Name: "provider_user_id", Type: field.TypeString, Size: 256},
		{Name: "raw_user_info", Type: field.TypeJSON, Nullable: true},
		{Name: "access_token", Type: field.TypeString, Nullable: true, Size: 1024},
		{Name: "refresh_token", Type: field.TypeString, Nullable: true, Size: 1024},
		{Name: "access_expires_at", Type: field.TypeTime, Nullable: true},
		{Name: "refresh_expires_at", Type: field.TypeTime, Nullable: true},
		{Name: "load_state", Type: field.TypeEnum, Enums: []string{"unload", "loaded"}, Default: "unload"},
		{Name: "provider_id", Type: field.TypeUint64},
		{Name: "state_id", Type: field.TypeUint64, Nullable: true},
		{Name: "user_id", Type: field.TypeUint64},
	}
	// OauthUsersTable holds the schema information for the "oauth_users" table.
	OauthUsersTable = &schema.Table{
		Name:       "oauth_users",
		Columns:    OauthUsersColumns,
		PrimaryKey: []*schema.Column{OauthUsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "oauth_users_oauth_providers_oauth_users",
				Columns:    []*schema.Column{OauthUsersColumns[14]},
				RefColumns: []*schema.Column{OauthProvidersColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "oauth_users_oauth_states_oauth_users",
				Columns:    []*schema.Column{OauthUsersColumns[15]},
				RefColumns: []*schema.Column{OauthStatesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "oauth_users_sys_users_user",
				Columns:    []*schema.Column{OauthUsersColumns[16]},
				RefColumns: []*schema.Column{SysUsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "oauthuser_delete_time",
				Unique:  false,
				Columns: []*schema.Column{OauthUsersColumns[5]},
			},
			{
				Name:    "oauthuser_delete_by",
				Unique:  false,
				Columns: []*schema.Column{OauthUsersColumns[6]},
			},
			{
				Name:    "oauthuser_provider_id_provider_user_id_delete_time",
				Unique:  true,
				Columns: []*schema.Column{OauthUsersColumns[14], OauthUsersColumns[7], OauthUsersColumns[5]},
			},
			{
				Name:    "oauthuser_user_id",
				Unique:  false,
				Columns: []*schema.Column{OauthUsersColumns[16]},
			},
			{
				Name:    "oauthuser_load_state",
				Unique:  false,
				Columns: []*schema.Column{OauthUsersColumns[13]},
			},
		},
	}
	// OauthUserAuthorizationsColumns holds the columns for the "oauth_user_authorizations" table.
	OauthUserAuthorizationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeUint64, Nullable: true},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "update_by", Type: field.TypeUint64, Nullable: true},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "delete_by", Type: field.TypeUint64, Nullable: true},
		{Name: "authorized_at", Type: field.TypeTime},
		{Name: "usage_state", Type: field.TypeEnum, Enums: []string{"unused", "granted", "denied", "revoked"}, Default: "unused"},
		{Name: "scope", Type: field.TypeJSON},
		{Name: "oauth_application_user_authorizations", Type: field.TypeUint64, Nullable: true},
		{Name: "user_id", Type: field.TypeUint64},
		{Name: "application_id", Type: field.TypeUint64},
	}
	// OauthUserAuthorizationsTable holds the schema information for the "oauth_user_authorizations" table.
	OauthUserAuthorizationsTable = &schema.Table{
		Name:       "oauth_user_authorizations",
		Columns:    OauthUserAuthorizationsColumns,
		PrimaryKey: []*schema.Column{OauthUserAuthorizationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "oauth_user_authorizations_oauth_applications_user_authorizations",
				Columns:    []*schema.Column{OauthUserAuthorizationsColumns[10]},
				RefColumns: []*schema.Column{OauthApplicationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "oauth_user_authorizations_sys_users_user",
				Columns:    []*schema.Column{OauthUserAuthorizationsColumns[11]},
				RefColumns: []*schema.Column{SysUsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "oauth_user_authorizations_oauth_applications_application",
				Columns:    []*schema.Column{OauthUserAuthorizationsColumns[12]},
				RefColumns: []*schema.Column{OauthApplicationsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "oauthuserauthorization_delete_time",
				Unique:  false,
				Columns: []*schema.Column{OauthUserAuthorizationsColumns[5]},
			},
			{
				Name:    "oauthuserauthorization_delete_by",
				Unique:  false,
				Columns: []*schema.Column{OauthUserAuthorizationsColumns[6]},
			},
			{
				Name:    "oauthuserauthorization_user_id_application_id_delete_time",
				Unique:  true,
				Columns: []*schema.Column{OauthUserAuthorizationsColumns[11], OauthUserAuthorizationsColumns[12], OauthUserAuthorizationsColumns[5]},
			},
			{
				Name:    "oauthuserauthorization_usage_state",
				Unique:  false,
				Columns: []*schema.Column{OauthUserAuthorizationsColumns[8]},
			},
		},
	}
	// SysPermissionsColumns holds the columns for the "sys_permissions" table.
	SysPermissionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeUint64, Nullable: true},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "update_by", Type: field.TypeUint64, Nullable: true},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "delete_by", Type: field.TypeUint64, Nullable: true},
		{Name: "name", Type: field.TypeString},
		{Name: "action", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "is_public", Type: field.TypeBool, Default: false},
	}
	// SysPermissionsTable holds the schema information for the "sys_permissions" table.
	SysPermissionsTable = &schema.Table{
		Name:       "sys_permissions",
		Columns:    SysPermissionsColumns,
		PrimaryKey: []*schema.Column{SysPermissionsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "permission_delete_time",
				Unique:  false,
				Columns: []*schema.Column{SysPermissionsColumns[5]},
			},
			{
				Name:    "permission_delete_by",
				Unique:  false,
				Columns: []*schema.Column{SysPermissionsColumns[6]},
			},
			{
				Name:    "permission_action",
				Unique:  false,
				Columns: []*schema.Column{SysPermissionsColumns[8]},
			},
			{
				Name:    "permission_name_delete_time",
				Unique:  true,
				Columns: []*schema.Column{SysPermissionsColumns[7], SysPermissionsColumns[5]},
			},
		},
	}
	// SysRolesColumns holds the columns for the "sys_roles" table.
	SysRolesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeUint64, Nullable: true},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "update_by", Type: field.TypeUint64, Nullable: true},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "delete_by", Type: field.TypeUint64, Nullable: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true},
	}
	// SysRolesTable holds the schema information for the "sys_roles" table.
	SysRolesTable = &schema.Table{
		Name:       "sys_roles",
		Columns:    SysRolesColumns,
		PrimaryKey: []*schema.Column{SysRolesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "role_delete_time",
				Unique:  false,
				Columns: []*schema.Column{SysRolesColumns[5]},
			},
			{
				Name:    "role_delete_by",
				Unique:  false,
				Columns: []*schema.Column{SysRolesColumns[6]},
			},
			{
				Name:    "role_name_delete_time",
				Unique:  true,
				Columns: []*schema.Column{SysRolesColumns[7], SysRolesColumns[5]},
			},
		},
	}
	// SysRolePermissionColumns holds the columns for the "sys_role_permission" table.
	SysRolePermissionColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeUint64, Nullable: true},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "update_by", Type: field.TypeUint64, Nullable: true},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "delete_by", Type: field.TypeUint64, Nullable: true},
		{Name: "permission_id", Type: field.TypeUint64},
		{Name: "role_id", Type: field.TypeUint64},
	}
	// SysRolePermissionTable holds the schema information for the "sys_role_permission" table.
	SysRolePermissionTable = &schema.Table{
		Name:       "sys_role_permission",
		Columns:    SysRolePermissionColumns,
		PrimaryKey: []*schema.Column{SysRolePermissionColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sys_role_permission_sys_permissions_role_permissions",
				Columns:    []*schema.Column{SysRolePermissionColumns[7]},
				RefColumns: []*schema.Column{SysPermissionsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "sys_role_permission_sys_roles_role_permissions",
				Columns:    []*schema.Column{SysRolePermissionColumns[8]},
				RefColumns: []*schema.Column{SysRolesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "rolepermission_delete_time",
				Unique:  false,
				Columns: []*schema.Column{SysRolePermissionColumns[5]},
			},
			{
				Name:    "rolepermission_delete_by",
				Unique:  false,
				Columns: []*schema.Column{SysRolePermissionColumns[6]},
			},
			{
				Name:    "rolepermission_role_id_permission_id_delete_time",
				Unique:  true,
				Columns: []*schema.Column{SysRolePermissionColumns[8], SysRolePermissionColumns[7], SysRolePermissionColumns[5]},
			},
			{
				Name:    "rolepermission_role_id",
				Unique:  false,
				Columns: []*schema.Column{SysRolePermissionColumns[8]},
			},
			{
				Name:    "rolepermission_permission_id",
				Unique:  false,
				Columns: []*schema.Column{SysRolePermissionColumns[7]},
			},
		},
	}
	// ScansColumns holds the columns for the "scans" table.
	ScansColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeUint64, Nullable: true},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "update_by", Type: field.TypeUint64, Nullable: true},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "delete_by", Type: field.TypeUint64, Nullable: true},
		{Name: "content", Type: field.TypeString, Size: 255},
		{Name: "length", Type: field.TypeInt},
		{Name: "success", Type: field.TypeBool},
		{Name: "scan_attachment", Type: field.TypeUint64, Nullable: true},
	}
	// ScansTable holds the schema information for the "scans" table.
	ScansTable = &schema.Table{
		Name:       "scans",
		Columns:    ScansColumns,
		PrimaryKey: []*schema.Column{ScansColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "scans_sys_attachments_attachment",
				Columns:    []*schema.Column{ScansColumns[10]},
				RefColumns: []*schema.Column{SysAttachmentsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "scan_delete_time",
				Unique:  false,
				Columns: []*schema.Column{ScansColumns[5]},
			},
			{
				Name:    "scan_delete_by",
				Unique:  false,
				Columns: []*schema.Column{ScansColumns[6]},
			},
		},
	}
	// SysScopesColumns holds the columns for the "sys_scopes" table.
	SysScopesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeUint64, Nullable: true},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "update_by", Type: field.TypeUint64, Nullable: true},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "delete_by", Type: field.TypeUint64, Nullable: true},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"menu", "page", "button"}, Default: "menu"},
		{Name: "icon", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "action", Type: field.TypeString, Nullable: true},
		{Name: "path", Type: field.TypeString, Nullable: true},
		{Name: "component", Type: field.TypeString, Nullable: true},
		{Name: "redirect", Type: field.TypeString, Nullable: true},
		{Name: "order", Type: field.TypeInt, Default: 0},
		{Name: "hidden", Type: field.TypeBool, Default: false},
		{Name: "disabled", Type: field.TypeBool, Default: false},
		{Name: "permission_scope", Type: field.TypeUint64, Unique: true, Nullable: true},
		{Name: "parent_id", Type: field.TypeUint64, Nullable: true},
	}
	// SysScopesTable holds the schema information for the "sys_scopes" table.
	SysScopesTable = &schema.Table{
		Name:       "sys_scopes",
		Columns:    SysScopesColumns,
		PrimaryKey: []*schema.Column{SysScopesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sys_scopes_sys_permissions_scope",
				Columns:    []*schema.Column{SysScopesColumns[18]},
				RefColumns: []*schema.Column{SysPermissionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "sys_scopes_sys_scopes_children",
				Columns:    []*schema.Column{SysScopesColumns[19]},
				RefColumns: []*schema.Column{SysScopesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "scope_delete_time",
				Unique:  false,
				Columns: []*schema.Column{SysScopesColumns[5]},
			},
			{
				Name:    "scope_delete_by",
				Unique:  false,
				Columns: []*schema.Column{SysScopesColumns[6]},
			},
			{
				Name:    "scope_parent_id_order",
				Unique:  false,
				Columns: []*schema.Column{SysScopesColumns[19], SysScopesColumns[15]},
			},
			{
				Name:    "scope_type_hidden_disabled",
				Unique:  false,
				Columns: []*schema.Column{SysScopesColumns[8], SysScopesColumns[16], SysScopesColumns[17]},
			},
			{
				Name:    "scope_type_parent_id",
				Unique:  false,
				Columns: []*schema.Column{SysScopesColumns[8], SysScopesColumns[19]},
			},
			{
				Name:    "scope_name_delete_time",
				Unique:  true,
				Columns: []*schema.Column{SysScopesColumns[7], SysScopesColumns[5]},
			},
		},
	}
	// SysStationsColumns holds the columns for the "sys_stations" table.
	SysStationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeUint64, Nullable: true},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "update_by", Type: field.TypeUint64, Nullable: true},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "delete_by", Type: field.TypeUint64, Nullable: true},
		{Name: "name", Type: field.TypeString, Size: 32},
		{Name: "area_id", Type: field.TypeUint64},
	}
	// SysStationsTable holds the schema information for the "sys_stations" table.
	SysStationsTable = &schema.Table{
		Name:       "sys_stations",
		Columns:    SysStationsColumns,
		PrimaryKey: []*schema.Column{SysStationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sys_stations_sys_areas_area",
				Columns:    []*schema.Column{SysStationsColumns[8]},
				RefColumns: []*schema.Column{SysAreasColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "station_delete_time",
				Unique:  false,
				Columns: []*schema.Column{SysStationsColumns[5]},
			},
			{
				Name:    "station_delete_by",
				Unique:  false,
				Columns: []*schema.Column{SysStationsColumns[6]},
			},
			{
				Name:    "station_name_area_id_delete_time",
				Unique:  true,
				Columns: []*schema.Column{SysStationsColumns[7], SysStationsColumns[8], SysStationsColumns[5]},
			},
			{
				Name:    "station_area_id",
				Unique:  false,
				Columns: []*schema.Column{SysStationsColumns[8]},
			},
		},
	}
	// SysSubwaysColumns holds the columns for the "sys_subways" table.
	SysSubwaysColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeUint64, Nullable: true},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "update_by", Type: field.TypeUint64, Nullable: true},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "delete_by", Type: field.TypeUint64, Nullable: true},
		{Name: "name", Type: field.TypeString, Size: 32},
		{Name: "color", Type: field.TypeString, Nullable: true, Size: 20},
		{Name: "area_id", Type: field.TypeUint64},
	}
	// SysSubwaysTable holds the schema information for the "sys_subways" table.
	SysSubwaysTable = &schema.Table{
		Name:       "sys_subways",
		Columns:    SysSubwaysColumns,
		PrimaryKey: []*schema.Column{SysSubwaysColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sys_subways_sys_areas_area",
				Columns:    []*schema.Column{SysSubwaysColumns[9]},
				RefColumns: []*schema.Column{SysAreasColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "subway_delete_time",
				Unique:  false,
				Columns: []*schema.Column{SysSubwaysColumns[5]},
			},
			{
				Name:    "subway_delete_by",
				Unique:  false,
				Columns: []*schema.Column{SysSubwaysColumns[6]},
			},
			{
				Name:    "subway_name_area_id_delete_time",
				Unique:  true,
				Columns: []*schema.Column{SysSubwaysColumns[7], SysSubwaysColumns[9], SysSubwaysColumns[5]},
			},
			{
				Name:    "subway_area_id",
				Unique:  false,
				Columns: []*schema.Column{SysSubwaysColumns[9]},
			},
		},
	}
	// SysSubwayStationsColumns holds the columns for the "sys_subway_stations" table.
	SysSubwayStationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeUint64, Nullable: true},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "update_by", Type: field.TypeUint64, Nullable: true},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "delete_by", Type: field.TypeUint64, Nullable: true},
		{Name: "sequence", Type: field.TypeInt, Nullable: true},
		{Name: "station_subway_stations", Type: field.TypeUint64, Nullable: true},
		{Name: "subway_subway_stations", Type: field.TypeUint64, Nullable: true},
		{Name: "station_id", Type: field.TypeUint64},
		{Name: "subway_id", Type: field.TypeUint64},
	}
	// SysSubwayStationsTable holds the schema information for the "sys_subway_stations" table.
	SysSubwayStationsTable = &schema.Table{
		Name:       "sys_subway_stations",
		Columns:    SysSubwayStationsColumns,
		PrimaryKey: []*schema.Column{SysSubwayStationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sys_subway_stations_sys_stations_subway_stations",
				Columns:    []*schema.Column{SysSubwayStationsColumns[8]},
				RefColumns: []*schema.Column{SysStationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "sys_subway_stations_sys_subways_subway_stations",
				Columns:    []*schema.Column{SysSubwayStationsColumns[9]},
				RefColumns: []*schema.Column{SysSubwaysColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "sys_subway_stations_sys_stations_station",
				Columns:    []*schema.Column{SysSubwayStationsColumns[10]},
				RefColumns: []*schema.Column{SysStationsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "sys_subway_stations_sys_subways_subway",
				Columns:    []*schema.Column{SysSubwayStationsColumns[11]},
				RefColumns: []*schema.Column{SysSubwaysColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "subwaystation_delete_time",
				Unique:  false,
				Columns: []*schema.Column{SysSubwayStationsColumns[5]},
			},
			{
				Name:    "subwaystation_delete_by",
				Unique:  false,
				Columns: []*schema.Column{SysSubwayStationsColumns[6]},
			},
			{
				Name:    "subwaystation_station_id_subway_id_delete_time",
				Unique:  true,
				Columns: []*schema.Column{SysSubwayStationsColumns[10], SysSubwayStationsColumns[11], SysSubwayStationsColumns[5]},
			},
			{
				Name:    "subwaystation_subway_id_sequence",
				Unique:  false,
				Columns: []*schema.Column{SysSubwayStationsColumns[11], SysSubwayStationsColumns[7]},
			},
		},
	}
	// SysSystemMonitorColumns holds the columns for the "sys_system_monitor" table.
	SysSystemMonitorColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeUint64, Nullable: true},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "update_by", Type: field.TypeUint64, Nullable: true},
		{Name: "cpu_usage_percent", Type: field.TypeFloat64},
		{Name: "cpu_cores", Type: field.TypeInt},
		{Name: "memory_total", Type: field.TypeUint64},
		{Name: "memory_used", Type: field.TypeUint64},
		{Name: "memory_free", Type: field.TypeUint64},
		{Name: "memory_usage_percent", Type: field.TypeFloat64},
		{Name: "disk_total", Type: field.TypeUint64},
		{Name: "disk_used", Type: field.TypeUint64},
		{Name: "disk_free", Type: field.TypeUint64},
		{Name: "disk_usage_percent", Type: field.TypeFloat64},
		{Name: "network_bytes_sent", Type: field.TypeUint64, Default: 0},
		{Name: "network_bytes_recv", Type: field.TypeUint64, Default: 0},
		{Name: "os", Type: field.TypeString, Size: 50},
		{Name: "platform", Type: field.TypeString, Size: 50},
		{Name: "platform_version", Type: field.TypeString, Size: 100},
		{Name: "hostname", Type: field.TypeString, Size: 255},
		{Name: "goroutines_count", Type: field.TypeInt},
		{Name: "heap_alloc", Type: field.TypeUint64},
		{Name: "heap_sys", Type: field.TypeUint64},
		{Name: "gc_count", Type: field.TypeUint32},
		{Name: "load_avg_1", Type: field.TypeFloat64, Nullable: true},
		{Name: "load_avg_5", Type: field.TypeFloat64, Nullable: true},
		{Name: "load_avg_15", Type: field.TypeFloat64, Nullable: true},
		{Name: "uptime", Type: field.TypeUint64},
		{Name: "recorded_at", Type: field.TypeTime},
	}
	// SysSystemMonitorTable holds the schema information for the "sys_system_monitor" table.
	SysSystemMonitorTable = &schema.Table{
		Name:       "sys_system_monitor",
		Columns:    SysSystemMonitorColumns,
		PrimaryKey: []*schema.Column{SysSystemMonitorColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "systemmonitor_recorded_at",
				Unique:  false,
				Columns: []*schema.Column{SysSystemMonitorColumns[29]},
				Annotation: &entsql.IndexAnnotation{
					Desc: true,
				},
			},
			{
				Name:    "systemmonitor_create_time",
				Unique:  false,
				Columns: []*schema.Column{SysSystemMonitorColumns[1]},
				Annotation: &entsql.IndexAnnotation{
					Desc: true,
				},
			},
		},
	}
	// SysUsersColumns holds the columns for the "sys_users" table.
	SysUsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeUint64, Nullable: true},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "update_by", Type: field.TypeUint64, Nullable: true},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "delete_by", Type: field.TypeUint64, Nullable: true},
		{Name: "name", Type: field.TypeString, Size: 100},
		{Name: "age", Type: field.TypeInt, Nullable: true},
		{Name: "sex", Type: field.TypeEnum, Enums: []string{"male", "female", "other"}, Default: "other"},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"active", "inactive", "banned"}, Default: "active"},
		{Name: "avatar_id", Type: field.TypeUint64, Nullable: true},
	}
	// SysUsersTable holds the schema information for the "sys_users" table.
	SysUsersTable = &schema.Table{
		Name:       "sys_users",
		Columns:    SysUsersColumns,
		PrimaryKey: []*schema.Column{SysUsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sys_users_sys_attachments_avatar",
				Columns:    []*schema.Column{SysUsersColumns[11]},
				RefColumns: []*schema.Column{SysAttachmentsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "user_delete_time",
				Unique:  false,
				Columns: []*schema.Column{SysUsersColumns[5]},
			},
			{
				Name:    "user_delete_by",
				Unique:  false,
				Columns: []*schema.Column{SysUsersColumns[6]},
			},
		},
	}
	// SysUserRoleColumns holds the columns for the "sys_user_role" table.
	SysUserRoleColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeUint64, Nullable: true},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "update_by", Type: field.TypeUint64, Nullable: true},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "delete_by", Type: field.TypeUint64, Nullable: true},
		{Name: "role_id", Type: field.TypeUint64},
		{Name: "user_id", Type: field.TypeUint64},
	}
	// SysUserRoleTable holds the schema information for the "sys_user_role" table.
	SysUserRoleTable = &schema.Table{
		Name:       "sys_user_role",
		Columns:    SysUserRoleColumns,
		PrimaryKey: []*schema.Column{SysUserRoleColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sys_user_role_sys_roles_user_roles",
				Columns:    []*schema.Column{SysUserRoleColumns[7]},
				RefColumns: []*schema.Column{SysRolesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "sys_user_role_sys_users_user_roles",
				Columns:    []*schema.Column{SysUserRoleColumns[8]},
				RefColumns: []*schema.Column{SysUsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "userrole_delete_time",
				Unique:  false,
				Columns: []*schema.Column{SysUserRoleColumns[5]},
			},
			{
				Name:    "userrole_delete_by",
				Unique:  false,
				Columns: []*schema.Column{SysUserRoleColumns[6]},
			},
			{
				Name:    "userrole_user_id_role_id_delete_time",
				Unique:  true,
				Columns: []*schema.Column{SysUserRoleColumns[8], SysUserRoleColumns[7], SysUserRoleColumns[5]},
			},
			{
				Name:    "userrole_user_id",
				Unique:  false,
				Columns: []*schema.Column{SysUserRoleColumns[8]},
			},
			{
				Name:    "userrole_role_id",
				Unique:  false,
				Columns: []*schema.Column{SysUserRoleColumns[7]},
			},
		},
	}
	// SysVerifyCodesColumns holds the columns for the "sys_verify_codes" table.
	SysVerifyCodesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeUint64, Nullable: true},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "update_by", Type: field.TypeUint64, Nullable: true},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "delete_by", Type: field.TypeUint64, Nullable: true},
		{Name: "code", Type: field.TypeString, Size: 10},
		{Name: "identifier", Type: field.TypeString, Size: 255},
		{Name: "sender_type", Type: field.TypeEnum, Enums: []string{"email", "phone", "sms"}},
		{Name: "send_for", Type: field.TypeString, Size: 50},
		{Name: "expires_at", Type: field.TypeTime},
		{Name: "used_at", Type: field.TypeTime, Nullable: true},
		{Name: "send_success", Type: field.TypeBool, Default: false},
		{Name: "send_at", Type: field.TypeTime, Nullable: true},
		{Name: "client_id", Type: field.TypeUint64, Nullable: true},
	}
	// SysVerifyCodesTable holds the schema information for the "sys_verify_codes" table.
	SysVerifyCodesTable = &schema.Table{
		Name:       "sys_verify_codes",
		Columns:    SysVerifyCodesColumns,
		PrimaryKey: []*schema.Column{SysVerifyCodesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "verifycode_delete_time",
				Unique:  false,
				Columns: []*schema.Column{SysVerifyCodesColumns[5]},
			},
			{
				Name:    "verifycode_delete_by",
				Unique:  false,
				Columns: []*schema.Column{SysVerifyCodesColumns[6]},
			},
			{
				Name:    "verifycode_identifier_sender_type_send_for_delete_time",
				Unique:  true,
				Columns: []*schema.Column{SysVerifyCodesColumns[8], SysVerifyCodesColumns[9], SysVerifyCodesColumns[10], SysVerifyCodesColumns[5]},
			},
		},
	}
	// WorkflowApplicationsColumns holds the columns for the "workflow_applications" table.
	WorkflowApplicationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeUint64, Nullable: true},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "update_by", Type: field.TypeUint64, Nullable: true},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "delete_by", Type: field.TypeUint64, Nullable: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "start_node_id", Type: field.TypeUint64, Nullable: true},
		{Name: "client_secret", Type: field.TypeString},
		{Name: "variables", Type: field.TypeJSON, Nullable: true},
		{Name: "version", Type: field.TypeUint, Default: 1},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"draft", "published", "archived"}, Default: "draft"},
	}
	// WorkflowApplicationsTable holds the schema information for the "workflow_applications" table.
	WorkflowApplicationsTable = &schema.Table{
		Name:       "workflow_applications",
		Columns:    WorkflowApplicationsColumns,
		PrimaryKey: []*schema.Column{WorkflowApplicationsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "workflowapplication_delete_time",
				Unique:  false,
				Columns: []*schema.Column{WorkflowApplicationsColumns[5]},
			},
			{
				Name:    "workflowapplication_delete_by",
				Unique:  false,
				Columns: []*schema.Column{WorkflowApplicationsColumns[6]},
			},
			{
				Name:    "workflowapplication_client_secret",
				Unique:  true,
				Columns: []*schema.Column{WorkflowApplicationsColumns[10]},
			},
			{
				Name:    "workflowapplication_status",
				Unique:  false,
				Columns: []*schema.Column{WorkflowApplicationsColumns[13]},
			},
		},
	}
	// WorkflowEdgesColumns holds the columns for the "workflow_edges" table.
	WorkflowEdgesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeUint64, Nullable: true},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "update_by", Type: field.TypeUint64, Nullable: true},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "delete_by", Type: field.TypeUint64, Nullable: true},
		{Name: "edge_key", Type: field.TypeString},
		{Name: "source_handle", Type: field.TypeString, Nullable: true},
		{Name: "target_handle", Type: field.TypeString, Nullable: true},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"default", "branch", "parallel"}, Default: "default"},
		{Name: "label", Type: field.TypeString, Nullable: true},
		{Name: "branch_name", Type: field.TypeString, Nullable: true},
		{Name: "animated", Type: field.TypeBool, Default: false},
		{Name: "style", Type: field.TypeJSON, Nullable: true},
		{Name: "data", Type: field.TypeJSON, Nullable: true},
		{Name: "application_id", Type: field.TypeUint64},
		{Name: "source_node_id", Type: field.TypeUint64},
		{Name: "target_node_id", Type: field.TypeUint64},
	}
	// WorkflowEdgesTable holds the schema information for the "workflow_edges" table.
	WorkflowEdgesTable = &schema.Table{
		Name:       "workflow_edges",
		Columns:    WorkflowEdgesColumns,
		PrimaryKey: []*schema.Column{WorkflowEdgesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "workflow_edges_workflow_applications_edges",
				Columns:    []*schema.Column{WorkflowEdgesColumns[16]},
				RefColumns: []*schema.Column{WorkflowApplicationsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "workflow_edges_workflow_nodes_outgoing_edges",
				Columns:    []*schema.Column{WorkflowEdgesColumns[17]},
				RefColumns: []*schema.Column{WorkflowNodesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "workflow_edges_workflow_nodes_incoming_edges",
				Columns:    []*schema.Column{WorkflowEdgesColumns[18]},
				RefColumns: []*schema.Column{WorkflowNodesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "workflowedge_delete_time",
				Unique:  false,
				Columns: []*schema.Column{WorkflowEdgesColumns[5]},
			},
			{
				Name:    "workflowedge_delete_by",
				Unique:  false,
				Columns: []*schema.Column{WorkflowEdgesColumns[6]},
			},
			{
				Name:    "workflowedge_application_id_edge_key",
				Unique:  true,
				Columns: []*schema.Column{WorkflowEdgesColumns[16], WorkflowEdgesColumns[7]},
			},
			{
				Name:    "workflowedge_source_node_id",
				Unique:  false,
				Columns: []*schema.Column{WorkflowEdgesColumns[17]},
			},
			{
				Name:    "workflowedge_target_node_id",
				Unique:  false,
				Columns: []*schema.Column{WorkflowEdgesColumns[18]},
			},
			{
				Name:    "workflowedge_type",
				Unique:  false,
				Columns: []*schema.Column{WorkflowEdgesColumns[10]},
			},
		},
	}
	// WorkflowExecutionsColumns holds the columns for the "workflow_executions" table.
	WorkflowExecutionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeUint64, Nullable: true},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "update_by", Type: field.TypeUint64, Nullable: true},
		{Name: "execution_id", Type: field.TypeString, Unique: true},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"pending", "running", "completed", "failed", "cancelled", "timeout"}, Default: "pending"},
		{Name: "input", Type: field.TypeJSON, Nullable: true},
		{Name: "output", Type: field.TypeJSON, Nullable: true},
		{Name: "context", Type: field.TypeJSON, Nullable: true},
		{Name: "started_at", Type: field.TypeTime, Nullable: true},
		{Name: "finished_at", Type: field.TypeTime, Nullable: true},
		{Name: "duration_ms", Type: field.TypeInt, Default: 0},
		{Name: "total_tokens", Type: field.TypeInt, Default: 0},
		{Name: "total_cost", Type: field.TypeFloat64, Default: 0},
		{Name: "error_message", Type: field.TypeString, Nullable: true},
		{Name: "error_stack", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "triggered_by", Type: field.TypeString, Nullable: true},
		{Name: "trigger_source", Type: field.TypeString, Nullable: true},
		{Name: "application_id", Type: field.TypeUint64},
	}
	// WorkflowExecutionsTable holds the schema information for the "workflow_executions" table.
	WorkflowExecutionsTable = &schema.Table{
		Name:       "workflow_executions",
		Columns:    WorkflowExecutionsColumns,
		PrimaryKey: []*schema.Column{WorkflowExecutionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "workflow_executions_workflow_applications_executions",
				Columns:    []*schema.Column{WorkflowExecutionsColumns[19]},
				RefColumns: []*schema.Column{WorkflowApplicationsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "workflowexecution_execution_id",
				Unique:  true,
				Columns: []*schema.Column{WorkflowExecutionsColumns[5]},
			},
			{
				Name:    "workflowexecution_application_id_status",
				Unique:  false,
				Columns: []*schema.Column{WorkflowExecutionsColumns[19], WorkflowExecutionsColumns[6]},
			},
			{
				Name:    "workflowexecution_started_at",
				Unique:  false,
				Columns: []*schema.Column{WorkflowExecutionsColumns[10]},
			},
			{
				Name:    "workflowexecution_triggered_by",
				Unique:  false,
				Columns: []*schema.Column{WorkflowExecutionsColumns[17]},
			},
		},
	}
	// WorkflowExecutionLogsColumns holds the columns for the "workflow_execution_logs" table.
	WorkflowExecutionLogsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeUint64, Nullable: true},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "update_by", Type: field.TypeUint64, Nullable: true},
		{Name: "execution_id", Type: field.TypeUint64},
		{Name: "node_execution_id", Type: field.TypeUint64, Nullable: true},
		{Name: "level", Type: field.TypeEnum, Enums: []string{"debug", "info", "warn", "error"}, Default: "info"},
		{Name: "message", Type: field.TypeString, Size: 2147483647},
		{Name: "metadata", Type: field.TypeJSON, Nullable: true},
		{Name: "logged_at", Type: field.TypeTime},
	}
	// WorkflowExecutionLogsTable holds the schema information for the "workflow_execution_logs" table.
	WorkflowExecutionLogsTable = &schema.Table{
		Name:       "workflow_execution_logs",
		Columns:    WorkflowExecutionLogsColumns,
		PrimaryKey: []*schema.Column{WorkflowExecutionLogsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "workflowexecutionlog_execution_id_logged_at",
				Unique:  false,
				Columns: []*schema.Column{WorkflowExecutionLogsColumns[5], WorkflowExecutionLogsColumns[10]},
			},
			{
				Name:    "workflowexecutionlog_node_execution_id",
				Unique:  false,
				Columns: []*schema.Column{WorkflowExecutionLogsColumns[6]},
			},
			{
				Name:    "workflowexecutionlog_level",
				Unique:  false,
				Columns: []*schema.Column{WorkflowExecutionLogsColumns[7]},
			},
		},
	}
	// WorkflowNodesColumns holds the columns for the "workflow_nodes" table.
	WorkflowNodesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeUint64, Nullable: true},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "update_by", Type: field.TypeUint64, Nullable: true},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "delete_by", Type: field.TypeUint64, Nullable: true},
		{Name: "name", Type: field.TypeString},
		{Name: "node_key", Type: field.TypeString},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"user_input", "todo_task_generator", "condition_checker", "api_caller", "data_processor", "while_loop", "end_node", "parallel_executor", "llm_caller"}},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "prompt", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "config", Type: field.TypeJSON},
		{Name: "processor_language", Type: field.TypeString, Nullable: true},
		{Name: "processor_code", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "next_node_id", Type: field.TypeUint64, Nullable: true},
		{Name: "parent_node_id", Type: field.TypeUint64, Nullable: true},
		{Name: "branch_nodes", Type: field.TypeJSON, Nullable: true},
		{Name: "parallel_config", Type: field.TypeJSON, Nullable: true},
		{Name: "api_config", Type: field.TypeJSON, Nullable: true},
		{Name: "async", Type: field.TypeBool, Default: false},
		{Name: "timeout", Type: field.TypeInt, Default: 30},
		{Name: "retry_count", Type: field.TypeInt, Default: 0},
		{Name: "position_x", Type: field.TypeFloat64, Default: 0},
		{Name: "position_y", Type: field.TypeFloat64, Default: 0},
		{Name: "color", Type: field.TypeString, Nullable: true},
		{Name: "application_id", Type: field.TypeUint64},
	}
	// WorkflowNodesTable holds the schema information for the "workflow_nodes" table.
	WorkflowNodesTable = &schema.Table{
		Name:       "workflow_nodes",
		Columns:    WorkflowNodesColumns,
		PrimaryKey: []*schema.Column{WorkflowNodesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "workflow_nodes_workflow_applications_nodes",
				Columns:    []*schema.Column{WorkflowNodesColumns[26]},
				RefColumns: []*schema.Column{WorkflowApplicationsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "workflownode_delete_time",
				Unique:  false,
				Columns: []*schema.Column{WorkflowNodesColumns[5]},
			},
			{
				Name:    "workflownode_delete_by",
				Unique:  false,
				Columns: []*schema.Column{WorkflowNodesColumns[6]},
			},
			{
				Name:    "workflownode_application_id_node_key",
				Unique:  true,
				Columns: []*schema.Column{WorkflowNodesColumns[26], WorkflowNodesColumns[8]},
			},
			{
				Name:    "workflownode_next_node_id",
				Unique:  false,
				Columns: []*schema.Column{WorkflowNodesColumns[15]},
			},
			{
				Name:    "workflownode_parent_node_id",
				Unique:  false,
				Columns: []*schema.Column{WorkflowNodesColumns[16]},
			},
			{
				Name:    "workflownode_type",
				Unique:  false,
				Columns: []*schema.Column{WorkflowNodesColumns[9]},
			},
		},
	}
	// WorkflowNodeExecutionsColumns holds the columns for the "workflow_node_executions" table.
	WorkflowNodeExecutionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeUint64, Nullable: true},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "update_by", Type: field.TypeUint64, Nullable: true},
		{Name: "node_name", Type: field.TypeString},
		{Name: "node_type", Type: field.TypeString},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"pending", "running", "completed", "failed", "skipped", "timeout"}, Default: "pending"},
		{Name: "input", Type: field.TypeJSON, Nullable: true},
		{Name: "output", Type: field.TypeJSON, Nullable: true},
		{Name: "extra", Type: field.TypeJSON, Nullable: true},
		{Name: "started_at", Type: field.TypeTime, Nullable: true},
		{Name: "finished_at", Type: field.TypeTime, Nullable: true},
		{Name: "duration_ms", Type: field.TypeInt, Default: 0},
		{Name: "prompt_tokens", Type: field.TypeInt, Default: 0},
		{Name: "completion_tokens", Type: field.TypeInt, Default: 0},
		{Name: "total_tokens", Type: field.TypeInt, Default: 0},
		{Name: "cost", Type: field.TypeFloat64, Default: 0},
		{Name: "model", Type: field.TypeString, Nullable: true},
		{Name: "error_message", Type: field.TypeString, Nullable: true},
		{Name: "error_stack", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "retry_count", Type: field.TypeInt, Default: 0},
		{Name: "is_async", Type: field.TypeBool, Default: false},
		{Name: "parent_execution_id", Type: field.TypeUint64, Nullable: true},
		{Name: "execution_id", Type: field.TypeUint64},
		{Name: "node_id", Type: field.TypeUint64},
	}
	// WorkflowNodeExecutionsTable holds the schema information for the "workflow_node_executions" table.
	WorkflowNodeExecutionsTable = &schema.Table{
		Name:       "workflow_node_executions",
		Columns:    WorkflowNodeExecutionsColumns,
		PrimaryKey: []*schema.Column{WorkflowNodeExecutionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "workflow_node_executions_workflow_executions_node_executions",
				Columns:    []*schema.Column{WorkflowNodeExecutionsColumns[24]},
				RefColumns: []*schema.Column{WorkflowExecutionsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "workflow_node_executions_workflow_nodes_executions",
				Columns:    []*schema.Column{WorkflowNodeExecutionsColumns[25]},
				RefColumns: []*schema.Column{WorkflowNodesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "workflownodeexecution_execution_id_node_id",
				Unique:  false,
				Columns: []*schema.Column{WorkflowNodeExecutionsColumns[24], WorkflowNodeExecutionsColumns[25]},
			},
			{
				Name:    "workflownodeexecution_execution_id_status",
				Unique:  false,
				Columns: []*schema.Column{WorkflowNodeExecutionsColumns[24], WorkflowNodeExecutionsColumns[7]},
			},
			{
				Name:    "workflownodeexecution_started_at",
				Unique:  false,
				Columns: []*schema.Column{WorkflowNodeExecutionsColumns[11]},
			},
			{
				Name:    "workflownodeexecution_parent_execution_id",
				Unique:  false,
				Columns: []*schema.Column{WorkflowNodeExecutionsColumns[23]},
			},
		},
	}
	// WorkflowVersionsColumns holds the columns for the "workflow_versions" table.
	WorkflowVersionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeUint64, Nullable: true},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "update_by", Type: field.TypeUint64, Nullable: true},
		{Name: "application_id", Type: field.TypeUint64},
		{Name: "version", Type: field.TypeUint},
		{Name: "snapshot", Type: field.TypeJSON},
		{Name: "change_log", Type: field.TypeString, Nullable: true},
	}
	// WorkflowVersionsTable holds the schema information for the "workflow_versions" table.
	WorkflowVersionsTable = &schema.Table{
		Name:       "workflow_versions",
		Columns:    WorkflowVersionsColumns,
		PrimaryKey: []*schema.Column{WorkflowVersionsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "workflowversion_application_id_version",
				Unique:  true,
				Columns: []*schema.Column{WorkflowVersionsColumns[5], WorkflowVersionsColumns[6]},
			},
		},
	}
	// APIAuthPermissionsColumns holds the columns for the "api_auth_permissions" table.
	APIAuthPermissionsColumns = []*schema.Column{
		{Name: "api_auth_id", Type: field.TypeUint64},
		{Name: "permission_id", Type: field.TypeUint64},
	}
	// APIAuthPermissionsTable holds the schema information for the "api_auth_permissions" table.
	APIAuthPermissionsTable = &schema.Table{
		Name:       "api_auth_permissions",
		Columns:    APIAuthPermissionsColumns,
		PrimaryKey: []*schema.Column{APIAuthPermissionsColumns[0], APIAuthPermissionsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "api_auth_permissions_api_auth_id",
				Columns:    []*schema.Column{APIAuthPermissionsColumns[0]},
				RefColumns: []*schema.Column{SysAPIAuthColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "api_auth_permissions_permission_id",
				Columns:    []*schema.Column{APIAuthPermissionsColumns[1]},
				RefColumns: []*schema.Column{SysPermissionsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ClientDeviceRolesColumns holds the columns for the "client_device_roles" table.
	ClientDeviceRolesColumns = []*schema.Column{
		{Name: "client_device_id", Type: field.TypeUint64},
		{Name: "role_id", Type: field.TypeUint64},
	}
	// ClientDeviceRolesTable holds the schema information for the "client_device_roles" table.
	ClientDeviceRolesTable = &schema.Table{
		Name:       "client_device_roles",
		Columns:    ClientDeviceRolesColumns,
		PrimaryKey: []*schema.Column{ClientDeviceRolesColumns[0], ClientDeviceRolesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "client_device_roles_client_device_id",
				Columns:    []*schema.Column{ClientDeviceRolesColumns[0]},
				RefColumns: []*schema.Column{SysClientsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "client_device_roles_role_id",
				Columns:    []*schema.Column{ClientDeviceRolesColumns[1]},
				RefColumns: []*schema.Column{SysRolesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// RoleInheritsFromColumns holds the columns for the "role_inherits_from" table.
	RoleInheritsFromColumns = []*schema.Column{
		{Name: "role_id", Type: field.TypeUint64},
		{Name: "inherited_by_id", Type: field.TypeUint64},
	}
	// RoleInheritsFromTable holds the schema information for the "role_inherits_from" table.
	RoleInheritsFromTable = &schema.Table{
		Name:       "role_inherits_from",
		Columns:    RoleInheritsFromColumns,
		PrimaryKey: []*schema.Column{RoleInheritsFromColumns[0], RoleInheritsFromColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "role_inherits_from_role_id",
				Columns:    []*schema.Column{RoleInheritsFromColumns[0]},
				RefColumns: []*schema.Column{SysRolesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "role_inherits_from_inherited_by_id",
				Columns:    []*schema.Column{RoleInheritsFromColumns[1]},
				RefColumns: []*schema.Column{SysRolesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		SysAPIAuthTable,
		SysAddressesTable,
		SysAreasTable,
		SysAttachmentsTable,
		SysClientsTable,
		SysCredentialsTable,
		LoggingsTable,
		SysLoginRecordsTable,
		OauthApplicationsTable,
		OauthAuthorizationCodesTable,
		OauthProvidersTable,
		OauthStatesTable,
		OauthTokensTable,
		OauthUsersTable,
		OauthUserAuthorizationsTable,
		SysPermissionsTable,
		SysRolesTable,
		SysRolePermissionTable,
		ScansTable,
		SysScopesTable,
		SysStationsTable,
		SysSubwaysTable,
		SysSubwayStationsTable,
		SysSystemMonitorTable,
		SysUsersTable,
		SysUserRoleTable,
		SysVerifyCodesTable,
		WorkflowApplicationsTable,
		WorkflowEdgesTable,
		WorkflowExecutionsTable,
		WorkflowExecutionLogsTable,
		WorkflowNodesTable,
		WorkflowNodeExecutionsTable,
		WorkflowVersionsTable,
		APIAuthPermissionsTable,
		ClientDeviceRolesTable,
		RoleInheritsFromTable,
	}
)

func init() {
	SysAPIAuthTable.Annotation = &entsql.Annotation{
		Table: "sys_api_auth",
	}
	SysAddressesTable.ForeignKeys[0].RefTable = SysAreasTable
	SysAddressesTable.Annotation = &entsql.Annotation{
		Table: "sys_addresses",
	}
	SysAreasTable.ForeignKeys[0].RefTable = SysAreasTable
	SysAreasTable.Annotation = &entsql.Annotation{
		Table: "sys_areas",
	}
	SysAttachmentsTable.Annotation = &entsql.Annotation{
		Table: "sys_attachments",
	}
	SysClientsTable.Annotation = &entsql.Annotation{
		Table: "sys_clients",
	}
	SysCredentialsTable.ForeignKeys[0].RefTable = SysUsersTable
	SysCredentialsTable.Annotation = &entsql.Annotation{
		Table: "sys_credentials",
	}
	SysLoginRecordsTable.ForeignKeys[0].RefTable = SysUsersTable
	SysLoginRecordsTable.Annotation = &entsql.Annotation{
		Table: "sys_login_records",
	}
	OauthApplicationsTable.Annotation = &entsql.Annotation{
		Table: "oauth_applications",
	}
	OauthAuthorizationCodesTable.ForeignKeys[0].RefTable = OauthApplicationsTable
	OauthAuthorizationCodesTable.ForeignKeys[1].RefTable = SysUsersTable
	OauthAuthorizationCodesTable.ForeignKeys[2].RefTable = OauthUserAuthorizationsTable
	OauthAuthorizationCodesTable.Annotation = &entsql.Annotation{
		Table: "oauth_authorization_codes",
	}
	OauthProvidersTable.Annotation = &entsql.Annotation{
		Table: "oauth_providers",
	}
	OauthStatesTable.ForeignKeys[0].RefTable = OauthProvidersTable
	OauthStatesTable.ForeignKeys[1].RefTable = SysUsersTable
	OauthStatesTable.Annotation = &entsql.Annotation{
		Table: "oauth_states",
	}
	OauthTokensTable.ForeignKeys[0].RefTable = OauthApplicationsTable
	OauthTokensTable.ForeignKeys[1].RefTable = OauthAuthorizationCodesTable
	OauthTokensTable.ForeignKeys[2].RefTable = SysUsersTable
	OauthTokensTable.ForeignKeys[3].RefTable = OauthUserAuthorizationsTable
	OauthTokensTable.Annotation = &entsql.Annotation{
		Table: "oauth_tokens",
	}
	OauthUsersTable.ForeignKeys[0].RefTable = OauthProvidersTable
	OauthUsersTable.ForeignKeys[1].RefTable = OauthStatesTable
	OauthUsersTable.ForeignKeys[2].RefTable = SysUsersTable
	OauthUsersTable.Annotation = &entsql.Annotation{
		Table: "oauth_users",
	}
	OauthUserAuthorizationsTable.ForeignKeys[0].RefTable = OauthApplicationsTable
	OauthUserAuthorizationsTable.ForeignKeys[1].RefTable = SysUsersTable
	OauthUserAuthorizationsTable.ForeignKeys[2].RefTable = OauthApplicationsTable
	OauthUserAuthorizationsTable.Annotation = &entsql.Annotation{
		Table: "oauth_user_authorizations",
	}
	SysPermissionsTable.Annotation = &entsql.Annotation{
		Table: "sys_permissions",
	}
	SysRolesTable.Annotation = &entsql.Annotation{
		Table: "sys_roles",
	}
	SysRolePermissionTable.ForeignKeys[0].RefTable = SysPermissionsTable
	SysRolePermissionTable.ForeignKeys[1].RefTable = SysRolesTable
	SysRolePermissionTable.Annotation = &entsql.Annotation{
		Table: "sys_role_permission",
	}
	ScansTable.ForeignKeys[0].RefTable = SysAttachmentsTable
	SysScopesTable.ForeignKeys[0].RefTable = SysPermissionsTable
	SysScopesTable.ForeignKeys[1].RefTable = SysScopesTable
	SysScopesTable.Annotation = &entsql.Annotation{
		Table: "sys_scopes",
	}
	SysStationsTable.ForeignKeys[0].RefTable = SysAreasTable
	SysStationsTable.Annotation = &entsql.Annotation{
		Table: "sys_stations",
	}
	SysSubwaysTable.ForeignKeys[0].RefTable = SysAreasTable
	SysSubwaysTable.Annotation = &entsql.Annotation{
		Table: "sys_subways",
	}
	SysSubwayStationsTable.ForeignKeys[0].RefTable = SysStationsTable
	SysSubwayStationsTable.ForeignKeys[1].RefTable = SysSubwaysTable
	SysSubwayStationsTable.ForeignKeys[2].RefTable = SysStationsTable
	SysSubwayStationsTable.ForeignKeys[3].RefTable = SysSubwaysTable
	SysSubwayStationsTable.Annotation = &entsql.Annotation{
		Table: "sys_subway_stations",
	}
	SysSystemMonitorTable.Annotation = &entsql.Annotation{
		Table: "sys_system_monitor",
	}
	SysUsersTable.ForeignKeys[0].RefTable = SysAttachmentsTable
	SysUsersTable.Annotation = &entsql.Annotation{
		Table: "sys_users",
	}
	SysUserRoleTable.ForeignKeys[0].RefTable = SysRolesTable
	SysUserRoleTable.ForeignKeys[1].RefTable = SysUsersTable
	SysUserRoleTable.Annotation = &entsql.Annotation{
		Table: "sys_user_role",
	}
	SysVerifyCodesTable.Annotation = &entsql.Annotation{
		Table: "sys_verify_codes",
	}
	WorkflowApplicationsTable.Annotation = &entsql.Annotation{
		Table: "workflow_applications",
	}
	WorkflowEdgesTable.ForeignKeys[0].RefTable = WorkflowApplicationsTable
	WorkflowEdgesTable.ForeignKeys[1].RefTable = WorkflowNodesTable
	WorkflowEdgesTable.ForeignKeys[2].RefTable = WorkflowNodesTable
	WorkflowEdgesTable.Annotation = &entsql.Annotation{
		Table: "workflow_edges",
	}
	WorkflowExecutionsTable.ForeignKeys[0].RefTable = WorkflowApplicationsTable
	WorkflowExecutionsTable.Annotation = &entsql.Annotation{
		Table: "workflow_executions",
	}
	WorkflowExecutionLogsTable.Annotation = &entsql.Annotation{
		Table: "workflow_execution_logs",
	}
	WorkflowNodesTable.ForeignKeys[0].RefTable = WorkflowApplicationsTable
	WorkflowNodesTable.Annotation = &entsql.Annotation{
		Table: "workflow_nodes",
	}
	WorkflowNodeExecutionsTable.ForeignKeys[0].RefTable = WorkflowExecutionsTable
	WorkflowNodeExecutionsTable.ForeignKeys[1].RefTable = WorkflowNodesTable
	WorkflowNodeExecutionsTable.Annotation = &entsql.Annotation{
		Table: "workflow_node_executions",
	}
	WorkflowVersionsTable.Annotation = &entsql.Annotation{
		Table: "workflow_versions",
	}
	APIAuthPermissionsTable.ForeignKeys[0].RefTable = SysAPIAuthTable
	APIAuthPermissionsTable.ForeignKeys[1].RefTable = SysPermissionsTable
	ClientDeviceRolesTable.ForeignKeys[0].RefTable = SysClientsTable
	ClientDeviceRolesTable.ForeignKeys[1].RefTable = SysRolesTable
	RoleInheritsFromTable.ForeignKeys[0].RefTable = SysRolesTable
	RoleInheritsFromTable.ForeignKeys[1].RefTable = SysRolesTable
}
