// Code generated by ent, DO NOT EDIT.

package attachment

import (
	"go-backend/database/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id uint64) predicate.Attachment {
	return predicate.Attachment(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uint64) predicate.Attachment {
	return predicate.Attachment(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uint64) predicate.Attachment {
	return predicate.Attachment(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uint64) predicate.Attachment {
	return predicate.Attachment(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uint64) predicate.Attachment {
	return predicate.Attachment(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uint64) predicate.Attachment {
	return predicate.Attachment(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uint64) predicate.Attachment {
	return predicate.Attachment(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uint64) predicate.Attachment {
	return predicate.Attachment(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uint64) predicate.Attachment {
	return predicate.Attachment(sql.FieldLTE(FieldID, id))
}

// CreateTime applies equality check predicate on the "create_time" field. It's identical to CreateTimeEQ.
func CreateTime(v time.Time) predicate.Attachment {
	return predicate.Attachment(sql.FieldEQ(FieldCreateTime, v))
}

// CreateBy applies equality check predicate on the "create_by" field. It's identical to CreateByEQ.
func CreateBy(v int64) predicate.Attachment {
	return predicate.Attachment(sql.FieldEQ(FieldCreateBy, v))
}

// UpdateTime applies equality check predicate on the "update_time" field. It's identical to UpdateTimeEQ.
func UpdateTime(v time.Time) predicate.Attachment {
	return predicate.Attachment(sql.FieldEQ(FieldUpdateTime, v))
}

// UpdateBy applies equality check predicate on the "update_by" field. It's identical to UpdateByEQ.
func UpdateBy(v int64) predicate.Attachment {
	return predicate.Attachment(sql.FieldEQ(FieldUpdateBy, v))
}

// DeleteTime applies equality check predicate on the "delete_time" field. It's identical to DeleteTimeEQ.
func DeleteTime(v time.Time) predicate.Attachment {
	return predicate.Attachment(sql.FieldEQ(FieldDeleteTime, v))
}

// DeleteBy applies equality check predicate on the "delete_by" field. It's identical to DeleteByEQ.
func DeleteBy(v int64) predicate.Attachment {
	return predicate.Attachment(sql.FieldEQ(FieldDeleteBy, v))
}

// Filename applies equality check predicate on the "filename" field. It's identical to FilenameEQ.
func Filename(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldEQ(FieldFilename, v))
}

// Path applies equality check predicate on the "path" field. It's identical to PathEQ.
func Path(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldEQ(FieldPath, v))
}

// URL applies equality check predicate on the "url" field. It's identical to URLEQ.
func URL(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldEQ(FieldURL, v))
}

// ContentType applies equality check predicate on the "content_type" field. It's identical to ContentTypeEQ.
func ContentType(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldEQ(FieldContentType, v))
}

// Size applies equality check predicate on the "size" field. It's identical to SizeEQ.
func Size(v int64) predicate.Attachment {
	return predicate.Attachment(sql.FieldEQ(FieldSize, v))
}

// Etag applies equality check predicate on the "etag" field. It's identical to EtagEQ.
func Etag(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldEQ(FieldEtag, v))
}

// Bucket applies equality check predicate on the "bucket" field. It's identical to BucketEQ.
func Bucket(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldEQ(FieldBucket, v))
}

// StorageProvider applies equality check predicate on the "storage_provider" field. It's identical to StorageProviderEQ.
func StorageProvider(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldEQ(FieldStorageProvider, v))
}

// UploadSessionID applies equality check predicate on the "upload_session_id" field. It's identical to UploadSessionIDEQ.
func UploadSessionID(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldEQ(FieldUploadSessionID, v))
}

// Tag1 applies equality check predicate on the "tag1" field. It's identical to Tag1EQ.
func Tag1(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldEQ(FieldTag1, v))
}

// Tag2 applies equality check predicate on the "tag2" field. It's identical to Tag2EQ.
func Tag2(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldEQ(FieldTag2, v))
}

// Tag3 applies equality check predicate on the "tag3" field. It's identical to Tag3EQ.
func Tag3(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldEQ(FieldTag3, v))
}

// CreateTimeEQ applies the EQ predicate on the "create_time" field.
func CreateTimeEQ(v time.Time) predicate.Attachment {
	return predicate.Attachment(sql.FieldEQ(FieldCreateTime, v))
}

// CreateTimeNEQ applies the NEQ predicate on the "create_time" field.
func CreateTimeNEQ(v time.Time) predicate.Attachment {
	return predicate.Attachment(sql.FieldNEQ(FieldCreateTime, v))
}

// CreateTimeIn applies the In predicate on the "create_time" field.
func CreateTimeIn(vs ...time.Time) predicate.Attachment {
	return predicate.Attachment(sql.FieldIn(FieldCreateTime, vs...))
}

// CreateTimeNotIn applies the NotIn predicate on the "create_time" field.
func CreateTimeNotIn(vs ...time.Time) predicate.Attachment {
	return predicate.Attachment(sql.FieldNotIn(FieldCreateTime, vs...))
}

// CreateTimeGT applies the GT predicate on the "create_time" field.
func CreateTimeGT(v time.Time) predicate.Attachment {
	return predicate.Attachment(sql.FieldGT(FieldCreateTime, v))
}

// CreateTimeGTE applies the GTE predicate on the "create_time" field.
func CreateTimeGTE(v time.Time) predicate.Attachment {
	return predicate.Attachment(sql.FieldGTE(FieldCreateTime, v))
}

// CreateTimeLT applies the LT predicate on the "create_time" field.
func CreateTimeLT(v time.Time) predicate.Attachment {
	return predicate.Attachment(sql.FieldLT(FieldCreateTime, v))
}

// CreateTimeLTE applies the LTE predicate on the "create_time" field.
func CreateTimeLTE(v time.Time) predicate.Attachment {
	return predicate.Attachment(sql.FieldLTE(FieldCreateTime, v))
}

// CreateByEQ applies the EQ predicate on the "create_by" field.
func CreateByEQ(v int64) predicate.Attachment {
	return predicate.Attachment(sql.FieldEQ(FieldCreateBy, v))
}

// CreateByNEQ applies the NEQ predicate on the "create_by" field.
func CreateByNEQ(v int64) predicate.Attachment {
	return predicate.Attachment(sql.FieldNEQ(FieldCreateBy, v))
}

// CreateByIn applies the In predicate on the "create_by" field.
func CreateByIn(vs ...int64) predicate.Attachment {
	return predicate.Attachment(sql.FieldIn(FieldCreateBy, vs...))
}

// CreateByNotIn applies the NotIn predicate on the "create_by" field.
func CreateByNotIn(vs ...int64) predicate.Attachment {
	return predicate.Attachment(sql.FieldNotIn(FieldCreateBy, vs...))
}

// CreateByGT applies the GT predicate on the "create_by" field.
func CreateByGT(v int64) predicate.Attachment {
	return predicate.Attachment(sql.FieldGT(FieldCreateBy, v))
}

// CreateByGTE applies the GTE predicate on the "create_by" field.
func CreateByGTE(v int64) predicate.Attachment {
	return predicate.Attachment(sql.FieldGTE(FieldCreateBy, v))
}

// CreateByLT applies the LT predicate on the "create_by" field.
func CreateByLT(v int64) predicate.Attachment {
	return predicate.Attachment(sql.FieldLT(FieldCreateBy, v))
}

// CreateByLTE applies the LTE predicate on the "create_by" field.
func CreateByLTE(v int64) predicate.Attachment {
	return predicate.Attachment(sql.FieldLTE(FieldCreateBy, v))
}

// CreateByIsNil applies the IsNil predicate on the "create_by" field.
func CreateByIsNil() predicate.Attachment {
	return predicate.Attachment(sql.FieldIsNull(FieldCreateBy))
}

// CreateByNotNil applies the NotNil predicate on the "create_by" field.
func CreateByNotNil() predicate.Attachment {
	return predicate.Attachment(sql.FieldNotNull(FieldCreateBy))
}

// UpdateTimeEQ applies the EQ predicate on the "update_time" field.
func UpdateTimeEQ(v time.Time) predicate.Attachment {
	return predicate.Attachment(sql.FieldEQ(FieldUpdateTime, v))
}

// UpdateTimeNEQ applies the NEQ predicate on the "update_time" field.
func UpdateTimeNEQ(v time.Time) predicate.Attachment {
	return predicate.Attachment(sql.FieldNEQ(FieldUpdateTime, v))
}

// UpdateTimeIn applies the In predicate on the "update_time" field.
func UpdateTimeIn(vs ...time.Time) predicate.Attachment {
	return predicate.Attachment(sql.FieldIn(FieldUpdateTime, vs...))
}

// UpdateTimeNotIn applies the NotIn predicate on the "update_time" field.
func UpdateTimeNotIn(vs ...time.Time) predicate.Attachment {
	return predicate.Attachment(sql.FieldNotIn(FieldUpdateTime, vs...))
}

// UpdateTimeGT applies the GT predicate on the "update_time" field.
func UpdateTimeGT(v time.Time) predicate.Attachment {
	return predicate.Attachment(sql.FieldGT(FieldUpdateTime, v))
}

// UpdateTimeGTE applies the GTE predicate on the "update_time" field.
func UpdateTimeGTE(v time.Time) predicate.Attachment {
	return predicate.Attachment(sql.FieldGTE(FieldUpdateTime, v))
}

// UpdateTimeLT applies the LT predicate on the "update_time" field.
func UpdateTimeLT(v time.Time) predicate.Attachment {
	return predicate.Attachment(sql.FieldLT(FieldUpdateTime, v))
}

// UpdateTimeLTE applies the LTE predicate on the "update_time" field.
func UpdateTimeLTE(v time.Time) predicate.Attachment {
	return predicate.Attachment(sql.FieldLTE(FieldUpdateTime, v))
}

// UpdateByEQ applies the EQ predicate on the "update_by" field.
func UpdateByEQ(v int64) predicate.Attachment {
	return predicate.Attachment(sql.FieldEQ(FieldUpdateBy, v))
}

// UpdateByNEQ applies the NEQ predicate on the "update_by" field.
func UpdateByNEQ(v int64) predicate.Attachment {
	return predicate.Attachment(sql.FieldNEQ(FieldUpdateBy, v))
}

// UpdateByIn applies the In predicate on the "update_by" field.
func UpdateByIn(vs ...int64) predicate.Attachment {
	return predicate.Attachment(sql.FieldIn(FieldUpdateBy, vs...))
}

// UpdateByNotIn applies the NotIn predicate on the "update_by" field.
func UpdateByNotIn(vs ...int64) predicate.Attachment {
	return predicate.Attachment(sql.FieldNotIn(FieldUpdateBy, vs...))
}

// UpdateByGT applies the GT predicate on the "update_by" field.
func UpdateByGT(v int64) predicate.Attachment {
	return predicate.Attachment(sql.FieldGT(FieldUpdateBy, v))
}

// UpdateByGTE applies the GTE predicate on the "update_by" field.
func UpdateByGTE(v int64) predicate.Attachment {
	return predicate.Attachment(sql.FieldGTE(FieldUpdateBy, v))
}

// UpdateByLT applies the LT predicate on the "update_by" field.
func UpdateByLT(v int64) predicate.Attachment {
	return predicate.Attachment(sql.FieldLT(FieldUpdateBy, v))
}

// UpdateByLTE applies the LTE predicate on the "update_by" field.
func UpdateByLTE(v int64) predicate.Attachment {
	return predicate.Attachment(sql.FieldLTE(FieldUpdateBy, v))
}

// UpdateByIsNil applies the IsNil predicate on the "update_by" field.
func UpdateByIsNil() predicate.Attachment {
	return predicate.Attachment(sql.FieldIsNull(FieldUpdateBy))
}

// UpdateByNotNil applies the NotNil predicate on the "update_by" field.
func UpdateByNotNil() predicate.Attachment {
	return predicate.Attachment(sql.FieldNotNull(FieldUpdateBy))
}

// DeleteTimeEQ applies the EQ predicate on the "delete_time" field.
func DeleteTimeEQ(v time.Time) predicate.Attachment {
	return predicate.Attachment(sql.FieldEQ(FieldDeleteTime, v))
}

// DeleteTimeNEQ applies the NEQ predicate on the "delete_time" field.
func DeleteTimeNEQ(v time.Time) predicate.Attachment {
	return predicate.Attachment(sql.FieldNEQ(FieldDeleteTime, v))
}

// DeleteTimeIn applies the In predicate on the "delete_time" field.
func DeleteTimeIn(vs ...time.Time) predicate.Attachment {
	return predicate.Attachment(sql.FieldIn(FieldDeleteTime, vs...))
}

// DeleteTimeNotIn applies the NotIn predicate on the "delete_time" field.
func DeleteTimeNotIn(vs ...time.Time) predicate.Attachment {
	return predicate.Attachment(sql.FieldNotIn(FieldDeleteTime, vs...))
}

// DeleteTimeGT applies the GT predicate on the "delete_time" field.
func DeleteTimeGT(v time.Time) predicate.Attachment {
	return predicate.Attachment(sql.FieldGT(FieldDeleteTime, v))
}

// DeleteTimeGTE applies the GTE predicate on the "delete_time" field.
func DeleteTimeGTE(v time.Time) predicate.Attachment {
	return predicate.Attachment(sql.FieldGTE(FieldDeleteTime, v))
}

// DeleteTimeLT applies the LT predicate on the "delete_time" field.
func DeleteTimeLT(v time.Time) predicate.Attachment {
	return predicate.Attachment(sql.FieldLT(FieldDeleteTime, v))
}

// DeleteTimeLTE applies the LTE predicate on the "delete_time" field.
func DeleteTimeLTE(v time.Time) predicate.Attachment {
	return predicate.Attachment(sql.FieldLTE(FieldDeleteTime, v))
}

// DeleteTimeIsNil applies the IsNil predicate on the "delete_time" field.
func DeleteTimeIsNil() predicate.Attachment {
	return predicate.Attachment(sql.FieldIsNull(FieldDeleteTime))
}

// DeleteTimeNotNil applies the NotNil predicate on the "delete_time" field.
func DeleteTimeNotNil() predicate.Attachment {
	return predicate.Attachment(sql.FieldNotNull(FieldDeleteTime))
}

// DeleteByEQ applies the EQ predicate on the "delete_by" field.
func DeleteByEQ(v int64) predicate.Attachment {
	return predicate.Attachment(sql.FieldEQ(FieldDeleteBy, v))
}

// DeleteByNEQ applies the NEQ predicate on the "delete_by" field.
func DeleteByNEQ(v int64) predicate.Attachment {
	return predicate.Attachment(sql.FieldNEQ(FieldDeleteBy, v))
}

// DeleteByIn applies the In predicate on the "delete_by" field.
func DeleteByIn(vs ...int64) predicate.Attachment {
	return predicate.Attachment(sql.FieldIn(FieldDeleteBy, vs...))
}

// DeleteByNotIn applies the NotIn predicate on the "delete_by" field.
func DeleteByNotIn(vs ...int64) predicate.Attachment {
	return predicate.Attachment(sql.FieldNotIn(FieldDeleteBy, vs...))
}

// DeleteByGT applies the GT predicate on the "delete_by" field.
func DeleteByGT(v int64) predicate.Attachment {
	return predicate.Attachment(sql.FieldGT(FieldDeleteBy, v))
}

// DeleteByGTE applies the GTE predicate on the "delete_by" field.
func DeleteByGTE(v int64) predicate.Attachment {
	return predicate.Attachment(sql.FieldGTE(FieldDeleteBy, v))
}

// DeleteByLT applies the LT predicate on the "delete_by" field.
func DeleteByLT(v int64) predicate.Attachment {
	return predicate.Attachment(sql.FieldLT(FieldDeleteBy, v))
}

// DeleteByLTE applies the LTE predicate on the "delete_by" field.
func DeleteByLTE(v int64) predicate.Attachment {
	return predicate.Attachment(sql.FieldLTE(FieldDeleteBy, v))
}

// DeleteByIsNil applies the IsNil predicate on the "delete_by" field.
func DeleteByIsNil() predicate.Attachment {
	return predicate.Attachment(sql.FieldIsNull(FieldDeleteBy))
}

// DeleteByNotNil applies the NotNil predicate on the "delete_by" field.
func DeleteByNotNil() predicate.Attachment {
	return predicate.Attachment(sql.FieldNotNull(FieldDeleteBy))
}

// FilenameEQ applies the EQ predicate on the "filename" field.
func FilenameEQ(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldEQ(FieldFilename, v))
}

// FilenameNEQ applies the NEQ predicate on the "filename" field.
func FilenameNEQ(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldNEQ(FieldFilename, v))
}

// FilenameIn applies the In predicate on the "filename" field.
func FilenameIn(vs ...string) predicate.Attachment {
	return predicate.Attachment(sql.FieldIn(FieldFilename, vs...))
}

// FilenameNotIn applies the NotIn predicate on the "filename" field.
func FilenameNotIn(vs ...string) predicate.Attachment {
	return predicate.Attachment(sql.FieldNotIn(FieldFilename, vs...))
}

// FilenameGT applies the GT predicate on the "filename" field.
func FilenameGT(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldGT(FieldFilename, v))
}

// FilenameGTE applies the GTE predicate on the "filename" field.
func FilenameGTE(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldGTE(FieldFilename, v))
}

// FilenameLT applies the LT predicate on the "filename" field.
func FilenameLT(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldLT(FieldFilename, v))
}

// FilenameLTE applies the LTE predicate on the "filename" field.
func FilenameLTE(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldLTE(FieldFilename, v))
}

// FilenameContains applies the Contains predicate on the "filename" field.
func FilenameContains(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldContains(FieldFilename, v))
}

// FilenameHasPrefix applies the HasPrefix predicate on the "filename" field.
func FilenameHasPrefix(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldHasPrefix(FieldFilename, v))
}

// FilenameHasSuffix applies the HasSuffix predicate on the "filename" field.
func FilenameHasSuffix(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldHasSuffix(FieldFilename, v))
}

// FilenameEqualFold applies the EqualFold predicate on the "filename" field.
func FilenameEqualFold(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldEqualFold(FieldFilename, v))
}

// FilenameContainsFold applies the ContainsFold predicate on the "filename" field.
func FilenameContainsFold(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldContainsFold(FieldFilename, v))
}

// PathEQ applies the EQ predicate on the "path" field.
func PathEQ(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldEQ(FieldPath, v))
}

// PathNEQ applies the NEQ predicate on the "path" field.
func PathNEQ(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldNEQ(FieldPath, v))
}

// PathIn applies the In predicate on the "path" field.
func PathIn(vs ...string) predicate.Attachment {
	return predicate.Attachment(sql.FieldIn(FieldPath, vs...))
}

// PathNotIn applies the NotIn predicate on the "path" field.
func PathNotIn(vs ...string) predicate.Attachment {
	return predicate.Attachment(sql.FieldNotIn(FieldPath, vs...))
}

// PathGT applies the GT predicate on the "path" field.
func PathGT(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldGT(FieldPath, v))
}

// PathGTE applies the GTE predicate on the "path" field.
func PathGTE(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldGTE(FieldPath, v))
}

// PathLT applies the LT predicate on the "path" field.
func PathLT(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldLT(FieldPath, v))
}

// PathLTE applies the LTE predicate on the "path" field.
func PathLTE(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldLTE(FieldPath, v))
}

// PathContains applies the Contains predicate on the "path" field.
func PathContains(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldContains(FieldPath, v))
}

// PathHasPrefix applies the HasPrefix predicate on the "path" field.
func PathHasPrefix(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldHasPrefix(FieldPath, v))
}

// PathHasSuffix applies the HasSuffix predicate on the "path" field.
func PathHasSuffix(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldHasSuffix(FieldPath, v))
}

// PathEqualFold applies the EqualFold predicate on the "path" field.
func PathEqualFold(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldEqualFold(FieldPath, v))
}

// PathContainsFold applies the ContainsFold predicate on the "path" field.
func PathContainsFold(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldContainsFold(FieldPath, v))
}

// URLEQ applies the EQ predicate on the "url" field.
func URLEQ(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldEQ(FieldURL, v))
}

// URLNEQ applies the NEQ predicate on the "url" field.
func URLNEQ(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldNEQ(FieldURL, v))
}

// URLIn applies the In predicate on the "url" field.
func URLIn(vs ...string) predicate.Attachment {
	return predicate.Attachment(sql.FieldIn(FieldURL, vs...))
}

// URLNotIn applies the NotIn predicate on the "url" field.
func URLNotIn(vs ...string) predicate.Attachment {
	return predicate.Attachment(sql.FieldNotIn(FieldURL, vs...))
}

// URLGT applies the GT predicate on the "url" field.
func URLGT(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldGT(FieldURL, v))
}

// URLGTE applies the GTE predicate on the "url" field.
func URLGTE(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldGTE(FieldURL, v))
}

// URLLT applies the LT predicate on the "url" field.
func URLLT(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldLT(FieldURL, v))
}

// URLLTE applies the LTE predicate on the "url" field.
func URLLTE(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldLTE(FieldURL, v))
}

// URLContains applies the Contains predicate on the "url" field.
func URLContains(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldContains(FieldURL, v))
}

// URLHasPrefix applies the HasPrefix predicate on the "url" field.
func URLHasPrefix(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldHasPrefix(FieldURL, v))
}

// URLHasSuffix applies the HasSuffix predicate on the "url" field.
func URLHasSuffix(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldHasSuffix(FieldURL, v))
}

// URLIsNil applies the IsNil predicate on the "url" field.
func URLIsNil() predicate.Attachment {
	return predicate.Attachment(sql.FieldIsNull(FieldURL))
}

// URLNotNil applies the NotNil predicate on the "url" field.
func URLNotNil() predicate.Attachment {
	return predicate.Attachment(sql.FieldNotNull(FieldURL))
}

// URLEqualFold applies the EqualFold predicate on the "url" field.
func URLEqualFold(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldEqualFold(FieldURL, v))
}

// URLContainsFold applies the ContainsFold predicate on the "url" field.
func URLContainsFold(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldContainsFold(FieldURL, v))
}

// ContentTypeEQ applies the EQ predicate on the "content_type" field.
func ContentTypeEQ(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldEQ(FieldContentType, v))
}

// ContentTypeNEQ applies the NEQ predicate on the "content_type" field.
func ContentTypeNEQ(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldNEQ(FieldContentType, v))
}

// ContentTypeIn applies the In predicate on the "content_type" field.
func ContentTypeIn(vs ...string) predicate.Attachment {
	return predicate.Attachment(sql.FieldIn(FieldContentType, vs...))
}

// ContentTypeNotIn applies the NotIn predicate on the "content_type" field.
func ContentTypeNotIn(vs ...string) predicate.Attachment {
	return predicate.Attachment(sql.FieldNotIn(FieldContentType, vs...))
}

// ContentTypeGT applies the GT predicate on the "content_type" field.
func ContentTypeGT(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldGT(FieldContentType, v))
}

// ContentTypeGTE applies the GTE predicate on the "content_type" field.
func ContentTypeGTE(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldGTE(FieldContentType, v))
}

// ContentTypeLT applies the LT predicate on the "content_type" field.
func ContentTypeLT(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldLT(FieldContentType, v))
}

// ContentTypeLTE applies the LTE predicate on the "content_type" field.
func ContentTypeLTE(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldLTE(FieldContentType, v))
}

// ContentTypeContains applies the Contains predicate on the "content_type" field.
func ContentTypeContains(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldContains(FieldContentType, v))
}

// ContentTypeHasPrefix applies the HasPrefix predicate on the "content_type" field.
func ContentTypeHasPrefix(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldHasPrefix(FieldContentType, v))
}

// ContentTypeHasSuffix applies the HasSuffix predicate on the "content_type" field.
func ContentTypeHasSuffix(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldHasSuffix(FieldContentType, v))
}

// ContentTypeEqualFold applies the EqualFold predicate on the "content_type" field.
func ContentTypeEqualFold(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldEqualFold(FieldContentType, v))
}

// ContentTypeContainsFold applies the ContainsFold predicate on the "content_type" field.
func ContentTypeContainsFold(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldContainsFold(FieldContentType, v))
}

// SizeEQ applies the EQ predicate on the "size" field.
func SizeEQ(v int64) predicate.Attachment {
	return predicate.Attachment(sql.FieldEQ(FieldSize, v))
}

// SizeNEQ applies the NEQ predicate on the "size" field.
func SizeNEQ(v int64) predicate.Attachment {
	return predicate.Attachment(sql.FieldNEQ(FieldSize, v))
}

// SizeIn applies the In predicate on the "size" field.
func SizeIn(vs ...int64) predicate.Attachment {
	return predicate.Attachment(sql.FieldIn(FieldSize, vs...))
}

// SizeNotIn applies the NotIn predicate on the "size" field.
func SizeNotIn(vs ...int64) predicate.Attachment {
	return predicate.Attachment(sql.FieldNotIn(FieldSize, vs...))
}

// SizeGT applies the GT predicate on the "size" field.
func SizeGT(v int64) predicate.Attachment {
	return predicate.Attachment(sql.FieldGT(FieldSize, v))
}

// SizeGTE applies the GTE predicate on the "size" field.
func SizeGTE(v int64) predicate.Attachment {
	return predicate.Attachment(sql.FieldGTE(FieldSize, v))
}

// SizeLT applies the LT predicate on the "size" field.
func SizeLT(v int64) predicate.Attachment {
	return predicate.Attachment(sql.FieldLT(FieldSize, v))
}

// SizeLTE applies the LTE predicate on the "size" field.
func SizeLTE(v int64) predicate.Attachment {
	return predicate.Attachment(sql.FieldLTE(FieldSize, v))
}

// EtagEQ applies the EQ predicate on the "etag" field.
func EtagEQ(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldEQ(FieldEtag, v))
}

// EtagNEQ applies the NEQ predicate on the "etag" field.
func EtagNEQ(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldNEQ(FieldEtag, v))
}

// EtagIn applies the In predicate on the "etag" field.
func EtagIn(vs ...string) predicate.Attachment {
	return predicate.Attachment(sql.FieldIn(FieldEtag, vs...))
}

// EtagNotIn applies the NotIn predicate on the "etag" field.
func EtagNotIn(vs ...string) predicate.Attachment {
	return predicate.Attachment(sql.FieldNotIn(FieldEtag, vs...))
}

// EtagGT applies the GT predicate on the "etag" field.
func EtagGT(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldGT(FieldEtag, v))
}

// EtagGTE applies the GTE predicate on the "etag" field.
func EtagGTE(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldGTE(FieldEtag, v))
}

// EtagLT applies the LT predicate on the "etag" field.
func EtagLT(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldLT(FieldEtag, v))
}

// EtagLTE applies the LTE predicate on the "etag" field.
func EtagLTE(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldLTE(FieldEtag, v))
}

// EtagContains applies the Contains predicate on the "etag" field.
func EtagContains(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldContains(FieldEtag, v))
}

// EtagHasPrefix applies the HasPrefix predicate on the "etag" field.
func EtagHasPrefix(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldHasPrefix(FieldEtag, v))
}

// EtagHasSuffix applies the HasSuffix predicate on the "etag" field.
func EtagHasSuffix(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldHasSuffix(FieldEtag, v))
}

// EtagIsNil applies the IsNil predicate on the "etag" field.
func EtagIsNil() predicate.Attachment {
	return predicate.Attachment(sql.FieldIsNull(FieldEtag))
}

// EtagNotNil applies the NotNil predicate on the "etag" field.
func EtagNotNil() predicate.Attachment {
	return predicate.Attachment(sql.FieldNotNull(FieldEtag))
}

// EtagEqualFold applies the EqualFold predicate on the "etag" field.
func EtagEqualFold(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldEqualFold(FieldEtag, v))
}

// EtagContainsFold applies the ContainsFold predicate on the "etag" field.
func EtagContainsFold(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldContainsFold(FieldEtag, v))
}

// BucketEQ applies the EQ predicate on the "bucket" field.
func BucketEQ(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldEQ(FieldBucket, v))
}

// BucketNEQ applies the NEQ predicate on the "bucket" field.
func BucketNEQ(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldNEQ(FieldBucket, v))
}

// BucketIn applies the In predicate on the "bucket" field.
func BucketIn(vs ...string) predicate.Attachment {
	return predicate.Attachment(sql.FieldIn(FieldBucket, vs...))
}

// BucketNotIn applies the NotIn predicate on the "bucket" field.
func BucketNotIn(vs ...string) predicate.Attachment {
	return predicate.Attachment(sql.FieldNotIn(FieldBucket, vs...))
}

// BucketGT applies the GT predicate on the "bucket" field.
func BucketGT(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldGT(FieldBucket, v))
}

// BucketGTE applies the GTE predicate on the "bucket" field.
func BucketGTE(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldGTE(FieldBucket, v))
}

// BucketLT applies the LT predicate on the "bucket" field.
func BucketLT(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldLT(FieldBucket, v))
}

// BucketLTE applies the LTE predicate on the "bucket" field.
func BucketLTE(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldLTE(FieldBucket, v))
}

// BucketContains applies the Contains predicate on the "bucket" field.
func BucketContains(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldContains(FieldBucket, v))
}

// BucketHasPrefix applies the HasPrefix predicate on the "bucket" field.
func BucketHasPrefix(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldHasPrefix(FieldBucket, v))
}

// BucketHasSuffix applies the HasSuffix predicate on the "bucket" field.
func BucketHasSuffix(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldHasSuffix(FieldBucket, v))
}

// BucketEqualFold applies the EqualFold predicate on the "bucket" field.
func BucketEqualFold(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldEqualFold(FieldBucket, v))
}

// BucketContainsFold applies the ContainsFold predicate on the "bucket" field.
func BucketContainsFold(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldContainsFold(FieldBucket, v))
}

// StorageProviderEQ applies the EQ predicate on the "storage_provider" field.
func StorageProviderEQ(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldEQ(FieldStorageProvider, v))
}

// StorageProviderNEQ applies the NEQ predicate on the "storage_provider" field.
func StorageProviderNEQ(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldNEQ(FieldStorageProvider, v))
}

// StorageProviderIn applies the In predicate on the "storage_provider" field.
func StorageProviderIn(vs ...string) predicate.Attachment {
	return predicate.Attachment(sql.FieldIn(FieldStorageProvider, vs...))
}

// StorageProviderNotIn applies the NotIn predicate on the "storage_provider" field.
func StorageProviderNotIn(vs ...string) predicate.Attachment {
	return predicate.Attachment(sql.FieldNotIn(FieldStorageProvider, vs...))
}

// StorageProviderGT applies the GT predicate on the "storage_provider" field.
func StorageProviderGT(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldGT(FieldStorageProvider, v))
}

// StorageProviderGTE applies the GTE predicate on the "storage_provider" field.
func StorageProviderGTE(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldGTE(FieldStorageProvider, v))
}

// StorageProviderLT applies the LT predicate on the "storage_provider" field.
func StorageProviderLT(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldLT(FieldStorageProvider, v))
}

// StorageProviderLTE applies the LTE predicate on the "storage_provider" field.
func StorageProviderLTE(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldLTE(FieldStorageProvider, v))
}

// StorageProviderContains applies the Contains predicate on the "storage_provider" field.
func StorageProviderContains(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldContains(FieldStorageProvider, v))
}

// StorageProviderHasPrefix applies the HasPrefix predicate on the "storage_provider" field.
func StorageProviderHasPrefix(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldHasPrefix(FieldStorageProvider, v))
}

// StorageProviderHasSuffix applies the HasSuffix predicate on the "storage_provider" field.
func StorageProviderHasSuffix(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldHasSuffix(FieldStorageProvider, v))
}

// StorageProviderEqualFold applies the EqualFold predicate on the "storage_provider" field.
func StorageProviderEqualFold(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldEqualFold(FieldStorageProvider, v))
}

// StorageProviderContainsFold applies the ContainsFold predicate on the "storage_provider" field.
func StorageProviderContainsFold(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldContainsFold(FieldStorageProvider, v))
}

// MetadataIsNil applies the IsNil predicate on the "metadata" field.
func MetadataIsNil() predicate.Attachment {
	return predicate.Attachment(sql.FieldIsNull(FieldMetadata))
}

// MetadataNotNil applies the NotNil predicate on the "metadata" field.
func MetadataNotNil() predicate.Attachment {
	return predicate.Attachment(sql.FieldNotNull(FieldMetadata))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v Status) predicate.Attachment {
	return predicate.Attachment(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v Status) predicate.Attachment {
	return predicate.Attachment(sql.FieldNEQ(FieldStatus, v))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...Status) predicate.Attachment {
	return predicate.Attachment(sql.FieldIn(FieldStatus, vs...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...Status) predicate.Attachment {
	return predicate.Attachment(sql.FieldNotIn(FieldStatus, vs...))
}

// UploadSessionIDEQ applies the EQ predicate on the "upload_session_id" field.
func UploadSessionIDEQ(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldEQ(FieldUploadSessionID, v))
}

// UploadSessionIDNEQ applies the NEQ predicate on the "upload_session_id" field.
func UploadSessionIDNEQ(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldNEQ(FieldUploadSessionID, v))
}

// UploadSessionIDIn applies the In predicate on the "upload_session_id" field.
func UploadSessionIDIn(vs ...string) predicate.Attachment {
	return predicate.Attachment(sql.FieldIn(FieldUploadSessionID, vs...))
}

// UploadSessionIDNotIn applies the NotIn predicate on the "upload_session_id" field.
func UploadSessionIDNotIn(vs ...string) predicate.Attachment {
	return predicate.Attachment(sql.FieldNotIn(FieldUploadSessionID, vs...))
}

// UploadSessionIDGT applies the GT predicate on the "upload_session_id" field.
func UploadSessionIDGT(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldGT(FieldUploadSessionID, v))
}

// UploadSessionIDGTE applies the GTE predicate on the "upload_session_id" field.
func UploadSessionIDGTE(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldGTE(FieldUploadSessionID, v))
}

// UploadSessionIDLT applies the LT predicate on the "upload_session_id" field.
func UploadSessionIDLT(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldLT(FieldUploadSessionID, v))
}

// UploadSessionIDLTE applies the LTE predicate on the "upload_session_id" field.
func UploadSessionIDLTE(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldLTE(FieldUploadSessionID, v))
}

// UploadSessionIDContains applies the Contains predicate on the "upload_session_id" field.
func UploadSessionIDContains(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldContains(FieldUploadSessionID, v))
}

// UploadSessionIDHasPrefix applies the HasPrefix predicate on the "upload_session_id" field.
func UploadSessionIDHasPrefix(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldHasPrefix(FieldUploadSessionID, v))
}

// UploadSessionIDHasSuffix applies the HasSuffix predicate on the "upload_session_id" field.
func UploadSessionIDHasSuffix(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldHasSuffix(FieldUploadSessionID, v))
}

// UploadSessionIDIsNil applies the IsNil predicate on the "upload_session_id" field.
func UploadSessionIDIsNil() predicate.Attachment {
	return predicate.Attachment(sql.FieldIsNull(FieldUploadSessionID))
}

// UploadSessionIDNotNil applies the NotNil predicate on the "upload_session_id" field.
func UploadSessionIDNotNil() predicate.Attachment {
	return predicate.Attachment(sql.FieldNotNull(FieldUploadSessionID))
}

// UploadSessionIDEqualFold applies the EqualFold predicate on the "upload_session_id" field.
func UploadSessionIDEqualFold(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldEqualFold(FieldUploadSessionID, v))
}

// UploadSessionIDContainsFold applies the ContainsFold predicate on the "upload_session_id" field.
func UploadSessionIDContainsFold(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldContainsFold(FieldUploadSessionID, v))
}

// Tag1EQ applies the EQ predicate on the "tag1" field.
func Tag1EQ(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldEQ(FieldTag1, v))
}

// Tag1NEQ applies the NEQ predicate on the "tag1" field.
func Tag1NEQ(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldNEQ(FieldTag1, v))
}

// Tag1In applies the In predicate on the "tag1" field.
func Tag1In(vs ...string) predicate.Attachment {
	return predicate.Attachment(sql.FieldIn(FieldTag1, vs...))
}

// Tag1NotIn applies the NotIn predicate on the "tag1" field.
func Tag1NotIn(vs ...string) predicate.Attachment {
	return predicate.Attachment(sql.FieldNotIn(FieldTag1, vs...))
}

// Tag1GT applies the GT predicate on the "tag1" field.
func Tag1GT(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldGT(FieldTag1, v))
}

// Tag1GTE applies the GTE predicate on the "tag1" field.
func Tag1GTE(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldGTE(FieldTag1, v))
}

// Tag1LT applies the LT predicate on the "tag1" field.
func Tag1LT(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldLT(FieldTag1, v))
}

// Tag1LTE applies the LTE predicate on the "tag1" field.
func Tag1LTE(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldLTE(FieldTag1, v))
}

// Tag1Contains applies the Contains predicate on the "tag1" field.
func Tag1Contains(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldContains(FieldTag1, v))
}

// Tag1HasPrefix applies the HasPrefix predicate on the "tag1" field.
func Tag1HasPrefix(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldHasPrefix(FieldTag1, v))
}

// Tag1HasSuffix applies the HasSuffix predicate on the "tag1" field.
func Tag1HasSuffix(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldHasSuffix(FieldTag1, v))
}

// Tag1IsNil applies the IsNil predicate on the "tag1" field.
func Tag1IsNil() predicate.Attachment {
	return predicate.Attachment(sql.FieldIsNull(FieldTag1))
}

// Tag1NotNil applies the NotNil predicate on the "tag1" field.
func Tag1NotNil() predicate.Attachment {
	return predicate.Attachment(sql.FieldNotNull(FieldTag1))
}

// Tag1EqualFold applies the EqualFold predicate on the "tag1" field.
func Tag1EqualFold(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldEqualFold(FieldTag1, v))
}

// Tag1ContainsFold applies the ContainsFold predicate on the "tag1" field.
func Tag1ContainsFold(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldContainsFold(FieldTag1, v))
}

// Tag2EQ applies the EQ predicate on the "tag2" field.
func Tag2EQ(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldEQ(FieldTag2, v))
}

// Tag2NEQ applies the NEQ predicate on the "tag2" field.
func Tag2NEQ(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldNEQ(FieldTag2, v))
}

// Tag2In applies the In predicate on the "tag2" field.
func Tag2In(vs ...string) predicate.Attachment {
	return predicate.Attachment(sql.FieldIn(FieldTag2, vs...))
}

// Tag2NotIn applies the NotIn predicate on the "tag2" field.
func Tag2NotIn(vs ...string) predicate.Attachment {
	return predicate.Attachment(sql.FieldNotIn(FieldTag2, vs...))
}

// Tag2GT applies the GT predicate on the "tag2" field.
func Tag2GT(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldGT(FieldTag2, v))
}

// Tag2GTE applies the GTE predicate on the "tag2" field.
func Tag2GTE(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldGTE(FieldTag2, v))
}

// Tag2LT applies the LT predicate on the "tag2" field.
func Tag2LT(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldLT(FieldTag2, v))
}

// Tag2LTE applies the LTE predicate on the "tag2" field.
func Tag2LTE(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldLTE(FieldTag2, v))
}

// Tag2Contains applies the Contains predicate on the "tag2" field.
func Tag2Contains(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldContains(FieldTag2, v))
}

// Tag2HasPrefix applies the HasPrefix predicate on the "tag2" field.
func Tag2HasPrefix(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldHasPrefix(FieldTag2, v))
}

// Tag2HasSuffix applies the HasSuffix predicate on the "tag2" field.
func Tag2HasSuffix(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldHasSuffix(FieldTag2, v))
}

// Tag2IsNil applies the IsNil predicate on the "tag2" field.
func Tag2IsNil() predicate.Attachment {
	return predicate.Attachment(sql.FieldIsNull(FieldTag2))
}

// Tag2NotNil applies the NotNil predicate on the "tag2" field.
func Tag2NotNil() predicate.Attachment {
	return predicate.Attachment(sql.FieldNotNull(FieldTag2))
}

// Tag2EqualFold applies the EqualFold predicate on the "tag2" field.
func Tag2EqualFold(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldEqualFold(FieldTag2, v))
}

// Tag2ContainsFold applies the ContainsFold predicate on the "tag2" field.
func Tag2ContainsFold(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldContainsFold(FieldTag2, v))
}

// Tag3EQ applies the EQ predicate on the "tag3" field.
func Tag3EQ(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldEQ(FieldTag3, v))
}

// Tag3NEQ applies the NEQ predicate on the "tag3" field.
func Tag3NEQ(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldNEQ(FieldTag3, v))
}

// Tag3In applies the In predicate on the "tag3" field.
func Tag3In(vs ...string) predicate.Attachment {
	return predicate.Attachment(sql.FieldIn(FieldTag3, vs...))
}

// Tag3NotIn applies the NotIn predicate on the "tag3" field.
func Tag3NotIn(vs ...string) predicate.Attachment {
	return predicate.Attachment(sql.FieldNotIn(FieldTag3, vs...))
}

// Tag3GT applies the GT predicate on the "tag3" field.
func Tag3GT(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldGT(FieldTag3, v))
}

// Tag3GTE applies the GTE predicate on the "tag3" field.
func Tag3GTE(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldGTE(FieldTag3, v))
}

// Tag3LT applies the LT predicate on the "tag3" field.
func Tag3LT(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldLT(FieldTag3, v))
}

// Tag3LTE applies the LTE predicate on the "tag3" field.
func Tag3LTE(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldLTE(FieldTag3, v))
}

// Tag3Contains applies the Contains predicate on the "tag3" field.
func Tag3Contains(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldContains(FieldTag3, v))
}

// Tag3HasPrefix applies the HasPrefix predicate on the "tag3" field.
func Tag3HasPrefix(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldHasPrefix(FieldTag3, v))
}

// Tag3HasSuffix applies the HasSuffix predicate on the "tag3" field.
func Tag3HasSuffix(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldHasSuffix(FieldTag3, v))
}

// Tag3IsNil applies the IsNil predicate on the "tag3" field.
func Tag3IsNil() predicate.Attachment {
	return predicate.Attachment(sql.FieldIsNull(FieldTag3))
}

// Tag3NotNil applies the NotNil predicate on the "tag3" field.
func Tag3NotNil() predicate.Attachment {
	return predicate.Attachment(sql.FieldNotNull(FieldTag3))
}

// Tag3EqualFold applies the EqualFold predicate on the "tag3" field.
func Tag3EqualFold(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldEqualFold(FieldTag3, v))
}

// Tag3ContainsFold applies the ContainsFold predicate on the "tag3" field.
func Tag3ContainsFold(v string) predicate.Attachment {
	return predicate.Attachment(sql.FieldContainsFold(FieldTag3, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Attachment) predicate.Attachment {
	return predicate.Attachment(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Attachment) predicate.Attachment {
	return predicate.Attachment(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Attachment) predicate.Attachment {
	return predicate.Attachment(sql.NotPredicates(p))
}
